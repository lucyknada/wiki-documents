"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[83764],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>c});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},y=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),d=p(n),y=r,c=d["".concat(s,".").concat(y)]||d[y]||m[y]||i;return n?a.createElement(c,o(o({ref:t},g),{},{components:n})):a.createElement(c,o({ref:t},g))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}y.displayName="MDXCreateElement"},13507:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(58168),r=(n(96540),n(15680));const i={title:"Grove - Ultrasonic Ranger",nointro:null,keywords:["docs","docusaurus"],image:"https://wiki.seeedstudio.com/Grove-Ultrasonic_Ranger/",slug:"/Grove-Ultrasonic_Ranger",last_update:{date:"03/01/2023",author:"gunengyu"}},o=void 0,l={unversionedId:"Sensor/Grove/Grove_Sensors/Proximity/Grove-Ultrasonic_Ranger",id:"Sensor/Grove/Grove_Sensors/Proximity/Grove-Ultrasonic_Ranger",title:"Grove - Ultrasonic Ranger",description:"This Grove - Ultrasonic ranger is a non-contact distance measurement module which works at 40KHz. When we provide a pulse trigger signal with more than 10uS through signal pin, the GroveUltrasonicRanger will issue 8 cycles of 40kHz cycle level and detect the echo. The pulse width of the echo signal is proportional to the measured distance. Here is the formula: Distance = echo signal high time * Sound speed (340M/S)/2. GroveUltrasonicRanger's trig and echo signal share 1 SIG pin.",source:"@site/docs/Sensor/Grove/Grove_Sensors/Proximity/Grove-Ultrasonic_Ranger.md",sourceDirName:"Sensor/Grove/Grove_Sensors/Proximity",slug:"/Grove-Ultrasonic_Ranger",permalink:"/Grove-Ultrasonic_Ranger",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/Grove/Grove_Sensors/Proximity/Grove-Ultrasonic_Ranger.md",tags:[],version:"current",lastUpdatedBy:"gunengyu",lastUpdatedAt:1677628800,formattedLastUpdatedAt:"Mar 1, 2023",frontMatter:{title:"Grove - Ultrasonic Ranger",nointro:null,keywords:["docs","docusaurus"],image:"https://wiki.seeedstudio.com/Grove-Ultrasonic_Ranger/",slug:"/Grove-Ultrasonic_Ranger",last_update:{date:"03/01/2023",author:"gunengyu"}},sidebar:"ProductSidebar",previous:{title:"Sensor - Distance(introduction)",permalink:"/Sensor_distance"},next:{title:"Grove - IR Distance Interrupter v1.2",permalink:"/Grove-IR_Distance_Interrupter_v1.2"}},s={},p=[{value:"Version",id:"version",level:2},{value:"Specification",id:"specification",level:2},{value:"Platforms Supported",id:"platforms-supported",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Play With Arduino",id:"play-with-arduino",level:3},{value:"Hardware",id:"hardware",level:4},{value:"Software",id:"software",level:4},{value:"Play with Codecraft",id:"play-with-codecraft",level:3},{value:"Hardware",id:"hardware-1",level:4},{value:"Software",id:"software-1",level:4},{value:"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)",id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi",level:3},{value:"Hardware",id:"hardware-2",level:4},{value:"Software",id:"software-2",level:4},{value:"Play With Raspberry Pi (with GrovePi_Plus)",id:"play-with-raspberry-pi-with-grovepi_plus",level:3},{value:"Hardware",id:"hardware-3",level:4},{value:"Software",id:"software-3",level:4},{value:"Play With Wio Terminal (ArduPy)",id:"play-with-wio-terminal-ardupy",level:3},{value:"Hardware",id:"hardware-4",level:4},{value:"Software",id:"software-4",level:4},{value:"FAQs",id:"faqs",level:2},{value:"Resources",id:"resources",level:2},{value:"Project",id:"project",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],g={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,a.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/V2.jpg",alt:"pir",width:600,height:"auto"})),(0,r.yg)("p",null,"This Grove - Ultrasonic ranger is a non-contact distance measurement module which works at 40KHz. When we provide a pulse trigger signal with more than 10uS through signal pin, the Grove_Ultrasonic_Ranger will issue 8 cycles of 40kHz cycle level and detect the echo. The pulse width of the echo signal is proportional to the measured distance. Here is the formula: Distance = echo signal high time * Sound speed (340M/S)/2. Grove_Ultrasonic_Ranger's trig and echo signal share 1 SIG pin."),(0,r.yg)("admonition",{type:"warning"},(0,r.yg)("p",{parentName:"admonition"}," Do not hot plug Grove-Ultrasonic-Ranger, otherwise it will damage the sensor. The measured area must be no less than 0.5 square meters and smooth.")),(0,r.yg)("p",{style:{textAlign:"center"}},(0,r.yg)("a",{href:"https://www.seeedstudio.com/Grove-Ultrasonic-Ranger-p-960.html",target:"_blank"},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/get_one_now.png",border:0}))),(0,r.yg)("h2",{id:"version"},"Version"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Product Version"),(0,r.yg)("th",{parentName:"tr",align:null},"Changes"),(0,r.yg)("th",{parentName:"tr",align:null},"Released Date"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Grove-Ultrasonic ranger V1.0"),(0,r.yg)("td",{parentName:"tr",align:null},"Initial"),(0,r.yg)("td",{parentName:"tr",align:null},"Mar 2012")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Grove-Ultrasonic ranger V2.0"),(0,r.yg)("td",{parentName:"tr",align:null},"Improve the power stability with low-voltage main board with below changes: 1. Added an capacitance C14 2. Redesigned the layout to make it more tidy 3. Compatible with 3.3V voltage system"),(0,r.yg)("td",{parentName:"tr",align:null},"July 2017")))),(0,r.yg)("h2",{id:"specification"},"Specification"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Value/Range"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Operating voltage"),(0,r.yg)("td",{parentName:"tr",align:"left"},"3.2~5.2V")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Operating current"),(0,r.yg)("td",{parentName:"tr",align:"left"},"8mA")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Ultrasonic frequency"),(0,r.yg)("td",{parentName:"tr",align:"left"},"40kHz")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Measuring range"),(0,r.yg)("td",{parentName:"tr",align:"left"},"2-350cm")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Resolution"),(0,r.yg)("td",{parentName:"tr",align:"left"},"1cm")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Output"),(0,r.yg)("td",{parentName:"tr",align:"left"},"PWM")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Size"),(0,r.yg)("td",{parentName:"tr",align:"left"},"50mm X 25mm X 16mm")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Weight"),(0,r.yg)("td",{parentName:"tr",align:"left"},"13g")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Measurement angle"),(0,r.yg)("td",{parentName:"tr",align:"left"},"15 degree")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Working temperature"),(0,r.yg)("td",{parentName:"tr",align:"left"},"-10~60 degree C")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Trigger signal"),(0,r.yg)("td",{parentName:"tr",align:"left"},"10uS TTL")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},"Echo signal"),(0,r.yg)("td",{parentName:"tr",align:"left"},"TTL")))),(0,r.yg)("admonition",{type:"tip"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"More details about Grove modules please refer to [Grove System](https://wiki.seeedstudio.com/Grove_System/)\n"))),(0,r.yg)("h2",{id:"platforms-supported"},"Platforms Supported"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Arduino"),(0,r.yg)("th",{parentName:"tr",align:null},"Raspberry"),(0,r.yg)("th",{parentName:"tr",align:null},"ArduPy"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/arduino_logo.jpg",alt:null})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/raspberry_pi_logo.jpg",alt:null})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/ArduPy-Logo.png",alt:null}))))),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"The platforms mentioned above as supported is/are an indication of the module's software or theoretical compatibility. We only provide software library or code examples for Arduino platform in most cases. It is not possible to provide software library / demo code for all possible MCU platforms. Hence, users have to write their own software library.\n"))),(0,r.yg)("h2",{id:"getting-started"},"Getting Started"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"If this is the first time you work with Arduino, we firmly recommend you to see [Getting Started with Arduino](https://wiki.seeedstudio.com/Getting_Started_with_Arduino/) before the start.\n"))),(0,r.yg)("h3",{id:"play-with-arduino"},"Play With Arduino"),(0,r.yg)("h4",{id:"hardware"},"Hardware"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Seeeduino V4.2"),(0,r.yg)("th",{parentName:"tr",align:null},"Base Shield"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove - Ultrasonic Ranger"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Light_Sensor/images/gs_1.jpg",alt:"enter image description here"})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Light_Sensor/images/gs_4.jpg",alt:"enter image description here"})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/Ultrasonic_small.jpg",alt:"enter image description here"}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Seeeduino-V4.2-p-2517.html"},"Get One Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Base-Shield-V2-p-1378.html"},"Get One Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Ultrasonic-Ranger-p-960.html"},"Get One Now"))))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Connect Ultrasonic Ranger to port D7 of Grove-Base Shield.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 3.")," Plug Grove - Base Shield into Seeeduino.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 4.")," Connect Seeeduino to PC via a USB cable."))),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/arduino%20connection.jpg",alt:null})),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("p",{parentName:"admonition"}," If we don't have Grove Base Shield, We also can directly connect Grove_Ultrasonic_Ranger to Seeeduino as below.")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Seeeduino"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove-Ultrasonic Ranger"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"5V"),(0,r.yg)("td",{parentName:"tr",align:null},"Red")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"GND"),(0,r.yg)("td",{parentName:"tr",align:null},"Black")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"Not Conencted"),(0,r.yg)("td",{parentName:"tr",align:null},"White")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"D7"),(0,r.yg)("td",{parentName:"tr",align:null},"Yellow")))),(0,r.yg)("h4",{id:"software"},"Software"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 1.")," Download the  ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Studio/Seeed_Arduino_UltrasonicRanger/archive/master.zip"},"UltrasonicRanger Library"),"  from Github.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Refer ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library"},"How to install library")," to install library for Arduino.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 3.")," Copy the code into Arduino IDE and upload. If you do not know how to upload the code, please check ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Upload_Code/"},"how to upload code"),"."))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'#include "Ultrasonic.h"\n\nUltrasonic ultrasonic(7);\nvoid setup()\n{\n Serial.begin(9600);\n}\nvoid loop()\n{\n long RangeInInches;\n long RangeInCentimeters;\n\n Serial.println("The distance to obstacles in front is: ");\n RangeInInches = ultrasonic.MeasureInInches();\n Serial.print(RangeInInches);//0~157 inches\n Serial.println(" inch");\n delay(250);\n\n RangeInCentimeters = ultrasonic.MeasureInCentimeters(); // two measurements should keep an interval\n Serial.print(RangeInCentimeters);//0~400cm\n Serial.println(" cm");\n delay(250);\n}\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 4.")," We will see the distance display on terminal as below.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"The distance to obstacles in front is:\n2 inches\n6 cm\nThe distance to obstacles in front is:\n2 inches\n6 cm\nThe distance to obstacles in front is:\n2 inches\n6 cm\n")),(0,r.yg)("h3",{id:"play-with-codecraft"},"Play with Codecraft"),(0,r.yg)("h4",{id:"hardware-1"},"Hardware"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 1.")," Connect a Grove - Ultrasonic Ranger to port D7 of a Base Shield."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Plug the Base Shield to your Seeeduino/Arduino."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 3.")," Link Seeeduino/Arduino to your PC via an USB cable."),(0,r.yg)("h4",{id:"software-1"},"Software"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 1.")," Open ",(0,r.yg)("a",{parentName:"p",href:"https://ide.chmakered.com/"},"Codecraft"),", add Arduino support, and drag a main procedure to working area."),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"If this is your first time using Codecraft, see also [Guide for Codecraft using Arduino](https://wiki.seeedstudio.com/Guide_for_Codecraft_using_Arduino/).\n"))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Drag blocks as picture below or open the cdc file which can be downloaded at the end of this page."),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/cc_Ultrasonic_Ranger.png",alt:"cc"})),(0,r.yg)("p",null,"Upload the program to your Arduino/Seeeduino."),(0,r.yg)("admonition",{type:"success"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"When the code finishes uploaded, you will see distance displayed in Serial Monitor.\n"))),(0,r.yg)("h3",{id:"play-with-raspberry-pi-with-grove-base-hat-for-raspberry-pi"},"Play With Raspberry Pi (With Grove Base Hat for Raspberry Pi)"),(0,r.yg)("h4",{id:"hardware-2"},"Hardware"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 1"),". Things used in this project:")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove Base Hat for RasPi"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove - Ultrasonic Ranger"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/wiki_english/docs/images/rasp.jpg",alt:"enter image description here"})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Base_Hat_for_Raspberry_Pi/img/thumbnail.jpg",alt:"enter image description here"})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/Ultrasonic_small.jpg",alt:"enter image description here"}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html"},"Get ONE Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Base-Hat-for-Raspberry-Pi-p-3186.html"},"Get ONE Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Ultrasonic-Ranger-p-960.html"},"Get ONE Now"))))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2"),". Plug the Grove Base Hat into Raspberry.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 3"),". Connect the Grove - Ultrasonic Ranger to port D5 of the Base Hat.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 4"),". Connect the Raspberry Pi to PC through USB cable."))),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Base_Hat_for_Raspberry_Pi/img/connect2.jpg",alt:null})),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"For step 3 you are able to connect the ultrasonic ranger to **any GPIO Port** but make sure you change the command with the corresponding port number.\n"))),(0,r.yg)("h4",{id:"software-2"},"Software"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"}," If you are using **Raspberry Pi with Raspberrypi OS >= Bullseye**, you have to use this command line **only with Python3**.\n"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 1"),". Follow ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Grove_Base_Hat_for_Raspberry_Pi/#installation"},"Setting Software")," to configure the development environment.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2"),". Download the source file by cloning the grove.py library."))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"cd ~\ngit clone https://github.com/Seeed-Studio/grove.py\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 3"),". Excute below commands to run the code.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"cd grove.py/grove\npython3 grove_ultrasonic_ranger.py 5 6\n")),(0,r.yg)("p",null,"Following is the grove_ultrasonic_ranger.py code."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"import sys\nimport time\nfrom grove.gpio import GPIO\n\nusleep = lambda x: time.sleep(x / 1000000.0)\n\n_TIMEOUT1 = 1000\n_TIMEOUT2 = 10000\n\nclass GroveUltrasonicRanger(object):\n    def __init__(self, pin):\n        self.dio =GPIO(pin)\n\n    def _get_distance(self):\n        self.dio.dir(GPIO.OUT)\n        self.dio.write(0)\n        usleep(2)\n        self.dio.write(1)\n        usleep(10)\n        self.dio.write(0)\n\n        self.dio.dir(GPIO.IN)\n\n        t0 = time.time()\n        count = 0\n        while count < _TIMEOUT1:\n            if self.dio.read():\n                break\n            count += 1\n        if count >= _TIMEOUT1:\n            return None\n\n        t1 = time.time()\n        count = 0\n        while count < _TIMEOUT2:\n            if not self.dio.read():\n                break\n            count += 1\n        if count >= _TIMEOUT2:\n            return None\n\n        t2 = time.time()\n\n        dt = int((t1 - t0) * 1000000)\n        if dt > 530:\n            return None\n\n        distance = ((t2 - t1) * 1000000 / 29 / 2)    # cm\n\n        return distance\n\n    def get_distance(self):\n        while True:\n            dist = self._get_distance()\n            if dist:\n                return dist\n\nGrove = GroveUltrasonicRanger\n\ndef main():\n    if len(sys.argv) < 2:\n        print('Usage: {} pin_number'.format(sys.argv[0]))\n        sys.exit(1)\n\n    sonar = GroveUltrasonicRanger(int(sys.argv[1]))\n\n    print('Detecting distance...')\n    while True:\n        print('{} cm'.format(sonar.get_distance()))\n        time.sleep(1)\n\nif __name__ == '__main__':\n    main()\n")),(0,r.yg)("admonition",{type:"success"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"},"If everything goes well, you will be able to see the following result\n"))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'\npi@raspberrypi:~/grove.py/grove $ python3 grove_ultrasonic_ranger.py 5 6\nDetecting distance...\n121.757901948 cm\n246.894770655 cm\n2.60205104433 cm\n0.205533257846 cm\n0.657706425108 cm\n247.433267791 cm\n122.485489681 cm\n^CTraceback (most recent call last):\n  File "grove_ultrasonic_ranger.py", line 110, in <module>\n    main()\n  File "grove_ultrasonic_ranger.py", line 107, in main\n    time.sleep(1)\nKeyboardInterrupt\n')),(0,r.yg)("p",null,"You can quit this program by simply press ++ctrl+c++."),(0,r.yg)("h3",{id:"play-with-raspberry-pi-with-grovepi_plus"},"Play With Raspberry Pi (with GrovePi_Plus)"),(0,r.yg)("h4",{id:"hardware-3"},"Hardware"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Raspberry pi"),(0,r.yg)("th",{parentName:"tr",align:null},"GrovePi_Plus"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove - Ultrasonic Ranger"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/rasp.jpg",alt:"enter image description here"})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/Grovepi%2B.jpg",alt:"enter image description here"})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/Ultrasonic_small.jpg",alt:"enter image description here"}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Raspberry-Pi-3-Model-B-p-2625.html"},"Get One Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/GrovePi%2B-p-2241.html"},"Get One Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Ultrasonic-Ranger-p-960.html"},"Get One Now"))))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Plug the GrovePi_Plus into Raspberry.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 3.")," Connect Grove-Ultrasonic ranger to ",(0,r.yg)("strong",{parentName:"p"},"D4")," port of GrovePi_Plus.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 4.")," Connect the Raspberry to PC through USB cable."))),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/pi%20connection.jpg",alt:null})),(0,r.yg)("h4",{id:"software-3"},"Software"),(0,r.yg)("admonition",{type:"note"},(0,r.yg)("pre",{parentName:"admonition"},(0,r.yg)("code",{parentName:"pre"}," If you are using **Raspberry Pi with Raspberrypi OS >= Bullseye**, you have to use this command line **only with Python3**.\n"))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 1.")," Follow ",(0,r.yg)("a",{parentName:"p",href:"https://www.dexterindustries.com/GrovePi/get-started-with-the-grovepi/setting-software/"},"Setting Software")," to configure the development environment.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Git clone the Github repository."))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"cd ~\ngit clone https://github.com/DexterInd/GrovePi.git\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 3.")," Excute below commands to use the ultrasonic_ranger to meansure the distance.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"cd ~/GrovePi/Software/Python\npython3 grove_ultrasonic.py\n")),(0,r.yg)("p",null,"Here is the grove_ultrasonic.py code."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'# GrovePi + Grove Ultrasonic Ranger\n\nfrom grovepi import *\n\n# Connect the Grove Ultrasonic Ranger to digital port D4\n# SIG,NC,VCC,GND\n\nultrasonic_ranger = 4\n\nwhile True:\n    try:\n        # Read distance value from Ultrasonic\n        print ultrasonicRead(ultrasonic_ranger)\n\n    except TypeError:\n        print "Error"\n    except IOError:\n        print "Error"\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 4.")," We will see the distance display on terminal as below.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"pi@raspberrypi:~/GrovePi/Software/Python $ python3 grove_ultrasonic.py\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\n")),(0,r.yg)("h3",{id:"play-with-wio-terminal-ardupy"},"Play With Wio Terminal (ArduPy)"),(0,r.yg)("h4",{id:"hardware-4"},"Hardware"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 1.")," Prepare the below stuffs:")),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Wio Terminal"),(0,r.yg)("th",{parentName:"tr",align:null},"Grove - Ultrasonic Ranger"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Wio-Terminal/img/Wio-Terminal-thumbnail.png",alt:"enter image description here"})),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("img",{parentName:"td",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/Ultrasonic_small.jpg",alt:"enter image description here"}))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Wio-Terminal-p-4509.html"},"Get One Now")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("a",{parentName:"td",href:"https://www.seeedstudio.com/Grove-Ultrasonic-Ranger-p-960.html"},"Get One Now"))))),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Connect Grove - Ultrasonic Ranger to ",(0,r.yg)("strong",{parentName:"p"},"D0")," port of Wio Terminal.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 3.")," Connect the Wio Terminal to PC through USB Type-C cable."))),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/with-WT.jpg",alt:null})),(0,r.yg)("h4",{id:"software-4"},"Software"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 1.")," Follow ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/ArduPy/"},(0,r.yg)("strong",{parentName:"a"},"ArduPy Getting Started"))," to configure the ArduPy development environment on Wio Terminal.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Step 2.")," Make sure that the ArduPy firmware contains the ultrasonic ranger ArduPy library using the following commands. For more information, please follow ",(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/ArduPy/#using-aip-to-include-other-ardupy-librariesfrom-arduino-libraries-example"},(0,r.yg)("strong",{parentName:"a"},"here")),"."))),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"aip install Seeed-Studio/seeed-ardupy-ultrasonic-sensor\naip build\naip flash\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 3.")," Copy the following code and save it as ",(0,r.yg)("inlineCode",{parentName:"li"},"ArduPy-ultrasonic.py"),":")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'from arduino import grove_ultra_ranger\nfrom machine import LCD\nfrom machine import Sprite\nimport time\n\nUltrasonic = grove_ultra_ranger(0)\nlcd = LCD()\nspr = Sprite(lcd) # Create a buff\n\ndef main():\n    spr.createSprite(320, 240)\n    while True:\n        spr.setTextSize(2)\n        spr.fillSprite(spr.color.BLACK)\n        spr.setTextColor(lcd.color.RED)\n        spr.drawString("Ultrasonic Sensor", 55, 10)\n        spr.drawFastHLine(40, 35, 240, lcd.color.DARKGREY)\n        spr.setTextColor(lcd.color.WHITE)\n        spr.drawString("- Centimeters: ", 20, 50)\n        spr.drawString("- Inches: ", 20, 80)\n        spr.drawNumber(Ultrasonic.cm, 200,50)\n        time.sleep_ms(50) # Needed for data to be read again\n        spr.drawNumber(Ultrasonic.inch, 130,80)\n        spr.pushSprite(0,0)\n        time.sleep_ms(500)\n\n        print("The distance to obstacles in front is:", Ultrasonic.cm, \'centimeter\')\n        print("The distance to obstacles in front is:", Ultrasonic.inch, \'inches\')\n\nif __name__ == "__main__":\n    main()\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 4.")," Save the ",(0,r.yg)("inlineCode",{parentName:"li"},"ArduPy-ultrasonic.py")," in a location that you know. Run the following command and ",(0,r.yg)("strong",{parentName:"li"},"replace")," ",(0,r.yg)("inlineCode",{parentName:"li"},"<YourPythonFilePath>")," with your ",(0,r.yg)("inlineCode",{parentName:"li"},"ArduPy-ultrasonic.py")," location.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},'aip shell -n -c "runfile <YourPythonFilePath>"\n# Example:\n# aip shell -n -c "runfile /Users/ansonhe/Desktop/ArduPy-ultrasonic.py"\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Step 5.")," We will see the distance display on terminal as below, and displaying on the Wio Terminal LCD screen.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},'ansonhe@Ansons-Macbook-Pro ~:aip shell -n -c "runfile /Users/ansonhe/Desktop/ArduPy-ultrasonic.py"\nPositional argument (/dev/cu.usbmodem1413101) takes precedence over --open.\nConnected to ardupy\nThe distance to obstacles in front is: 3 centimeter\nThe distance to obstacles in front is: 1 inches\nThe distance to obstacles in front is: 7 centimeter\nThe distance to obstacles in front is: 2 inches\nThe distance to obstacles in front is: 6 centimeter\nThe distance to obstacles in front is: 2 inches\nThe distance to obstacles in front is: 6 centimeter\nThe distance to obstacles in front is: 2 inches\nThe distance to obstacles in front is: 4 centimeter\nThe distance to obstacles in front is: 1 inches\nThe distance to obstacles in front is: 7 centimeter\nThe distance to obstacles in front is: 2 inches\n')),(0,r.yg)("p",null,(0,r.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/img/WT-ur.jpg",alt:null})),(0,r.yg)("h2",{id:"faqs"},"FAQs"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Q1: How does the Grove-Ultrasonic sensor work?")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"A1: When we provide a pulse trigger signal with more than 10uS through singal pin, the Grove_Ultrasonic_Ranger will issue 8 cycles of 40kHz cycle level and detect the echo. The pulse width of the echo signal is proportional to the measured distance. Here is the formula: Distance = echo signal high time * Sound speed (340M/S)/2.")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Q2: Why Grove-Ultrasonic sensor only has 1 signal pin, comparing with other ultrasonic sensor Trig and Echo pins?")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"A2:Grove_Ultrasonic_Ranger\u2019s trig and echo signal share 1 SIG pin through MCU.  ")),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Q3: Can we connect mulitule ultrasonic to one arduino?")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"A4: Yes, Here is the example, one sensor is connected to D2 and other to D3.")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c++"},'#include "Ultrasonic.h"\n\nUltrasonic ultrasonic1(2);\nUltrasonic ultrasonic2(3);\nvoid setup()\n{\n    Serial.begin(9600);\n}\nvoid loop()\n{\n    long RangeInCentimeters1;\n    long RangeInCentimeters2;\n\n    RangeInCentimeters1 = ultrasonic1.MeasureInCentimeters(); // two measurements should keep an interval\n    Serial.print(RangeInCentimeters1);//0~400cm\n    Serial.println(" cm");\n    \n    RangeInCentimeters2 = ultrasonic2.MeasureInCentimeters(); // two measurements should keep an interval\n    Serial.print(RangeInCentimeters2);//0~400cm\n    Serial.println(" cm");\n    \n    delay(250);\n}\n')),(0,r.yg)("h2",{id:"resources"},"Resources"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[PDF]")," ",(0,r.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/res/Grove-Ultrasonic_Ranger_WiKi.pdf"},"Download Wiki PDF")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[PDF]")," ",(0,r.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/res/Grove_Ultrasonic%20Ranger%20Schematic.pdf"},"Grove_Ultrasonic Ranger Schematic")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[PDF]")," ",(0,r.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/res/NU40C16T-R-1.pdf"},"Ceramic Ultrasonic Sensor NU40C16T/R-1")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[Library]")," ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/Seeed_Arduino_UltrasonicRanger/archive/master.zip"},"Grove_Ultrasonic Ranger library")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[Codecraft]")," ",(0,r.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/res/Grove_Ultrasonic_Ranger_CDC_File.zip"},"CDC File")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[Project]")," ",(0,r.yg)("a",{parentName:"li",href:"https://community.seeedstudio.com/project_detail.html?id=138"},"The Color Helix")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[Project]")," ",(0,r.yg)("a",{parentName:"li",href:"https://community.seeedstudio.com/project_detail.html?id=182"},"Indoor Lightning Cloud")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[Project]")," ",(0,r.yg)("a",{parentName:"li",href:"https://community.seeedstudio.com/project_detail.html?id=241"},"Automatic Water Level Controller")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[Example]")," ",(0,r.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/res/Example_Measure_distance_and_led_display.zip"},"Example_Measure_distance_and_led_display")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"[Example]")," ",(0,r.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Grove_Ultrasonic_Ranger/res/Example_Measure_and_display_the_distance.zip"},"Example_Measure_and_display_the_distance"))),(0,r.yg)("h2",{id:"project"},"Project"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Hacking the Stairs at Seeed's New Office"),': Turn the stairs at the office into an interactive installation, and even a cool way to convey the message "STAFF ONLY" to visitors.'),(0,r.yg)("iframe",{frameborder:"0",height:"327.5",scrolling:"no",src:"https://www.hackster.io/stairs-hackers/hacking-the-stairs-at-seeed-s-new-office-9ef30b/embed",width:"350"}),(0,r.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,r.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}m.isMDXComponent=!0}}]);