"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34599],{15680:(e,n,t)=>{t.d(n,{xA:()=>_,yg:()=>O});var o=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=o.createContext({}),l=function(e){var n=o.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},_=function(e){var n=l(e.components);return o.createElement(d.Provider,{value:n},e.children)},c="mdxType",R={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},p=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,d=e.parentName,_=s(e,["components","mdxType","originalType","parentName"]),c=l(t),p=r,O=c["".concat(d,".").concat(p)]||c[p]||R[p]||a;return t?o.createElement(O,i(i({ref:n},_),{},{components:t})):o.createElement(O,i({ref:n},_))}));function O(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=p;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}p.displayName="MDXCreateElement"},97336:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>R,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=t(58168),r=(t(96540),t(15680));const a={description:"LoRa\xae",title:"LoRa\xae",keywords:["SenseCAP Indicator ESP32 Development Tutorial Lora"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/SenseCAP_Indicator_ESP32_LoRa",last_update:{date:"3/3/2024",author:"DuKaiyin"}},i="**LoRa\xae**",s={unversionedId:"zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_ESP32S3/cn-LoRa",id:"zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_ESP32S3/cn-LoRa",title:"LoRa\xae",description:"LoRa\xae",source:"@site/docs/zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_ESP32S3/cn-LoRa.md",sourceDirName:"zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_ESP32S3",slug:"/cn/SenseCAP_Indicator_ESP32_LoRa",permalink:"/cn/SenseCAP_Indicator_ESP32_LoRa",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_ESP32S3/cn-LoRa.md",tags:[],version:"current",lastUpdatedBy:"DuKaiyin",lastUpdatedAt:1709424e3,formattedLastUpdatedAt:"Mar 3, 2024",frontMatter:{description:"LoRa\xae",title:"LoRa\xae",keywords:["SenseCAP Indicator ESP32 Development Tutorial Lora"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/SenseCAP_Indicator_ESP32_LoRa",last_update:{date:"3/3/2024",author:"DuKaiyin"}}},d={},l=[{value:"<strong>\u53d1\u9001\u6570\u636e\u5305</strong>",id:"\u53d1\u9001\u6570\u636e\u5305",level:2},{value:"<strong>\u63a5\u6536\u6570\u636e\u5305</strong>",id:"\u63a5\u6536\u6570\u636e\u5305",level:2}],_={toc:l},c="wrapper";function R(e){let{components:n,...t}=e;return(0,r.yg)(c,(0,o.A)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"lora"},(0,r.yg)("strong",{parentName:"h1"},"LoRa\xae")),(0,r.yg)("p",null,"SenseCAP Indicator\u642d\u8f7d\u4e86SX1262 LoRa\xae\u6a21\u5757\uff0c\u53ef\u4ee5\u5b9e\u73b0\u70b9\u5bf9\u70b9\u901a\u4fe1"),(0,r.yg)("h2",{id:"\u53d1\u9001\u6570\u636e\u5305"},(0,r.yg)("strong",{parentName:"h2"},"\u53d1\u9001\u6570\u636e\u5305")),(0,r.yg)("p",null,"\u8fd9\u4e2a\u793a\u4f8b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5728LoRa\xae\u6a21\u5f0f\u4e0b\u4f7f\u7528LoRa\xae\u65e0\u7ebf\u7535\u6a21\u5757\u53d1\u9001\u6570\u636e\u5305\u7684\u57fa\u672c\u793a\u4f8b\u3002\u5b83\u5b9a\u4e49\u4e86LoRa\xae\u8c03\u5236\u65b9\u6848\u7684\u9891\u7387\u3001\u5e26\u5bbd\u3001\u6269\u9891\u56e0\u5b50\u3001\u7f16\u7801\u7387\u3001\u524d\u5bfc\u957f\u5ea6\u7b49\u53c2\u6570\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include "esp_log.h"\n#include "radio.h"\n#include "bsp_board.h"\n\n#define RF_FREQUENCY                                868000000 // Hz\n#define LORA_BANDWIDTH                              0         // [0: 125 kHz,\n                                                              //  1: 250 kHz,\n                                                              //  2: 500 kHz,\n                                                              //  3: Reserved]\n#define LORA_SPREADING_FACTOR                       12         // [SF7..SF12]\n#define LORA_CODINGRATE                             1         // [1: 4/5,\n                                                              //  2: 4/6,\n                                                              //  3: 4/7,\n                                                              //  4: 4/8]\n#define LORA_PREAMBLE_LENGTH                        8         // Same for Tx and Rx\n#define LORA_SYMBOL_TIMEOUT                         5         // Symbols\n#define LORA_FIX_LENGTH_PAYLOAD_ON                  false\n#define LORA_IQ_INVERSION_ON                        false\n\nstatic RadioEvents_t RadioEvents;\n\nstatic const char *TAG = "app_main";\n\nvoid OnTxDone( void )\n{\n    ESP_LOGI(TAG, "OnTxDone");\n}\n\nvoid demo_lora_tx(void)\n{\n    int cnt = 0;\n    ESP_LOGI(TAG, "system start");\n    ESP_LOGI(TAG, "demo lora tx");\n    ESP_ERROR_CHECK(bsp_board_init());\n\n    RadioEvents.TxDone = OnTxDone;\n    Radio.Init( &RadioEvents );\n\n    Radio.SetChannel( RF_FREQUENCY );\n    Radio.SetTxConfig( MODEM_LORA,22, 0, LORA_BANDWIDTH,\n                                   LORA_SPREADING_FACTOR, LORA_CODINGRATE,\n                                   LORA_PREAMBLE_LENGTH, LORA_FIX_LENGTH_PAYLOAD_ON,\n                                   true, 0, 0, LORA_IQ_INVERSION_ON, 3000 );\n\n    Radio.SetMaxPayloadLength( MODEM_LORA, 255 );\n\n    while(1) {\n        printf("send... %d\\n", cnt++);\n        Radio.Send( "1234567890", sizeof("1234567890") );\n        vTaskDelay(5000 / portTICK_PERIOD_MS);\n    }\n}\n')),(0,r.yg)("h2",{id:"\u63a5\u6536\u6570\u636e\u5305"},(0,r.yg)("strong",{parentName:"h2"},"\u63a5\u6536\u6570\u636e\u5305")),(0,r.yg)("p",null,"\u8fd9\u4e2a\u793a\u4f8b\u4ee3\u7801\u4f7f\u7528SX126x\u65e0\u7ebf\u7535\u6a21\u5757\u8bbe\u7f6e\u4e86\u4e00\u4e2aLoRa\xae\u63a5\u6536\u5668\uff0c\u5e76\u5c06\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\u8bb0\u5f55\u5230\u63a7\u5236\u53f0\u3002\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u5f00\u53d1\u9700\u8981\u5728\u957f\u8ddd\u79bb\u4e0a\u4f4e\u529f\u8017\u63a5\u6536\u6570\u636e\u7684LoRa\xae\u5e94\u7528\u7684\u8d77\u70b9\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include "esp_log.h"\n#include "radio.h"\n#include "bsp_board.h"\n\n#define RF_FREQUENCY                                868000000 // Hz\n#define LORA_BANDWIDTH                              0         // [0: 125 kHz,\n                                                              //  1: 250 kHz,\n                                                              //  2: 500 kHz,\n                                                              //  3: Reserved]\n#define LORA_SPREADING_FACTOR                       7         // [SF7..SF12]\n#define LORA_CODINGRATE                             1         // [1: 4/5,\n                                                              //  2: 4/6,\n                                                              //  3: 4/7,\n                                                              //  4: 4/8]\n#define LORA_PREAMBLE_LENGTH                        8         // Same for Tx and Rx\n#define LORA_SYMBOL_TIMEOUT                         5         // Symbols\n#define LORA_FIX_LENGTH_PAYLOAD_ON                  false\n#define LORA_IQ_INVERSION_ON                        false\n\nstatic RadioEvents_t RadioEvents;\n\nstatic const char *TAG = "app_main";\n\nvoid OnRxDone( uint8_t *payload, uint16_t size, int16_t rssi, int8_t snr )\n{\n    int i = 0;\n    ESP_LOGI(TAG, "rssi:%d dBm, snr:%d dB, len:%d, payload:", rssi, snr, size);\n    for( i = 0; i < size; i++) {\n        printf("0x%x ",payload[i] );\n    }\n    printf("\\n");\n}\n\nvoid demo_lora_rx(void)\n{\n    int cnt = 0;\n    ESP_LOGI(TAG, "system start");\n    ESP_LOGI(TAG, "demo lora rx continue");\n    bsp_sx126x_init();\n\n    RadioEvents.RxDone = OnRxDone;\n    Radio.Init( &RadioEvents );\n\n    Radio.SetChannel( RF_FREQUENCY );\n    Radio.SetTxConfig( MODEM_LORA,22, 0, LORA_BANDWIDTH,\n                                   LORA_SPREADING_FACTOR, LORA_CODINGRATE,\n                                   LORA_PREAMBLE_LENGTH, LORA_FIX_LENGTH_PAYLOAD_ON,\n                                   true, 0, 0, LORA_IQ_INVERSION_ON, 3000 );\n\n    Radio.SetRxConfig( MODEM_LORA, LORA_BANDWIDTH, LORA_SPREADING_FACTOR,\n                                   LORA_CODINGRATE, 0, LORA_PREAMBLE_LENGTH,\n                                   LORA_SYMBOL_TIMEOUT, LORA_FIX_LENGTH_PAYLOAD_ON,\n                                   0, true, 0, 0, LORA_IQ_INVERSION_ON, true );\n    Radio.SetMaxPayloadLength( MODEM_LORA, 255 );\n\n    Radio.Rx( 0 );\n    while(1) {\n        printf("cnt: %d\\n", cnt++);\n        vTaskDelay(10000 / portTICK_PERIOD_MS);\n    }\n}\n\n')),(0,r.yg)("h1",{id:"\u6280\u672f\u652f\u6301"},(0,r.yg)("strong",{parentName:"h1"},"\u6280\u672f\u652f\u6301")),(0,r.yg)("p",null,"   \u522b\u62c5\u5fc3\uff0c\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u652f\u6301\uff01\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684",(0,r.yg)("a",{parentName:"p",href:"https://discord.com/invite/QqMgVwHT3X"},"Seeed\u5b98\u65b9Discord\u9891\u9053"),"\u63d0\u51fa\u60a8\u7684\u95ee\u9898\uff01"),(0,r.yg)("p",null,"\u5982\u679c\u60a8\u6709\u5927\u91cf\u8ba2\u5355\u6216\u5b9a\u5236\u9700\u6c42\uff0c\u8bf7\u8054\u7cfb ",(0,r.yg)("a",{parentName:"p",href:"mailto:iot@seeed.cc"},"iot@seeed.cc")))}R.isMDXComponent=!0}}]);