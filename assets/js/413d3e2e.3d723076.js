"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[17428],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>u});var o=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},g=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,u=m["".concat(l,".").concat(d)]||m[d]||c[d]||r;return n?o.createElement(u,a(a({ref:t},g),{},{components:n})):o.createElement(u,a({ref:t},g))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<r;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},67835:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var o=n(58168),i=(n(96540),n(15680));const r={description:"XIAO ESP32C3 ESPHome Smart ThermoStat",title:"Xiao ESP32C3 ESPHome Smart ThermoStat",keywords:["Contribution"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/esp32c3_smart_thermostat",last_update:{date:"12/1/2023",author:"Chris (Echo7394)"}},a="Xiao ESP32C3 ESPHome Smart ThermoStat",s={unversionedId:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/Application/ESP32C3_Smart_Thermostat",id:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/Application/ESP32C3_Smart_Thermostat",title:"Xiao ESP32C3 ESPHome Smart ThermoStat",description:"XIAO ESP32C3 ESPHome Smart ThermoStat",source:"@site/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/Application/ESP32C3_Smart_Thermostat.md",sourceDirName:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/Application",slug:"/esp32c3_smart_thermostat",permalink:"/esp32c3_smart_thermostat",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C3/Application/ESP32C3_Smart_Thermostat.md",tags:[],version:"current",lastUpdatedBy:"Chris (Echo7394)",lastUpdatedAt:1701388800,formattedLastUpdatedAt:"Dec 1, 2023",frontMatter:{description:"XIAO ESP32C3 ESPHome Smart ThermoStat",title:"Xiao ESP32C3 ESPHome Smart ThermoStat",keywords:["Contribution"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/esp32c3_smart_thermostat",last_update:{date:"12/1/2023",author:"Chris (Echo7394)"}},sidebar:"ProductSidebar",previous:{title:"XIAO ESP32C3-Chatgpt",permalink:"/xiaoesp32c3-chatgpt"},next:{title:"XIAO ESP32C3 Flash-storage",permalink:"/xiaoesp32c3-flash-storage"}},l={},p=[{value:"Hardware Preparation",id:"hardware-preparation",level:2},{value:"Software Preparation",id:"software-preparation",level:2},{value:"Install Home Assistant",id:"install-home-assistant",level:3},{value:"Install ESPHome on Home Assistant",id:"install-esphome-on-home-assistant",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"1. Add Seeed Studio XIAO ESP32C3 to ESPHome",id:"1-add-seeed-studio-xiao-esp32c3-to-esphome",level:3},{value:"2. Create and Upload YAML Config",id:"2-create-and-upload-yaml-config",level:3},{value:"3. Assemble case of choice (Optional)",id:"3-assemble-case-of-choice-optional",level:3},{value:"4. Install Components",id:"4-install-components",level:3},{value:"Step 1 Install all the listed components into the case",id:"step-1-install-all-the-listed-components-into-the-case",level:4},{value:"Step 2. Connect all sensors and peripherals to their corresponding pins within the aforementioned YAML",id:"step-2-connect-all-sensors-and-peripherals-to-their-corresponding-pins-within-the-aforementioned-yaml",level:4},{value:"Step 3. Cnnect desired style of momentary buttons to the inside front of the case",id:"step-3-cnnect-desired-style-of-momentary-buttons-to-the-inside-front-of-the-case",level:4},{value:"Step 4. Assemble screen into the rear of the front cover",id:"step-4-assemble-screen-into-the-rear-of-the-front-cover",level:4},{value:"5. Connect Wires to the Corresponding Relays on EcoStat",id:"5-connect-wires-to-the-corresponding-relays-on-ecostat",level:3},{value:"\u2728 Contributor Project",id:"-contributor-project",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],g={toc:p},m="wrapper";function c(e){let{components:t,...n}=e;return(0,i.yg)(m,(0,o.A)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"xiao-esp32c3-esphome-smart-thermostat"},"Xiao ESP32C3 ESPHome Smart ThermoStat"),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/9.jpg",alt:"pir",width:500,height:"auto"})),(0,i.yg)("p",null,"This wiki will walkthrough step-by-step on how to make a Xiao ESP32C3 ESPHome Smart ThermoStat. Now let's get started!"),(0,i.yg)("h2",{id:"hardware-preparation"},"Hardware Preparation"),(0,i.yg)("p",null,"If you want to follow this tutorial through everything, you will need to prepare the following."),(0,i.yg)("table",{align:"center"},(0,i.yg)("tbody",null,(0,i.yg)("tr",null,(0,i.yg)("th",null,"Seeed Studio XIAO ESP32C3"),(0,i.yg)("th",null,"Seeed Studio Expansion Board"),(0,i.yg)("th",null,"Home Assistant Devices ",(0,i.yg)("br",null)," e.g. Seeed Studio Home assistant Yellow")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/board-pic.png",style:{width:100,height:"auto"}}))),(0,i.yg)("td",null,(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg",style:{width:210,height:"auto"}}))),(0,i.yg)("td",null,(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/Home-Assistant/1.png",style:{width:210,height:"auto"}})))),(0,i.yg)("tr",null,(0,i.yg)("td",{align:"center"},(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-XIAO-ESP32C3-p-5431.html"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,i.yg)("td",{align:"center"},(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now\ud83d\uddb1\ufe0f")))))),(0,i.yg)("td",{align:"center"},(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://wiki.seeedstudio.com/home_assistant_topic/#-devices-for-home-assistant-"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Check More \ud83d\uddb1\ufe0f"))))))))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Grove Sensors")),(0,i.yg)("table",{align:"center"},(0,i.yg)("tbody",null,(0,i.yg)("tr",null,(0,i.yg)("th",null,"Grove - Temperature & Humidity Sensor Pro (DHT22/AM2302)"),(0,i.yg)("th",null,"Grove - 2-Channel SPDT Relay"),(0,i.yg)("th",null,"Grove - Relay High current 5V/10A"),(0,i.yg)("th",null,'Grove - OLED Display 0.96" (SSD1315)'),(0,i.yg)("th",null,"Momentary buttons (Any kind will do)")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/2.jpg",alt:"pir",width:210,height:"auto"}))),(0,i.yg)("td",null,(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/3.jpg",alt:"pir",width:210,height:"auto"}))),(0,i.yg)("td",null,(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/4.jpg",alt:"pir",width:210,height:"auto"}))),(0,i.yg)("td",null,(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/5.jpg",alt:"pir",width:210,height:"auto"}))),(0,i.yg)("td",null,(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/8.jpg",alt:"pir",width:400,height:"auto"})))),(0,i.yg)("tr",null,(0,i.yg)("td",{align:"center"},(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Temperature-Humidity-Sensor-Pro-AM2302-DHT22.html"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,i.yg)("td",{align:"center"},(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-2-Channel-SPDT-Relay.html"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now\ud83d\uddb1\ufe0f")))))),(0,i.yg)("td",{align:"center"},(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Relay.html"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,i.yg)("td",{align:"center"},(0,i.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,i.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-OLED-Display-0-96-SSD1315-p-4294.html"},(0,i.yg)("strong",null,(0,i.yg)("span",null,(0,i.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))))))),(0,i.yg)("h2",{id:"software-preparation"},"Software Preparation"),(0,i.yg)("h3",{id:"install-home-assistant"},"Install Home Assistant"),(0,i.yg)("p",null,"Make sure you already have Home Assistant up and running. There are multiple wiki introducing how to flash Home Assistant into the ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/home_assistant_topic/#-devices-for-home-assistant-"},"products")," here. I'm using Home assistant Yellow which is powered by Raspberry Pi CM4, so I can ",(0,i.yg)("a",{parentName:"p",href:"https://yellow.home-assistant.io/power-supply/"},"directly use the official one to flash the OS into the Home assistant Yellow"),"."),(0,i.yg)("h3",{id:"install-esphome-on-home-assistant"},"Install ESPHome on Home Assistant"),(0,i.yg)("p",null,"ESPHome is available as a ",(0,i.yg)("strong",{parentName:"p"},"Home Assistant Add-On")," and can simply be installed via the add-on store."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/esphome.jpg",alt:"pir",width:1e3,height:"auto"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1.")," Click ",(0,i.yg)("strong",{parentName:"li"},"INSTALL"))),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/2.png",style:{width:900,height:"auto"}})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2.")," Enable all the options and click ",(0,i.yg)("strong",{parentName:"li"},"START"))),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/3.png",style:{width:900,height:"auto"}})),(0,i.yg)("p",null,"You will see the following window if ESPHome is successfully loaded"),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/4.png",style:{width:900,height:"auto"}})),(0,i.yg)("h2",{id:"getting-started"},"Getting Started"),(0,i.yg)("p",null,"Once all the software and the hardware are really, we can now get started."),(0,i.yg)("h3",{id:"1-add-seeed-studio-xiao-esp32c3-to-esphome"},"1. Add Seeed Studio XIAO ESP32C3 to ESPHome"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1.")," Click ",(0,i.yg)("strong",{parentName:"li"},"+ NEW DEVICE"))),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/5.png",style:{width:900,height:"auto"}})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2.")," Click CONTINUE")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/6.png",style:{width:900,height:"auto"}})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3.")," Enter a ",(0,i.yg)("strong",{parentName:"li"},"Name")," for the device and enter WiFi credentials such as ",(0,i.yg)("strong",{parentName:"li"},"Network name")," and ",(0,i.yg)("strong",{parentName:"li"},"Password"),". Then click ",(0,i.yg)("strong",{parentName:"li"},"NEXT"))),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/7.png",style:{width:900,height:"auto"}})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 4.")," Select ",(0,i.yg)("strong",{parentName:"li"},"ESP32-C3")," and click")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/8.png",style:{width:900,height:"auto"}})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5.")," Click ",(0,i.yg)("strong",{parentName:"li"},"SKIP")," because we will configure this board manually")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-full_function/14.png",style:{width:400,height:"auto"}})),(0,i.yg)("h3",{id:"2-create-and-upload-yaml-config"},"2. Create and Upload YAML Config"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1.")," Click ",(0,i.yg)("strong",{parentName:"li"},"EDIT")," under the newly created board")),(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-ESPHome-img/9.png",style:{width:900,height:"auto"}})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 7.")," Create and Upload YAML Config"),(0,i.yg)("p",{parentName:"li"},"Explanation of the code below:"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Name:"),' "thermostat"')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Board Configuration:")," ",(0,i.yg)("br",null),"\nFlash mode set to DIO.",(0,i.yg)("br",null),'\nBoard specified as "seeed_xiao_esp32c3" with the Arduino framework.')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"On Boot Actions:"),(0,i.yg)("br",null),'\nDisplays a log message: "Booting thermostat."',(0,i.yg)("br",null),"\nTurns off three relays: heat, cooling, and fan.",(0,i.yg)("br",null),"\nDelays for 500 milliseconds.",(0,i.yg)("br",null),'\nExecutes a script named "boot_beep."')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Script Configuration:"),(0,i.yg)("br",null),"\nBoot Beep Script:",(0,i.yg)("br",null),"\nTurns on a buzzer, sets its frequency to produce a beep, and turns it off after 300 milliseconds.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"API and OTA Configuration:"),(0,i.yg)("br",null),"\nAPI:",(0,i.yg)("br",null),"\nEncryption key specified.",(0,i.yg)("br",null),"\nOTA:",(0,i.yg)("br",null),'\nPassword set to "13371337" for over-the-air updates.')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Buzzer Output:"),(0,i.yg)("br",null),"\nConfigured using the LEDC platform with pin 5.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"WiFi Configuration:"),(0,i.yg)("br",null),"\nSpecifies SSID and password for connecting to Wi-Fi.",(0,i.yg)("br",null),'\nFallback hotspot (captive portal) configured with SSID "Xiao-Esp32C3" and password "13371337."')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"I2C Configuration:"),(0,i.yg)("br",null),"\nConfigures I2C communication with SDA pin 6 and SCL pin 7.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Font Configuration:"),(0,i.yg)("br",null),"\nDefines two fonts for the display with different sizes.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Display Configuration:"),(0,i.yg)("br",null),"\nUtilizes an SSD1315 I2C display with a lambda function to format and display information.",(0,i.yg)("br",null),"\nDisplays temperature in Fahrenheit, humidity, Wi-Fi signal strength, and IP address.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Sensor Configuration:"),(0,i.yg)("br",null),"\nUtilizes a DHT22 sensor for temperature and humidity readings with a 10-second update interval.",(0,i.yg)("br",null),"\nIncludes a Wi-Fi signal sensor with a 20-second update interval.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Text Sensor Configuration:"),(0,i.yg)("br",null),"\nDisplays the thermostat's IP address and ESPHome version.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Switch Configuration:"),(0,i.yg)("br",null),"\nConfigures three GPIO switches for relay_heat, relay_cooling, and relay_fan.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Binary Sensor Configuration:"),(0,i.yg)("br",null),"\nConfigures a binary sensor for a circulating fan button press.",(0,i.yg)("br",null),"\nWhen pressed, it controls the climate system's fan mode.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Climate Configuration:"),(0,i.yg)("br",null),"\nImplements a thermostat control using the specified temperature sensor.",(0,i.yg)("br",null),"\nDefines actions for heating, cooling, fan mode, and idle.",(0,i.yg)("br",null),"\nSets temperature limits, step sizes, and default presets."))),(0,i.yg)("p",{parentName:"li"},"Paste this into your ESPHome Device Configuration yaml file. You can also download the full .yaml file ",(0,i.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/esp32c3config.yaml"},"here")))),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml"},'esphome:\n  name: ecostat\n  platformio_options:\n    board_build.flash_mode: dio\n  on_boot:\n    priority: 750\n    then:\n      - logger.log: "Booting EcoStat"\n      - delay: 500ms\n      - lambda: |-\n          id(relay_heat).turn_off();\n          id(relay_cooling).turn_off();\n          id(relay_fan).turn_off();\n          id(ecostat_control_heat).mode = CLIMATE_MODE_OFF;\n          id(ecostat_control_cooling).mode = CLIMATE_MODE_OFF;\n      - script.execute: boot_beep\n\nesp32:\n  board: seeed_xiao_esp32c3\n  variant: esp32c3\n  framework:\n    type: arduino\n    platform_version: 5.4.0\n\n#logger:\n # level: VERY_VERBOSE\n\napi:\n  encryption:\n    key: "YOURKEYHERE"\n\nota:\n  password: "13371337"\n\nscript:\n- id: boot_beep\n  then:\n    # First ^E\n    - output.turn_on: buzzer\n    - output.ledc.set_frequency:\n        id: buzzer\n        frequency: 659.25Hz  # E\n    - output.set_level:\n        id: buzzer\n        level: "50%"\n    - delay: 150ms\n    - output.turn_off: buzzer\n    - output.turn_on: buzzer\n    - output.ledc.set_frequency:\n        id: buzzer\n        frequency: 1000Hz\n    - output.set_level:\n        id: buzzer\n        level: "50%"\n    - delay: 150ms\n    - output.turn_off: buzzer\noutput:\n  - platform: ledc\n    pin: 5\n    id: buzzer\n\nwifi:\n  ssid: YOURWIFINAME\n  password: YOURWIFIPASS\n\n  # Enable fallback hotspot (captive portal) in case wifi connection fails\n  ap:\n    ssid: "Xiao-Esp32C3 Fallback Hotspot"\n    password: "13371337"\n\ni2c:\n  sda: 6\n  scl: 7\n  scan: False\n\nfont:\n  # gfonts://family[@weight]\n  - file: "gfonts://Roboto"\n    id: roboto\n    size: 20\n\n  - file: "gfonts://Poppins@700"\n    id: inter\n    size: 10\n\ndisplay:\n  - platform: SSD1315_i2c\n    id: oled\n    model: "SSD1315 128x64"\n    address: 0x3C\n    lambda: |-\n      float temp_celsius = id(temp).state;\n      float temp_fahrenheit = (temp_celsius * 9.0 / 5.0) + 32.0;\n      char temp_str[6]; // Buffer for temperature string\n      dtostrf(temp_celsius, 4, 1, temp_str); // Convert Celsius to string with 1 decimal place\n\n      it.print(28, 0, id(inter), id(ip_address).state.c_str());\n      it.printf(0, 18, id(roboto), "T: %.1f  ", temp_fahrenheit);\n      it.printf(70, 18, id(roboto), "H: %d", int(id(humidity).state));\n      it.printf(31, 45, id(inter), "RSSI: %d", int(id(rssi).state));\n\nclimate:\n  - platform: thermostat\n    name: "EcoStat Heating"\n    id: ecostat_control_heat\n    sensor: temp\n    heat_deadband: 2 \xb0F\n    heat_overrun: 0\n    min_heating_run_time: 60s\n    min_heating_off_time: 120s\n    min_idle_time: 3min\n    visual:\n      min_temperature: 60 \xb0F\n      max_temperature: 80 \xb0F\n      temperature_step:\n        current_temperature: 0.1\n        target_temperature: 1.0\n        target_temperature_low: 65 \xb0F\n    heat_action:\n      - switch.turn_on: relay_heat\n    idle_action:\n      - switch.turn_off: relay_heat\n    default_preset: Normal\n    preset:\n      - name: Normal\n        default_target_temperature_low: 65 \xb0F\n\n\n  - platform: thermostat\n    name: "EcoStat Cooling"\n    id: ecostat_control_cooling\n    sensor: temp\n    cool_deadband: 2 \xb0F\n    cool_overrun: 0\n    min_cooling_off_time: 20s\n    min_cooling_run_time: 60s\n    min_idle_time: 3min\n    visual:\n      min_temperature: 60 \xb0F\n      max_temperature: 80 \xb0F\n      temperature_step:\n        current_temperature: 0.1\n        target_temperature: 1.0\n        target_temperature_low: 70 \xb0F\n    cool_action:\n      - switch.turn_on: relay_cooling\n    idle_action:\n      - switch.turn_off: relay_cooling\n    min_fan_mode_switching_time: 20s\n    fan_mode_on_action:\n      - switch.turn_on: relay_fan\n    fan_mode_off_action:\n      - switch.turn_off: relay_fan\n    default_preset: Normal\n    preset:\n      - name: Normal\n        default_target_temperature_high: 70 \xb0F\n\nsensor:\n  - platform: dht\n    pin: 20\n    model: DHT22\n    update_interval: 10s\n    temperature:\n      name: "EcoStat Temperature"\n      id: temp\n    humidity:\n      name: "EcoStat Humidity"\n      id: humidity\n  - platform: wifi_signal\n    name: "Wi-Fi Signal Strength"\n    id: rssi\n    update_interval: 20s\n\ntext_sensor:\n  - platform: wifi_info\n    ip_address:\n      name: "EcoStat IP Address"\n      id: ip_address\n  - platform: version\n    name: "EcoStat ESPHome Version"\n\nswitch:\n  - platform: gpio\n    id: relay_heat\n    pin:\n      number: 10\n      mode: OUTPUT\n  - platform: gpio\n    id: relay_cooling\n    pin:\n      number: 9\n      mode: OUTPUT\n  - platform: gpio\n    id: relay_fan\n    pin:\n      number: 21\n      mode: OUTPUT\n\nbinary_sensor:\n  - platform: gpio\n    id: tempup\n    pin:\n      number: 8\n      mode: INPUT_PULLUP\n    filters:\n      - delayed_on: 50ms\n      - delayed_off: 50ms\n    on_press:\n      then:\n        - lambda: |-\n            if (id(ecostat_control_heat).mode == esphome::climate::CLIMATE_MODE_HEAT) {\n              auto current_target_temp = id(ecostat_control_heat).target_temperature_low;\n              id(ecostat_control_heat).target_temperature_low = current_target_temp + 0.56;\n              auto current_target_temp_high = id(ecostat_control_heat).target_temperature_high;\n              id(ecostat_control_heat).target_temperature_high = current_target_temp_high + 0.56;\n            } else if (id(ecostat_control_cooling).mode == esphome::climate::CLIMATE_MODE_COOL) {\n              auto current_target_temp = id(ecostat_control_cooling).target_temperature_low;\n              id(ecostat_control_cooling).target_temperature_low = current_target_temp + 0.56;\n              auto current_target_temp_high = id(ecostat_control_cooling).target_temperature_high;\n              id(ecostat_control_cooling).target_temperature_high = current_target_temp_high + 0.56;\n            }\n\n  - platform: gpio\n    id: tempdown\n    pin:\n      number: 2\n      mode: INPUT_PULLUP\n    filters:\n      - delayed_on: 50ms\n      - delayed_off: 50ms\n    on_press:\n      then:\n        - lambda: |-\n            if (id(ecostat_control_heat).mode == esphome::climate::CLIMATE_MODE_HEAT) {\n              auto current_target_temp = id(ecostat_control_heat).target_temperature_low;\n              id(ecostat_control_heat).target_temperature_low = current_target_temp - 0.56;\n              auto current_target_temp_high = id(ecostat_control_heat).target_temperature_high;\n              id(ecostat_control_heat).target_temperature_high = current_target_temp_high - 0.56;\n            } else if (id(ecostat_control_cooling).mode == esphome::climate::CLIMATE_MODE_COOL) {\n              auto current_target_temp = id(ecostat_control_cooling).target_temperature_low;\n              id(ecostat_control_cooling).target_temperature_low = current_target_temp - 0.56;\n              auto current_target_temp_high = id(ecostat_control_cooling).target_temperature_high;\n              id(ecostat_control_cooling).target_temperature_high = current_target_temp_high - 0.56;\n            }\n\n  - platform: gpio\n    id: modeswitch\n    pin:\n      number: 3\n      mode: INPUT_PULLUP\n    filters:\n      - delayed_on: 50ms\n      - delayed_off: 50ms\n    on_press:\n      then:\n        - lambda: |-\n            auto current_mode = id(ecostat_control_heat).mode;\n            if (current_mode == esphome::climate::CLIMATE_MODE_OFF) {\n              id(ecostat_control_heat).mode = esphome::climate::CLIMATE_MODE_HEAT;\n            } else if (current_mode == esphome::climate::CLIMATE_MODE_HEAT) {\n              id(ecostat_control_heat).mode = esphome::climate::CLIMATE_MODE_COOL;\n            } else if (current_mode == esphome::climate::CLIMATE_MODE_COOL) {\n              id(ecostat_control_heat).mode = esphome::climate::CLIMATE_MODE_OFF;\n            }\n\n  - platform: gpio\n    id: momentaryswitch0\n    pin:\n      number: 4\n      mode: INPUT_PULLUP\n    filters:\n      - delayed_on: 50ms\n      - delayed_off: 50ms\n    on_press:\n      then:\n        - if:\n            condition:\n              switch.is_off: relay_fan\n            then:\n              - climate.control: \n                  id: ecostat_control_cooling\n                  fan_mode: "on"\n            else:\n              - climate.control: \n                  id: ecostat_control_cooling\n                  fan_mode: "off"\n')),(0,i.yg)("h3",{id:"3-assemble-case-of-choice-optional"},"3. Assemble case of choice (Optional)"),(0,i.yg)("p",null,"There are the STL files for the case I used for this project. "),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/EcoStatV2-ecostatcase.stl"},"EcoStatV2 ecostatcase")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/EcoStatV2-ecostatlid.stl"},"EcoStatV2 ecostatlid")),(0,i.yg)("p",null,"Feel free to use or modify them as you like. If you dont personally have a 3d Printer,\nthere are lots of services online that will print these files in any material you would like."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/3dfile.png",alt:"pir",width:1e3,height:"auto"})),(0,i.yg)("h3",{id:"4-install-components"},"4. Install Components"),(0,i.yg)("h4",{id:"step-1-install-all-the-listed-components-into-the-case"},"Step 1 Install all the listed components into the case"),(0,i.yg)("p",null,"Using M2x4 & M2x6 screws, install all previously listed components into their corresponding places within the case. ",(0,i.yg)("br",null),"\n(The DHT22 Sensor simply press fits into place)."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/11.jpg",alt:"pir",width:500,height:"auto"})),(0,i.yg)("h4",{id:"step-2-connect-all-sensors-and-peripherals-to-their-corresponding-pins-within-the-aforementioned-yaml"},"Step 2. Connect all sensors and peripherals to their corresponding pins within the aforementioned YAML"),(0,i.yg)("p",null,"Here is the method I used during the connection process:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"DHT22/SSD1315 - use JST connector:")," Desolder and flip the connectors for the DHT22 and SSD1315 to the other side of their PCBS for proper fitment.")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Two Types of Relay - use JST/DuPont connector:")," For the relays, I used JST on one side and for the other side I used DuPont connectors for GPIO breakout headers on the expansion board.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Battery Connection :")," I also have a 3.7V Lithium cell plugged into the expansion boards battery connection for use as a backup battery in case of main supply power loss."))),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/10.jpg",alt:"pir",width:500,height:"auto"})),(0,i.yg)("h4",{id:"step-3-cnnect-desired-style-of-momentary-buttons-to-the-inside-front-of-the-case"},"Step 3. Cnnect desired style of momentary buttons to the inside front of the case"),(0,i.yg)("p",null,"I accomplished this by attaching the buttons with a bit of heat glue. I then soldered wires to the diagonally opposing pins of the momentary buttons, and placed DuPont connectors on the other end of the wires to connect to the correct breakout GPIO headers on the expansion board."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/12.jpg",alt:"pir",width:1e3,height:"auto"})),(0,i.yg)("h4",{id:"step-4-assemble-screen-into-the-rear-of-the-front-cover"},"Step 4. Assemble screen into the rear of the front cover"),(0,i.yg)("p",null,"Assemble screen into the rear of the front cover(Secure in place with a small amount of heat glue). Then secure the front cover to case with 3 M4x6 screws as shown below."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/9.jpg",alt:"pir",width:500,height:"auto"})),(0,i.yg)("h3",{id:"5-connect-wires-to-the-corresponding-relays-on-ecostat"},"5. Connect Wires to the Corresponding Relays on EcoStat"),(0,i.yg)("p",null,"Smart Thermostat Complete! Simply remove your homes existing thermostat and use the picture below to connect the correct wires, to the corresponding relays on EcoStat!"),(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/XIAO_ESP32C3_ESPHome_Smart_ThermoStat/13.jpg",alt:"pir",width:500,height:"auto"}),(0,i.yg)("h2",{id:"-contributor-project"},"\u2728 Contributor Project"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"This project is supported by the Seeed Studio ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/orgs/Seeed-Studio/projects/6/views/1?pane=issue&itemId=30957479"},"Contributor Project"),"."),(0,i.yg)("li",{parentName:"ul"},"Thanks Chris's efforts and your work will be ",(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/Honorary-Contributors/"},"exhibited"),".")),(0,i.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,i.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,i.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,i.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}c.isMDXComponent=!0}}]);