"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[92403],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=s(n),c=r,k=d["".concat(o,".").concat(c)]||d[c]||m[c]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[d]="string"==typeof e?e:r,i[1]=p;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},65863:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const l={description:"ReSpeaker Mic Array v2.0",title:"ReSpeaker Mic Array v2.0",keywords:["ReSpeaker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/ReSpeaker_Mic_Array_v2.0",date:"4/14/2023",author:"H",sku:107990053},i=void 0,p={unversionedId:"zh-CN/Seeed_Elderly/reSpeaker/ReSpeaker_Mic_Array_v2.0",id:"zh-CN/Seeed_Elderly/reSpeaker/ReSpeaker_Mic_Array_v2.0",title:"ReSpeaker Mic Array v2.0",description:"ReSpeaker Mic Array v2.0",source:"@site/docs/zh-CN/Seeed_Elderly/reSpeaker/ReSpeaker_Mic_Array_v2.0.md",sourceDirName:"zh-CN/Seeed_Elderly/reSpeaker",slug:"/cn/ReSpeaker_Mic_Array_v2.0",permalink:"/cn/ReSpeaker_Mic_Array_v2.0",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Seeed_Elderly/reSpeaker/ReSpeaker_Mic_Array_v2.0.md",tags:[],version:"current",lastUpdatedBy:"Matthew",lastUpdatedAt:1715758269,formattedLastUpdatedAt:"May 15, 2024",frontMatter:{description:"ReSpeaker Mic Array v2.0",title:"ReSpeaker Mic Array v2.0",keywords:["ReSpeaker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/ReSpeaker_Mic_Array_v2.0",date:"4/14/2023",author:"H",sku:107990053}},o={},s=[{value:"\u7248\u672c\u65e5\u5fd7",id:"\u7248\u672c\u65e5\u5fd7",level:2},{value:"\u4ea7\u54c1\u7279\u6027",id:"\u4ea7\u54c1\u7279\u6027",level:2},{value:"\u89c4\u683c\u53c2\u6570",id:"\u89c4\u683c\u53c2\u6570",level:2},{value:"\u786c\u4ef6\u6982\u8ff0",id:"\u786c\u4ef6\u6982\u8ff0",level:2},{value:"\u5f15\u811a\u56fe",id:"\u5f15\u811a\u56fe",level:3},{value:"\u5c3a\u5bf8\u56fe",id:"\u5c3a\u5bf8\u56fe",level:2},{value:"\u521b\u610f\u5e94\u7528",id:"\u521b\u610f\u5e94\u7528",level:2},{value:"\u5165\u95e8\u6307\u5bfc",id:"\u5165\u95e8\u6307\u5bfc",level:2},{value:"\u5b89\u88c5 DFU \u548c LED \u63a7\u5236\u9a71\u52a8\u7a0b\u5e8f",id:"\u5b89\u88c5-dfu-\u548c-led-\u63a7\u5236\u9a71\u52a8\u7a0b\u5e8f",level:3},{value:"\u66f4\u65b0\u56fa\u4ef6",id:"\u66f4\u65b0\u56fa\u4ef6",level:3},{value:"\u63a7\u5236 LED",id:"\u63a7\u5236-led",level:3},{value:"\u8c03\u97f3",id:"\u8c03\u97f3",level:3},{value:"\u63d0\u53d6\u8bed\u97f3",id:"\u63d0\u53d6\u8bed\u97f3",level:3},{value:"\u5b9e\u65f6\u58f0\u6e90\u5b9a\u4f4d\u8ddf\u8e2a",id:"\u5b9e\u65f6\u58f0\u6e90\u5b9a\u4f4d\u8ddf\u8e2a",level:3},{value:"\u57fa\u4e8e\u6811\u8393\u6d3e\u7684free-avs",id:"\u57fa\u4e8e\u6811\u8393\u6d3e\u7684free-avs",level:3},{value:"FAQ",id:"faq",level:2},{value:"\u8d44\u6e90\u4e0b\u8f7d",id:"\u8d44\u6e90\u4e0b\u8f7d",level:2},{value:"\u6280\u672f\u652f\u6301",id:"\u6280\u672f\u652f\u6301",level:2}],u={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/usb_4_mic_array.png",alt:null})),(0,r.kt)("p",null,"Seeed \u7684 ReSpeaker Mic Array v2.0 \u662f\u57fa\u4e8e XVSM-2000 \u7684 ReSpeaker Mic Array v1.0 \u7684\u5347\u7ea7\u7248\u672c\u3002v2.0 \u662f\u57fa\u4e8e XMOS \u7684 XVF-3000 \u5f00\u53d1\u3002\u5b83\u53ef\u4ee5\u5806\u53e0 (\u8fde\u63a5) \u5230 ReSpeaker Core \u7684\u9876\u90e8\uff0c\u663e\u7740\u6539\u5584\u8bed\u97f3\u4ea4\u4e92\u4f53\u9a8c\u3002\u8be5\u4e3b\u677f\u96c6\u6210\u4e86 4 \u4e2a PDM \u9ea6\u514b\u98ce\uff0c\u6709\u52a9\u4e8e\u5c06 ReSpeaker \u7684\u58f0\u5b66 DSP \u6027\u80fd\u63d0\u9ad8\u5230\u66f4\u9ad8\u7684\u6c34\u5e73\u3002"),(0,r.kt)("p",null,"ReSpeaker Mic Array v2.0 \u76f4\u63a5\u652f\u6301 USB Audio Class 1.0 (UAC 1.0)\u3002\u6240\u6709\u4e3b\u6d41\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5982 Windows\uff0cMacOS\uff0cLinux \u90fd\u4e0e UAC 1.0 \u517c\u5bb9\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u4f5c\u4e3a\u58f0\u5361\u8fd0\u884c\u800c\u65e0\u9700 ReSpeaker Core\uff0c\u4f46\u5177\u6709\u8bed\u97f3\u7b97\u6cd5\u3002"),(0,r.kt)("p",null,"ReSpeaker Mic Array v2.0 \u6709\u4e24\u4e2a\u56fa\u4ef6\uff0c\u4e00\u4e2a\u5305\u542b\u8bed\u97f3\u7b97\u6cd5\uff0c\u53e6\u4e00\u4e2a\u4ec5\u6355\u83b7\u7528\u4e8e\u7279\u6b8a\u7528\u9014\u7684\u539f\u59cb\u8bed\u97f3\u6570\u636e\u3002"),(0,r.kt)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.kt)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/SeeedStudio-BeagleBone-Green-Wireless-p-2650.html"},(0,r.kt)("strong",null,(0,r.kt)("span",null,(0,r.kt)("font",{color:"FFFFFF",size:"4"}," \u8bf7\u70b9\u51fb\u6b64\u5904\u8d2d\u4e70 \ud83d\uddb1\ufe0f"))))),(0,r.kt)("h2",{id:"\u7248\u672c\u65e5\u5fd7"},"\u7248\u672c\u65e5\u5fd7"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u4ea7\u54c1\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7248\u672c\u4ecb\u7ecd"),(0,r.kt)("th",{parentName:"tr",align:null},"\u53d1\u5e03\u65e5\u671f"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ReSpeaker Mic Array v1.0"),(0,r.kt)("td",{parentName:"tr",align:null},"\u521d\u59cb\u7248\u672c"),(0,r.kt)("td",{parentName:"tr",align:null},"2016 \u5e74 8 \u6708 15 \u65e5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ReSpeaker Mic Array v2.0"),(0,r.kt)("td",{parentName:"tr",align:null},"MCU \u66f4\u6362\u4e3a XVF-3000\uff0cMic \u4ece 7 \u51cf\u5c11\u5230 4"),(0,r.kt)("td",{parentName:"tr",align:null},"2018 \u5e74 1 \u6708 25 \u65e5")))),(0,r.kt)("h2",{id:"\u4ea7\u54c1\u7279\u6027"},"\u4ea7\u54c1\u7279\u6027"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8fdc\u573a\u8bed\u97f3\u6355\u83b7"),(0,r.kt)("li",{parentName:"ul"},"UAC 1.0"),(0,r.kt)("li",{parentName:"ul"},"\u56db\u9ea6\u9635\u5217"),(0,r.kt)("li",{parentName:"ul"},"12 \u4e2a\u53ef\u7f16\u7a0b RGB LED \u6307\u793a\u706f"),(0,r.kt)("li",{parentName:"ul"},"\u8bed\u97f3\u7b97\u6cd5\u548c\u529f\u80fd"),(0,r.kt)("li",{parentName:"ul"},"\u8bed\u97f3\u6d3b\u52a8\u68c0\u6d4b Voice Activity Detection"),(0,r.kt)("li",{parentName:"ul"},"DOA(\u53ea\u80fd\u8f93\u51fa\u89d2\u5ea6)"),(0,r.kt)("li",{parentName:"ul"},"\u6ce2\u675f\u6210\u5f62"),(0,r.kt)("li",{parentName:"ul"},"\u566a\u58f0\u6291\u5236"),(0,r.kt)("li",{parentName:"ul"},"\u6d88\u6df7\u54cd"),(0,r.kt)("li",{parentName:"ul"},"\u58f0\u5b66\u56de\u58f0\u6d88\u9664")),(0,r.kt)("h2",{id:"\u89c4\u683c\u53c2\u6570"},"\u89c4\u683c\u53c2\u6570"),(0,r.kt)("table",{className:"tg",style:{tableLayout:"fixed",width:518}},(0,r.kt)("colgroup",null,(0,r.kt)("col",{style:{width:151}}),(0,r.kt)("col",{style:{width:367}})),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("th",{className:"tg-031e"},"\u9879"),(0,r.kt)("th",{className:"tg-031e"},"\u53c2\u6570")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-031e",rowSpan:7},"16 \u5185\u6838 XVF-3000"),(0,r.kt)("td",{className:"tg-031e"},"2 \u4e2a xCore \u78c1\u8d34\u4e0a\u7684 16 \u4e2a\u5b9e\u65f6\u903b\u8f91\u6838\u5fc3")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-031e"},"dual issue \u6a21\u5f0f\u4e0b\u5185\u6838\u5171\u4eab\u6700\u9ad8\u53ef\u8fbe 2400 MIPS")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"512KB \u5185\u90e8\u5355\u5468\u671f SRAM \u548c 2MB \u5185\u7f6e\u95ea\u5b58")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"16KB \u5185\u90e8 OTP (\u6bcf\u5757\u6700\u5927 8KB)")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"USB PHY\uff0c\u5b8c\u5168\u7b26\u5408 USB 2.0 \u89c4\u8303")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"\u53ef\u7f16\u7a0b I/O")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"\u652f\u6301 DFU \u6a21\u5f0f")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l",rowSpan:7},"4 \u4e2a\u6570\u5b57\u9ea6\u514b\u98ce (\u578b\u53f7 : MP34DT01-M)"),(0,r.kt)("td",{className:"tg-yw4l"},"\u5355\u7535\u6e90\u7535\u538b")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"\u4f4e\u529f\u8017")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"120 dB SPL \u58f0\u5b66\u8fc7\u8f7d\u70b9")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"61 dB \u4fe1\u566a\u6bd4")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"\u5168\u65b9\u4f4d\u7684\u7075\u654f\u5ea6")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"-26 dB FS \u7075\u654f\u5ea6")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"PDM \u8f93\u51fa")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l",rowSpan:2},"12 RGB LEDs (\u578b\u53f7 : APA102)"),(0,r.kt)("td",{className:"tg-yw4l"},"256 \u7ea7\u4eae\u5ea6")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"800kHz \u7ebf\u8def\u6570\u636e\u4f20\u8f93")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l",rowSpan:4},"\u97f3\u9891\u8f93\u51fa"),(0,r.kt)("td",{className:"tg-yw4l"},"\u677f\u8f7d 3.5mm Aux \u8f93\u51fa")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"WOLFSON WM8960")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"24 \u4f4d\u6216 16 \u4f4d 16kHz \u7acb\u4f53\u58f0\u8f93\u51fa")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"16 \u2126 @ 3.3 V \u4e0b\u8f93\u51fa\u529f\u7387\u4e3a 40mW")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"\u5c3a\u5bf8"),(0,r.kt)("td",{className:"tg-yw4l"},"\u76f4\u5f84 70mm")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l",rowSpan:2},"\u529f\u7387"),(0,r.kt)("td",{className:"tg-yw4l"},"Micro USB \u6216\u6269\u5c55\u63a5\u5934\u4f9b 5V \u7535\u6e90")),(0,r.kt)("tr",null,(0,r.kt)("td",{className:"tg-yw4l"},"\u529f\u8017 190mA")))),(0,r.kt)("h2",{id:"\u786c\u4ef6\u6982\u8ff0"},"\u786c\u4ef6\u6982\u8ff0"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/Hardware%20Overview.png",alt:null})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{face:"",size:3,font:!0,color:"ff0000"},"\u2460")," **XMOS XVF-3000 :** \u5b83\u96c6\u6210\u4e86\u5148\u8fdb\u7684 DSP \u7b97\u6cd5\uff0c\u5305\u62ec\u58f0\u5b66\u56de\u58f0\u6d88\u9664 (AEC)\uff0c\u6ce2\u675f\u6210\u5f62\uff0c\u53bb\u6df7\u54cd\uff0c\u566a\u58f0\u6291\u5236\u548c\u589e\u76ca\u63a7\u5236\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{face:"",size:3,font:!0,color:"ff0000"},"\u2461")," **Digital Microphone :** MP34DT01-M \u662f\u4e00\u6b3e\u8d85\u5c0f\u578b\uff0c\u4f4e\u529f\u8017\uff0c\u5168\u65b9\u4f4d\u7684\u6570\u5b57 MEMS \u9ea6\u514b\u98ce\uff0c\u5185\u7f6e\u7535\u5bb9\u5f0f\u611f\u5e94\u5143\u4ef6\u548c IC \u63a5\u53e3\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{face:"",size:3,font:!0,color:"ff0000"},"\u2462")," **RGB LED :** \u4e09\u8272 RGB LED\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{face:"",size:3,font:!0,color:"ff0000"},"\u2463")," **USB Port :** \u63d0\u4f9b\u7535\u6e90\u5e76\u63a7\u5236\u9ea6\u514b\u98ce\u9635\u5217\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{face:"",size:3,font:!0,color:"ff0000"},"\u2464")," **3.5mm Headphone jack :** \u8f93\u51fa\u97f3\u9891\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u6709\u6e90\u97f3\u54cd\u6216\u8033\u673a\u63d2\u5165\u6b64\u7aef\u53e3\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("font",{face:"",size:3,font:!0,color:"ff0000"},"\u2465")," **WM8960 :** WM8960 \u662f\u4e00\u6b3e\u4f4e\u529f\u8017\u7acb\u4f53\u58f0\u7f16\u89e3\u7801\u5668\uff0c\u91c7\u7528 D \u7c7b\u626c\u58f0\u5668\u9a71\u52a8\u5668\uff0c\u53ef\u4e3a\u6bcf\u4e2a\u901a\u9053\u63d0\u4f9b 1 W\uff0c\u603b\u8ba1 8 W \u7684\u8d1f\u8f7d\u3002")),(0,r.kt)("h3",{id:"\u5f15\u811a\u56fe"},"\u5f15\u811a\u56fe"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/Pin_Map.png",alt:null})),(0,r.kt)("h2",{id:"\u5c3a\u5bf8\u56fe"},"\u5c3a\u5bf8\u56fe"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/Dimension.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/Dimension1.png",alt:null})),(0,r.kt)("h2",{id:"\u521b\u610f\u5e94\u7528"},"\u521b\u610f\u5e94\u7528"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"USB \u8bed\u97f3\u6355\u83b7"),(0,r.kt)("li",{parentName:"ul"},"\u667a\u80fd\u97f3\u54cd"),(0,r.kt)("li",{parentName:"ul"},"\u667a\u80fd\u8bed\u97f3\u52a9\u7406\u7cfb\u7edf"),(0,r.kt)("li",{parentName:"ul"},"\u5f55\u97f3\u673a"),(0,r.kt)("li",{parentName:"ul"},"\u8bed\u97f3\u4f1a\u8bae\u7cfb\u7edf"),(0,r.kt)("li",{parentName:"ul"},"\u4f1a\u8bae\u901a\u4fe1\u8bbe\u5907"),(0,r.kt)("li",{parentName:"ul"},"\u8bed\u97f3\u4e92\u52a8\u673a\u5668\u4eba"),(0,r.kt)("li",{parentName:"ul"},"\u8f66\u8f7d\u8bed\u97f3\u52a9\u624b"),(0,r.kt)("li",{parentName:"ul"},"\u5176\u4ed6\u9700\u8981\u8bed\u97f3\u547d\u4ee4\u7684\u573a\u666f")),(0,r.kt)("h2",{id:"\u5165\u95e8\u6307\u5bfc"},"\u5165\u95e8\u6307\u5bfc"),(0,r.kt)("p",null,"!!!Note\nReSpeaker Mic Array v2.0 \u517c\u5bb9 Windows\uff0cMac \u548c Linux \u7cfb\u7edf\u3002\u4ee5\u4e0b\u811a\u672c\u5728 Python2.7 \u4e0a\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002"),(0,r.kt)("h3",{id:"\u5b89\u88c5-dfu-\u548c-led-\u63a7\u5236\u9a71\u52a8\u7a0b\u5e8f"},"\u5b89\u88c5 DFU \u548c LED \u63a7\u5236\u9a71\u52a8\u7a0b\u5e8f"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Windows :")," \u97f3\u9891\u5f55\u5236\u548c\u64ad\u653e\u8fd0\u884c\u826f\u597d\u3002Windows \u4e0a\u4ec5\u9700 Libusb-win32 \u9a71\u52a8\u7a0b\u5e8f\u6765\u63a7\u5236 LED \u6307\u793a\u706f\u3002\u6211\u4eec\u4f7f\u7528 ",(0,r.kt)("a",{parentName:"li",href:"https://zadig.akeo.ie/"},"\u4e00\u4e2a\u65b9\u4fbf\u7684\u5de5\u5177 - Zadig"),"\u4e3a ",(0,r.kt)("inlineCode",{parentName:"li"},"SEEED DFU")," \u548c ",(0,r.kt)("inlineCode",{parentName:"li"},"SEEED Control")," \u5b89\u88c5 libusb-win32 \u9a71\u52a8\u7a0b\u5e8f (ReSpeaker Mic Array \u5728 Windows \u8bbe\u5907\u7ba1\u7406\u5668\u4e2d\u4f1a\u663e\u793a 2 \u4e2a\u8bbe\u5907)\u3002")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/usb_4mic_array_driver.png",alt:null})),(0,r.kt)("p",null,"!!!Warning\n\u8bf7\u786e\u4fdd\u9009\u62e9 libusb-win32\uff0c\u800c\u4e0d\u662f WinUSB \u6216 libusbK\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"MAC :")," \u65e0\u9700\u5b89\u88c5\u9a71\u52a8"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Linux :")," \u65e0\u9700\u5b89\u88c5\u9a71\u52a8")),(0,r.kt)("h3",{id:"\u66f4\u65b0\u56fa\u4ef6"},"\u66f4\u65b0\u56fa\u4ef6"),(0,r.kt)("p",null,"\u67092\u4e2a\u56fa\u4ef6\u3002 \u4e00\u4e2a\u5305\u542b 1 \u4e2a\u901a\u9053\u6570\u636e\uff0c\u53e6\u4e00\u4e2a\u5305\u542b 6 \u4e2a\u901a\u9053\u6570\u636e\u3002\u8fd9\u91cc\u662f\u5dee\u5f02\u8868 :"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u56fa\u4ef6\u7248\u672c"),(0,r.kt)("th",{parentName:"tr",align:null},"\u901a\u9053\u6570"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8bf4\u660e"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1_channel_firmware.bin"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"\u4e3a ASR \u5904\u7406\u97f3\u9891")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6_channels_firmware.bin"),(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"\u901a\u9053 0 : ASR \u5904\u7406\u97f3\u9891\uff0c\u901a\u9053 1 : mic1 \u539f\u59cb\u6570\u636e\uff0c\u901a\u9053 2 : mic2 \u539f\u59cb\u6570\u636e\uff0c\u901a\u9053 3 : mic3 \u539f\u59cb\u6570\u636e\uff0c\u901a\u9053 4 : mic4 \u539f\u59cb\u6570\u636e\uff0c\u901a\u9053 5 : \u5408\u5e76\u64ad\u653e")))),(0,r.kt)("p",null,"\u8fd9\u662f audacity \u5237 i6_firmware \u540e\u7684\u5f55\u97f3\n",(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/Audacity.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Linux \u7cfb\u7edf :"),"  ReSpeaker Mic Array v2.0 \u652f\u6301 USB DFU\u3002\u6211\u4eec\u5f00\u53d1\u4e86\u4e00\u4e2a ",(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/dfu.py"},"python script dfu.py")," \u6765\u901a\u8fc7 USB \u66f4\u65b0\u56fa\u4ef6\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"sudo apt-get update\nsudo pip install pyusb click\ngit clone https://github.com/respeaker/usb_4_mic_array.git\ncd usb_4_mic_array\nsudo python dfu.py --download 1_channel_firmware.bin  # \u8fd9\u4e2a\u662f\u53c2\u6570\u53ef\u4ee5\u5728https://github.com/respeaker/usb_4_mic_array.git\u4e0a\u67e5\u770b\u53ef\u4ee5\u9009\u62e9\u4e0b\u8f7d\u56fa\u4ef6\u54c8\n")),(0,r.kt)("p",null,"\u8fd9\u662f\u56fa\u4ef6\u4e0b\u8f7d\u7ed3\u679c\u3002\n",(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/Download_firmware.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Windows \u7528\u6237 :")," \u6211\u4eec\u4e0d\u5efa\u8bae\u4f7f\u7528 Windows \u66f4\u65b0\u56fa\u4ef6\u3002"),(0,r.kt)("h3",{id:"\u63a7\u5236-led"},"\u63a7\u5236 LED"),(0,r.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 USB \u63a7\u5236 ReSpeaker Mic Array V2 \u7684 LED\u3002USB \u8bbe\u5907\u5177\u6709\u4f9b\u5e94\u5546\u7279\u5b9a\u7684\u7b49\u7ea7\u63a5\u53e3\uff0c\u53ef\u7528\u4e8e\u901a\u8fc7 USB \u63a7\u5236\u4f20\u8f93\u53d1\u9001\u6570\u636e\u3002\u6211\u4eec\u5f15\u7528 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pyusb/pyusb"},"pyusb python library")," \u5e76\u53d1\u5e03 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/respeaker/pixel_ring/blob/master/pixel_ring/usb_pixel_ring_v2.py"},"usb_pixel_ring python library"),"\u3002"),(0,r.kt)("p",null,"LED \u63a7\u5236\u547d\u4ee4\u7531 pyusb \u7684 usb.core.Device.ctrl_transfer() \u53d1\u9001\uff0c\u5176\u53c2\u6570\u5982\u4e0b :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ctrl_transfer(usb.util.CTRL_OUT | usb.util.CTRL_TYPE_VENDOR | usb.util.CTRL_RECIPIENT_DEVICE, 0, command, 0x1C, data, TIMEOUT)\n\n")),(0,r.kt)("p",null,"\u8fd9\u91cc\u662f usb_pixel_ring APIs\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Command"),(0,r.kt)("th",{parentName:"tr",align:null},"Data"),(0,r.kt)("th",{parentName:"tr",align:null},"API"),(0,r.kt)("th",{parentName:"tr",align:null},"Note"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0"),(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.trace()"),(0,r.kt)("td",{parentName:"tr",align:null},"trace mode, LEDs changing depends on VAD",(0,r.kt)("em",{parentName:"td"},"and DOA"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"[red, green, blue, 0]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.mono()"),(0,r.kt)("td",{parentName:"tr",align:null},"mono mode, set all RGB LED to a single color, for example Red(0xFF0000), Green(0x00FF00)\uff0c Blue(0x0000FF)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.listen()"),(0,r.kt)("td",{parentName:"tr",align:null},"listen mode, similar with trace mode, but not turn LEDs off")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.speak()"),(0,r.kt)("td",{parentName:"tr",align:null},"wait mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.think()"),(0,r.kt)("td",{parentName:"tr",align:null},"speak mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"[0]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.spin()"),(0,r.kt)("td",{parentName:"tr",align:null},"spin mode")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"[r, g, b, 0]"," * 12"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.custimize()"),(0,r.kt)("td",{parentName:"tr",align:null},"custom mode, set each LED to its own color")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0x20"),(0,r.kt)("td",{parentName:"tr",align:null},"[brightness]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.set_brightness()"),(0,r.kt)("td",{parentName:"tr",align:null},"set brightness, range: 0x00~0x1F")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0x21"),(0,r.kt)("td",{parentName:"tr",align:null},"[r1, g1, b1, 0, r2, g2, b2, 0]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.set_color_palette()"),(0,r.kt)("td",{parentName:"tr",align:null},"set color palette, for example, pixel_ring.set_color_palette(0xff0000, 0x00ff00) together with pixel_ring.think()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0x22"),(0,r.kt)("td",{parentName:"tr",align:null},"[vad_led]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.set_vad_led()"),(0,r.kt)("td",{parentName:"tr",align:null},"set center LED: 0 - off, 1 - on, else - depends on VAD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0x23"),(0,r.kt)("td",{parentName:"tr",align:null},"[volume]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.set_volume()"),(0,r.kt)("td",{parentName:"tr",align:null},"show volume, range: 0 ~ 12")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"0x24"),(0,r.kt)("td",{parentName:"tr",align:null},"[pattern]"),(0,r.kt)("td",{parentName:"tr",align:null},"pixel_ring.change_pattern()"),(0,r.kt)("td",{parentName:"tr",align:null},"set pattern, 0 - Google Home pattern, others - Echo pattern")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Linux \u7cfb\u7edf :")," \u8fd9\u91cc\u662f\u63a7\u5236 LED \u7684\u793a\u4f8b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"git clone https://github.com/respeaker/pixel_ring.git\ncd pixel_ring\nsudo python setup.py install\nsudo python examples/usb_mic_array.py\n")),(0,r.kt)("p",null,"\u8fd9\u91cc\u662f usb_mic_array.py \u7684\u4ee3\u7801\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"import time\nfrom pixel_ring import pixel_ring\n\n\nif __name__ == '__main__':\n    pixel_ring.change_pattern('echo')\n    while True:\n\n        try:\n            pixel_ring.wakeup()\n            time.sleep(3)\n            pixel_ring.think()\n            time.sleep(3)\n            pixel_ring.speak()\n            time.sleep(6)\n            pixel_ring.off()\n            time.sleep(3)\n        except KeyboardInterrupt:\n            break\n\n\n    pixel_ring.off()\n    time.sleep(1)\n\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Windows \u7cfb\u7edf")," \u8fd9\u91cc\u662f\u63a7\u5236 LED \u7684\u793a\u4f8b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"git clone https://github.com/respeaker/pixel_ring.git\ncd pixel_ring/pixel_ring\n")),(0,r.kt)("p",null,"\u7528\u4e0b\u9762\u7684\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a ",(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/led_control.py"},"led_control.py")," \u5e76\u8fd0\u884c 'python led_control.py'"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},"from usb_pixel_ring_v2 import PixelRing\nimport usb.core\nimport usb.util\nimport time\n\ndev = usb.core.find(idVendor=0x2886, idProduct=0x0018)\nprint dev\nif dev:\n    pixel_ring = PixelRing(dev)\n\n    while True:\n        try:\n            pixel_ring.wakeup(180)\n            time.sleep(3)\n            pixel_ring.listen()\n            time.sleep(3)\n            pixel_ring.think()\n            time.sleep(3)\n            pixel_ring.set_volume(8)\n            time.sleep(3)\n            pixel_ring.off()\n            time.sleep(3)\n        except KeyboardInterrupt:\n            break\n\n    pixel_ring.off()\n\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},'\u5982\u679c\u60a8\u5728\u5c4f\u5e55\u4e0a\u770b\u5230 "None"\uff0c\u8bf7\u91cd\u65b0\u5b89\u88c5 libusb-win32 \u9a71\u52a8\u7a0b\u5e8f\u3002')),(0,r.kt)("h3",{id:"\u8c03\u97f3"},"\u8c03\u97f3"),(0,r.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u914d\u7f6e\u4e00\u4e9b\u5185\u7f6e\u7b97\u6cd5\u7684\u53c2\u6570\u3002\u5b83\u9002\u7528\u4e8e Linux \u548c Windows\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u5b8c\u6574\u5217\u8868\u53c2\u6570 :")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git clone https://github.com/respeaker/usb_4_mic_array.git\ncd usb_4_mic_array\npython tuning.py -p\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u5173\u95ed\u81ea\u52a8\u589e\u76ca\u63a7\u5236 (AGC) :")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python tuning.py AGCONOFF 0\n")),(0,r.kt)("p",null,"\u540c\u65f6\uff0c\u5bf9\u5e94liunx\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b89\u88c5\u4e00\u4e2a\u53ef\u89c6\u5316\u7684\u8c03\u97f3\u8f6f\u4ef6"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt-get install pavucontrol\n")),(0,r.kt)("h3",{id:"\u63d0\u53d6\u8bed\u97f3"},"\u63d0\u53d6\u8bed\u97f3"),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("a",{parentName:"p",href:"https://people.csail.mit.edu/hubert/pyaudio/"},"PyAudio python library")," \u901a\u8fc7 USB \u63d0\u53d6\u8bed\u97f3\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Linux \u7cfb\u7edf :")," \u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5f55\u5236\u6216\u64ad\u653e\u8bed\u97f3\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},"arecord -D plughw:1,0 -f cd test.wav # record, please use the arecord -l to check the card and hardware first\naplay -D plughw:1,0 -f cd test.wav # play, please use the aplay -l to check the card and hardware first\narecord -D plughw:1,0 -f cd |aplay -D plughw:1,0 -f cd # record and play at the same time\n")),(0,r.kt)("p",null,"\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528 python \u811a\u672c\u6765\u63d0\u53d6\u8bed\u97f3\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6b65\u9aa4 1\uff0c\u6211\u4eec\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u6765\u83b7\u53d6\u9ea6\u514b\u98ce\u9635\u5217\u7684\u8bbe\u5907\u7d22\u5f15\u53f7 :")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},"sudo pip install pyaudio\ncd ~\nnano get_index.py\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Step 2, \u590d\u5236\u4e0b\u9762\u7684\u4ee3\u7801\u5e76\u7c98\u8d34\u5230 ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/get_index.py"},"get_index.py"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},"import pyaudio\n\np = pyaudio.PyAudio()\ninfo = p.get_host_api_info_by_index(0)\nnumdevices = info.get('deviceCount')\n\nfor i in range(0, numdevices):\n        if (p.get_device_info_by_host_api_device_index(0, i).get('maxInputChannels')) > 0:\n            print \"Input Device id \", i, \" - \", p.get_device_info_by_host_api_device_index(0, i).get('name')\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Step 3, \u6309 Ctrl + X \u9000\u51fa\u5e76\u6309 Y \u4fdd\u5b58\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Step 4, \u8fd0\u884c 'sudo python get_index.py'\uff0c\u6211\u4eec\u5c06\u770b\u5230\u5982\u4e0b\u7684\u8bbe\u5907 ID\u3002"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input Device id  2  -  ReSpeaker 4 Mic Array (UAC1.0): USB Audio (hw:1,0)\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Step 5, \u5c06 ",(0,r.kt)("inlineCode",{parentName:"li"},"RESPEAKER_INDEX = 2")," \u66f4\u6539\u4e3a\u7d22\u5f15\u53f7\u3002\u8fd0\u884c python \u811a\u672c ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/record.py"},"record.py")," \u6765\u5f55\u5236\u8bed\u97f3\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},'import pyaudio\nimport wave\n\nRESPEAKER_RATE = 16000\nRESPEAKER_CHANNELS = 1 # change base on firmwares, default_firmware.bin as 1 or i6_firmware.bin as 6\nRESPEAKER_WIDTH = 2\n# run getDeviceInfo.py to get index\nRESPEAKER_INDEX = 2  # refer to input device id\nCHUNK = 1024\nRECORD_SECONDS = 5\nWAVE_OUTPUT_FILENAME = "output.wav"\n\np = pyaudio.PyAudio()\n\nstream = p.open(\n            rate=RESPEAKER_RATE,\n            format=p.get_format_from_width(RESPEAKER_WIDTH),\n            channels=RESPEAKER_CHANNELS,\n            input=True,\n            input_device_index=RESPEAKER_INDEX,)\n\nprint("* recording")\n\nframes = []\n\nfor i in range(0, int(RESPEAKER_RATE / CHUNK * RECORD_SECONDS)):\n    data = stream.read(CHUNK)\n    frames.append(data)\n\nprint("* done recording")\n\nstream.stop_stream()\nstream.close()\np.terminate()\n\nwf = wave.open(WAVE_OUTPUT_FILENAME, \'wb\')\nwf.setnchannels(RESPEAKER_CHANNELS)\nwf.setsampwidth(p.get_sample_size(p.get_format_from_width(RESPEAKER_WIDTH)))\nwf.setframerate(RESPEAKER_RATE)\nwf.writeframes(b\'\'.join(frames))\nwf.close()\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Windows \u7cfb\u7edf:")," \u6211\u4eec\u9996\u5148\u8fd0\u884c\u547d\u4ee4 'pip install pyaudio'\uff0c\u7136\u540e\u4f7f\u7528 ",(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/get_index.py"},"get_index.py")," \u548c ",(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/record.py"},"record.py")," \u6765\u63d0\u53d6\u8bed\u97f3\u3002"),(0,r.kt)("p",null,':::Warning\n\u5982\u679c\u770b\u5230 "Error: %1 is not a valid Win32 application."\uff0c\u8bf7\u5b89\u88c5 Python Win32 \u7248\u672c\u3002\n:::'),(0,r.kt)("h3",{id:"\u5b9e\u65f6\u58f0\u6e90\u5b9a\u4f4d\u8ddf\u8e2a"},"\u5b9e\u65f6\u58f0\u6e90\u5b9a\u4f4d\u8ddf\u8e2a"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/introlab/odas"},"ODAS")," \u4ee3\u8868 Open embeddeD Audition System\u3002\u8fd9\u662f\u4e00\u4e2a\u4e13\u95e8\u7528\u4e8e\u58f0\u6e90\u5b9a\u4f4d\uff0c\u8ffd\u8e2a\uff0c\u5206\u79bb\u548c\u540e\u671f\u8fc7\u6ee4\u7684\u5e93\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Linux \u7528\u6237:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Step 1. \u83b7\u5f97 ODAS \u5e76\u6784\u5efa\u5b83\u3002")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sudo apt-get install libfftw3-dev libconfig-dev libasound2-dev libgconf-2-4\nsudo apt-get install cmake\ngit clone https://github.com/introlab/odas.git\nmkdir odas/build\ncd odas/build\ncmake ..\nmake\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Step 2. \u83b7\u5f97 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/introlab/odas_web/releases"},"ODAS Studio")," \u7136\u540e\u6253\u5f00.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Step 3. odascore \u5c06\u4f4d\u4e8e odas/bin/odascore\uff0c\u914d\u7f6e\u6587\u4ef6\u662f ",(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/respeaker/usb_4_mic_array/master/odas.cfg"},"odas.cfg"),"\u3002\u8bf7\u6839\u636e\u60a8\u7684\u58f0\u5361\u53f7\u66f4\u6539 odas.cfg\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Step 4. \u4f7f\u7528\u5305\u542b 4 \u58f0\u9053\u539f\u59cb\u97f3\u9891\u6570\u636e\u7684 i6_firmware.bin \u66f4\u65b0\u9ea6\u514b\u98ce\u9635\u5217\u3002"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/live_data.png",alt:null})),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u4e8e Windows \u7cfb\u7edf :")," \u8bf7\u53c2\u8003 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/introlab/odas"},"ODAS"),"."),(0,r.kt)("h3",{id:"\u57fa\u4e8e\u6811\u8393\u6d3e\u7684free-avs"},"\u57fa\u4e8e\u6811\u8393\u6d3e\u7684free-avs"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step 1. \u914d\u7f6e\u548c\u5b89\u88c5\u76f8\u5173\u4f9d\u8d56")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git clone https://github.com/respeaker/4mics_hat.git\ncd ~/4mics_hat\nsudo apt install libatlas-base-dev     # \u5b89\u88c5 snowboy dependencies\nsudo apt install python-pyaudio        # \u5b89\u88c5pyaudio\u97f3\u9891\u5904\u7406\u5305\npip install ./snowboy*.whl             # \u5b89\u88c5 snowboy for KWS\npip install ./webrtc*.whl              # \u5b89\u88c5 webrtc for DoA\ncd ~/\ngit clone https://github.com/voice-engine/voice-engine #write by seeed\ncd voice-engine/\npython setup.py bdist_wheel\npip install dist/*.whl\ncd ~/\ngit clone https://github.com/respeaker/avs\ncd avs                                 # install Requirements\npython setup.py install\npip install avs==0.5.3\nsudo apt install libgstreamer1.0-0\nsudo apt install gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \nsudo apt install gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tool\nsudo apt install gstreamer1.0-plugins-good\nsudo apt install python-gi gir1.2-gstreamer-1.0\npip install tornado==5.1.1\nsudo apt install mpg123\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step 2. \u53d6\u5f97\u6388\u6743")),(0,r.kt)("p",null,"\u5728\u7ec8\u7aef\u8fd0\u884c alexa-auth \uff0c\u7136\u540e\u767b\u9646\u83b7\u53d6alexa\u7684\u6388\u6743\uff0c \u6216\u8005\u8fd0\u884c dueros-auth \u83b7\u53d6\u767e\u5ea6\u7684\u6388\u6743\u3002 \u6388\u6743\u7684\u6587\u4ef6\u4fdd\u5b58\u5728/home/pi/.avs.json\u3002\n",(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker-4-Mic-Array-for-Raspberry-Pi/img/auth.png",alt:null})),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"\u5982\u679c\u6211\u4eec\u5728 alexa-auth \u548c dueros-auth\u4e4b\u95f4\u5207\u6362, \u8bf7\u5148\u5220\u9664 /home/pi/.avs.json \u3002 \u8fd9\u4e2a\u662f\u9690\u85cf\u6587\u4ef6\uff0c\u8bf7\u7528 ls -la \u663e\u793a\u6587\u4ef6\u3002")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"step 3. \u8ba9\u6211\u4eecHigh\u8d77\u6765!")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd ~/4mics_hat\nnano ns_kws_doa_alexa_with_light.py\n")),(0,r.kt)("p",null,"\u6309\u7167\u4e0b\u9762\u7684\u4fe1\u606f\u66f4\u65b0\u4e0b\u9762\u4ee3\u7801\u7684\u8bbe\u7f6e:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\"\"\"\nHands-free Voice Assistant with Snowboy and Alexa Voice Service.\n\nRequirement:\n    sudo apt-get install python-numpy\n    pip install webrtc-audio-processing\n    pip install spidev\n\"\"\"\n\n\nimport time\nimport logging\nfrom voice_engine.source import Source\nfrom voice_engine.channel_picker import ChannelPicker\nfrom voice_engine.kws import KWS\nfrom voice_engine.ns import NS\nfrom voice_engine.doa_respeaker_4mic_array import DOA\nfrom avs.alexa import Alexa\n\n\ndef main():\n    logging.basicConfig(level=logging.DEBUG)\n\n    src = Source(rate=16000, channels=1, device_name='plughw:1,0')\n    ch1 = ChannelPicker(channels=1, pick=1)\n    ns = NS(rate=16000, channels=1)\n    kws = KWS(model='snowboy')\n    doa = DOA(rate=16000)\n    alexa = Alexa()\n\n\n    def on_detected(keyword):\n        direction = doa.get_direction()\n        logging.info('detected {} at direction {}'.format(keyword, direction))\n        alexa.listen()\n\n    kws.on_detected = on_detected\n\n    src.link(ch1)\n    ch1.link(ns)\n    ns.link(kws)\n    kws.link(alexa)\n\n    src.link(doa)\n\n    src.recursive_start()\n\n    while True:\n        try:\n            time.sleep(1)\n        except KeyboardInterrupt:\n            break\n\n    src.recursive_stop()\n\n\nif __name__ == '__main__':\n    main()\n")),(0,r.kt)("p",null,"\u5047\u5982\u9700\u8981\u4f7f\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"mic-array"),"\u4f5c\u4e3a\u97f3\u9891\u8f93\u51fa\u53e3\u7684\u8bdd\u5219\u5982\u4e0b\u56fe\u8fdb\u884c\u8bbe\u7f6e\n",(0,r.kt)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/img/audio-output.png",alt:null}),"\n\u8fd0\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"PLAYER=mpg123 python ns_kws_doa_alexa_with_light.py"),", \u6211\u4eec\u4f1a\u5728\u7ec8\u7aef\u770b\u5230\u5f88\u591a debug \u7684\u6d88\u606f. \u5f53\u6211\u4eec\u770b\u5230",(0,r.kt)("inlineCode",{parentName:"p"},"status code: 204"),"\u7684\u65f6\u5019, \u8bf7\u8bf4",(0,r.kt)("inlineCode",{parentName:"p"},"snowboy"),'\u6765\u5524\u9192 respeaker\u3002\u63a5\u4e0b\u6765 respeaker \u4e0a\u7684 led \u706f\u4eae\u8d77\u6765, \u6211\u4eec\u53ef\u4ee5\u8ddf\u4ed6\u5bf9\u8bdd, \u6bd4\u5982\u95ee\uff0c"\u8c01\u662f\u6700\u5e05\u7684?" \u6216\u8005 "\u64ad\u653e\u5218\u5fb7\u534e\u7684\u7537\u4eba\u54ed\u5427\u54ed\u5427\u4e0d\u662f\u7f6a"\u3002\u5c0f\u4f19\u4f34\uff0c\u5c3d\u60c5\u7684 High \u8d77\u6765\u5427\u3002'),(0,r.kt)("h2",{id:"faq"},"FAQ"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Q1: \u5185\u7f6e\u7b97\u6cd5\u7684\u53c2\u6570")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pi@raspberrypi:~/usb_4_mic_array $ python tuning.py -p\nname   type max min r/w info\n-------------------------------\nAECFREEZEONOFF   int 1 0 rw Adaptive Echo Canceler updates inhibit.\n                                                            0 = Adaptation enabled\n                                                            1 = Freeze adaptation, filter only\nAECNORM          float 16 0.25 rw Limit on norm of AEC filter coefficients\nAECPATHCHANGE    int 1 0 ro AEC Path Change Detection.\n                                                            0 = false (no path change detected)\n                                                            1 = true (path change detected)\nAECSILENCELEVEL  float 1 1e-09 rw Threshold for signal detection in AEC [-inf .. 0] dBov (Default: -80dBov = 10log10(1x10-8))\nAECSILENCEMODE   int 1 0 ro AEC far-end silence detection status.\n                                                            0 = false (signal detected)\n                                                            1 = true (silence detected)\nAGCDESIREDLEVEL  float 0.99 1e-08 rw Target power level of the output signal.\n                                                            [\u2212inf .. 0] dBov (default: \u221223dBov = 10log10(0.005))\nAGCGAIN          float 1000 1 rw Current AGC gain factor.\n                                                            [0 .. 60] dB (default: 0.0dB = 20log10(1.0))\nAGCMAXGAIN       float 1000 1 rw Maximum AGC gain factor.\n                                                            [0 .. 60] dB (default 30dB = 20log10(31.6))\nAGCONOFF         int 1 0 rw Automatic Gain Control.\n                                                            0 = OFF\n                                                            1 = ON\nAGCTIME          float 1 0.1 rw Ramps-up / down time-constant in seconds.\nCNIONOFF         int 1 0 rw Comfort Noise Insertion.\n                                                            0 = OFF\n                                                            1 = ON\nDOAANGLE         int 359 0 ro DOA angle. Current value. Orientation depends on build configuration.\nECHOONOFF        int 1 0 rw Echo suppression.\n                                                            0 = OFF\n                                                            1 = ON\nFREEZEONOFF      int 1 0 rw Adaptive beamformer updates.\n                                                            0 = Adaptation enabled\n                                                            1 = Freeze adaptation, filter only\nFSBPATHCHANGE    int 1 0 ro FSB Path Change Detection.\n                                                            0 = false (no path change detected)\n                                                            1 = true (path change detected)\nFSBUPDATED       int 1 0 ro FSB Update Decision.\n                                                            0 = false (FSB was not updated)\n                                                            1 = true (FSB was updated)\nGAMMAVAD_SR      float 1000 0 rw Set the threshold for voice activity detection.\n                                                            [\u2212inf .. 60] dB (default: 3.5dB 20log10(1.5))\nGAMMA_E          float 3 0 rw Over-subtraction factor of echo (direct and early components). min .. max attenuation\nGAMMA_ENL        float 5 0 rw Over-subtraction factor of non-linear echo. min .. max attenuation\nGAMMA_ETAIL      float 3 0 rw Over-subtraction factor of echo (tail components). min .. max attenuation\nGAMMA_NN         float 3 0 rw Over-subtraction factor of non- stationary noise. min .. max attenuation\nGAMMA_NN_SR      float 3 0 rw Over-subtraction factor of non-stationary noise for ASR.\n                                                            [0.0 .. 3.0] (default: 1.1)\nGAMMA_NS         float 3 0 rw Over-subtraction factor of stationary noise. min .. max attenuation\nGAMMA_NS_SR      float 3 0 rw Over-subtraction factor of stationary noise for ASR.\n                                                            [0.0 .. 3.0] (default: 1.0)\nHPFONOFF         int 3 0 rw High-pass Filter on microphone signals.\n                                                            0 = OFF\n                                                            1 = ON - 70 Hz cut-off\n                                                            2 = ON - 125 Hz cut-off\n                                                            3 = ON - 180 Hz cut-off\nMIN_NN           float 1 0 rw Gain-floor for non-stationary noise suppression.\n                                                            [\u2212inf .. 0] dB (default: \u221210dB = 20log10(0.3))\nMIN_NN_SR        float 1 0 rw Gain-floor for non-stationary noise suppression for ASR.\n                                                            [\u2212inf .. 0] dB (default: \u221210dB = 20log10(0.3))\nMIN_NS           float 1 0 rw Gain-floor for stationary noise suppression.\n                                                            [\u2212inf .. 0] dB (default: \u221216dB = 20log10(0.15))\nMIN_NS_SR        float 1 0 rw Gain-floor for stationary noise suppression for ASR.\n                                                            [\u2212inf .. 0] dB (default: \u221216dB = 20log10(0.15))\nNLAEC_MODE       int 2 0 rw Non-Linear AEC training mode.\n                                                            0 = OFF\n                                                            1 = ON - phase 1\n                                                            2 = ON - phase 2\nNLATTENONOFF     int 1 0 rw Non-Linear echo attenuation.\n                                                            0 = OFF\n                                                            1 = ON\nNONSTATNOISEONOFF int 1 0 rw Non-stationary noise suppression.\n                                                            0 = OFF\n                                                            1 = ON\nNONSTATNOISEONOFF_SR int 1 0 rw Non-stationary noise suppression for ASR.\n                                                            0 = OFF\n                                                            1 = ON\nRT60             float 0.9 0.25 ro Current RT60 estimate in seconds\nRT60ONOFF        int 1 0 rw RT60 Estimation for AES. 0 = OFF 1 = ON\nSPEECHDETECTED   int 1 0 ro Speech detection status.\n                                                            0 = false (no speech detected)\n                                                            1 = true (speech detected)\nSTATNOISEONOFF   int 1 0 rw Stationary noise suppression.\n                                                            0 = OFF\n                                                            1 = ON\nSTATNOISEONOFF_SR int 1 0 rw Stationary noise suppression for ASR.\n                                                            0 = OFF\n                                                            1 = ON\nTRANSIENTONOFF   int 1 0 rw Transient echo suppression.\n                                                            0 = OFF\n                                                            1 = ON\nVOICEACTIVITY    int 1 0 ro VAD voice activity status.\n                                                            0 = false (no voice activity)\n                                                            1 = true (voice activity)\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Q2: ImportError: No module named usb.core")),(0,r.kt)("p",null,"A2: Run sudo pip install pyusb to install the pyusb."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'pi@raspberrypi:~/usb_4_mic_array $ sudo python tuning.py DOAANGLE\nTraceback (most recent call last):\n  File "tuning.py", line 5, in <module>\n    import usb.core\nImportError: No module named usb.core\npi@raspberrypi:~/usb_4_mic_array $ sudo pip install pyusb\nCollecting pyusb\n  Downloading pyusb-1.0.2.tar.gz (54kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 61kB 101kB/s\nBuilding wheels for collected packages: pyusb\n  Running setup.py bdist_wheel for pyusb ... done\n  Stored in directory: /root/.cache/pip/wheels/8b/7f/fe/baf08bc0dac02ba17f3c9120f5dd1cf74aec4c54463bc85cf9\nSuccessfully built pyusb\nInstalling collected packages: pyusb\nSuccessfully installed pyusb-1.0.2\npi@raspberrypi:~/usb_4_mic_array $ sudo python tuning.py DOAANGLE\nDOAANGLE: 180\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Q3: \u80fd\u76f4\u63a5\u901a\u8fc73.5mm\u8033\u673a\u5b54\u542c\u5230\u91c7\u6837\u7684\u58f0\u97f3\u5417?")),(0,r.kt)("p",null,"A5 \u4e0d\u884c\u7684\u30023.5mm\u8033\u673a\u5b54\u97f3\u6e90\u6765\u81ea\u4e8e\u4e0a\u4f4d\u673a\uff0c\u4f46\u662f\u5982\u679c\u7528\u6811\u8393\u6d3e\u7684\u8bdd\u53ef\u4ee5\u901a\u8fc7\u6267\u884carecord -D plughw:1,0 -f cd |aplay -D plughw:1,0 -f cd \u8fbe\u5230\u76ee\u7684"),(0,r.kt)("h2",{id:"\u8d44\u6e90\u4e0b\u8f7d"},"\u8d44\u6e90\u4e0b\u8f7d"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[\u4ea7\u54c1\u7b80\u4ecb]")," ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/ReSpeaker%20MicArray%20v2.0%20Product%20Brief.pdf"},"ReSpeaker MicArray v2.0 Product Brief")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[\u4ea7\u54c1\u7b80\u4ecb]")," ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/XVF3000-3100-product-brief_1.4.pdf"},"XVF3000 Product Brief")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[\u82af\u7247\u6570\u636e\u624b\u518c]")," ",(0,r.kt)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/ReSpeaker_Mic_Array_V2/res/XVF3000-3100-TQ128-Datasheet_1.0.pdf"},"XVF3000 Datasheet"))),(0,r.kt)("h2",{id:"\u6280\u672f\u652f\u6301"},"\u6280\u672f\u652f\u6301"),(0,r.kt)("p",null,"\u5982\u679c\u60a8\u6709\u4efb\u4f55\u6280\u672f\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb ",(0,r.kt)("a",{parentName:"p",href:"mailto:techsupport@seeed.cc"},"techsupport@seeed.cc"),"\u3002\u6216\u8005\u5c06\u95ee\u9898\u63d0\u4ea4\u5230\u6211\u4eec\u7684 ",(0,r.kt)("a",{parentName:"p",href:"http://seeedstudio.com/forum/"},"\u8bba\u575b"),"\u3002"))}m.isMDXComponent=!0}}]);