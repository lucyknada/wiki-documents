"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[45023],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>y});var a=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),g=p(n),c=i,y=g["".concat(s,".").concat(c)]||g[c]||u[c]||r;return n?a.createElement(y,o(o({ref:t},d),{},{components:n})):a.createElement(y,o({ref:t},d))}));function y(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},19365:(e,t,n)=>{n.d(t,{A:()=>o});var a=n(96540),i=n(20053);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,o),hidden:n},t)}},11470:(e,t,n)=>{n.d(t,{A:()=>v});var a=n(58168),i=n(96540),r=n(20053),o=n(23104),l=n(56347),s=n(57485),p=n(31682),d=n(89466);function g(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:i}}=e;return{value:t,label:n,attributes:a,default:i}}))}function u(e){const{values:t,children:n}=e;return(0,i.useMemo)((()=>{const e=t??g(n);return function(e){const t=(0,p.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function c(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.W6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=u(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:r}))),[s,p]=y({queryString:n,groupId:a}),[g,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,r]=(0,d.Dv)(n);return[a,(0,i.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),h=(()=>{const e=s??g;return c({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!c({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),m(e)}),[p,m,r]),tabValues:r}}var h=n(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:p}=e;const d=[],{blockElementScrollPositionUntilNextRender:g}=(0,o.a_)(),u=e=>{const t=e.currentTarget,n=d.indexOf(t),a=p[n].value;a!==l&&(g(t),s(a))},c=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=d.indexOf(e.currentTarget)+1;t=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(e.currentTarget)-1;t=d[n]??d[d.length-1];break}}t?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:o}=e;return i.createElement("li",(0,a.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:c,onClick:u},o,{className:(0,r.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":l===t})}),n??t)})))}function S(e){let{lazy:t,children:n,selectedValue:a}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function w(e){const t=m(e);return i.createElement("div",{className:(0,r.A)("tabs-container",f.tabList)},i.createElement(b,(0,a.A)({},e,t)),i.createElement(S,(0,a.A)({},e,t)))}function v(e){const t=(0,h.A)();return i.createElement(w,(0,a.A)({key:String(t)},e))}},58974:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>y,frontMatter:()=>l,metadata:()=>p,toc:()=>g});var a=n(58168),i=(n(96540),n(15680)),r=n(11470),o=n(19365);const l={description:"Flash The Native Firmware",title:"Update and Flash Firmware",keywords:["SenseCAP Indicator"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/SenseCAP_Indicator_How_To_Flash_The_Default_Firmware",toc_max_heading_level:4,sidebar_position:3,last_update:{date:"11/17/2023",author:"Spencer"}},s="**How To Flash The Native Firmware**",p={unversionedId:"Sensor/SenseCAP/SenseCAP_Indicator/How_To_Flash_The_Default_Firmware",id:"Sensor/SenseCAP/SenseCAP_Indicator/How_To_Flash_The_Default_Firmware",title:"Update and Flash Firmware",description:"Flash The Native Firmware",source:"@site/docs/Sensor/SenseCAP/SenseCAP_Indicator/How_To_Flash_The_Default_Firmware.md",sourceDirName:"Sensor/SenseCAP/SenseCAP_Indicator",slug:"/SenseCAP_Indicator_How_To_Flash_The_Default_Firmware",permalink:"/SenseCAP_Indicator_How_To_Flash_The_Default_Firmware",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SenseCAP/SenseCAP_Indicator/How_To_Flash_The_Default_Firmware.md",tags:[],version:"current",lastUpdatedBy:"Spencer",lastUpdatedAt:1700179200,formattedLastUpdatedAt:"Nov 17, 2023",sidebarPosition:3,frontMatter:{description:"Flash The Native Firmware",title:"Update and Flash Firmware",keywords:["SenseCAP Indicator"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/SenseCAP_Indicator_How_To_Flash_The_Default_Firmware",toc_max_heading_level:4,sidebar_position:3,last_update:{date:"11/17/2023",author:"Spencer"}},sidebar:"ProductSidebar",previous:{title:"Develop both chips with Arduino",permalink:"/SenseCAP_Indicator_ESP32_Arduino"},next:{title:"Home Assistant - SenseCAP Indicator",permalink:"/SenseCAP_Indicator_Application_Home_Assistant"}},d={},g=[{value:"Preparation",id:"preparation",level:2},{value:"Get the Native Firmware",id:"get-the-native-firmware",level:2},{value:"For <strong>ESP32-S3</strong>",id:"for-esp32-s3",level:2},{value:"<strong>ESP-IDF</strong>",id:"ESP-IDF",level:3},{value:"<strong>Toolchain Installation</strong>",id:"toolchain-installation",level:4},{value:"Building Project and flashing",id:"BUILD",level:4},{value:"<strong>Esptool</strong>",id:"ESPTOOL",level:3},{value:"Using Esptool for Flashing",id:"using-esptool-for-flashing",level:4},{value:"Flashing Firmware",id:"flashing-firmware",level:4},{value:"Merging Binaries",id:"merging-binaries",level:4},{value:"<strong>Flash Download Tools</strong> (Windows only)",id:"Flash_Tools",level:3},{value:"Flash Download Tools for separate binary files",id:"Address_Note",level:4},{value:"For <strong>RP2040</strong>",id:"for-rp2040",level:2},{value:"Flash by Arduino IDE",id:"RP_Arduino",level:3},{value:"Flash the .uf2 file",id:"flash-the-uf2-file",level:3},{value:"ESP32 &amp; RP2040 Communication Protocol",id:"esp32--rp2040-communication-protocol",level:2},{value:"Resource",id:"resource",level:2},{value:"FAQ",id:"faq",level:2}],u={toc:g},c="wrapper";function y(e){let{components:t,...n}=e;return(0,i.yg)(c,(0,a.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"how-to-flash-the-native-firmware"},(0,i.yg)("strong",{parentName:"h1"},"How To Flash The Native Firmware")),(0,i.yg)("p",null,"The SenseCAP indicator has two MCUs, ESP32-S3 and RP2040. This tutorial provides comprehensive guide to help developer get onboard, including flashing the out-of-the-box factory Native Firmware and updating early shipped devices to the latest firmware."),(0,i.yg)("p",null,"The firmware update is particularly applicable in two scenarios:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"If you purchased a product without OpenAI firmware before June 2023, with firmware version ",(0,i.yg)("inlineCode",{parentName:"li"},"1.0.0"),", you can download and update to the latest firmware that includes OpenAI functionality. The latest firmware can be downloaded from ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Solution/SenseCAP_Indicator_ESP32/releases"},"here"),"."),(0,i.yg)("li",{parentName:"ol"},"If you have developed an application and wish to flash a custom firmware, you can follow ",(0,i.yg)("a",{parentName:"li",href:"#flash-esp32-s3-frimware-using-espressif-idf"},"the tutorial provided below"),".")),(0,i.yg)("p",null,"Briefly, you need this tutorial since:"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"You have a firmware that you need to flash into the ESP32-S3 or RP2040."),(0,i.yg)("li",{parentName:"ol"},"You've modified the code, and need to compile it and flash it to the device.")),(0,i.yg)("p",null,"Let's jump into this tutorial."),(0,i.yg)("h2",{id:"preparation"},"Preparation"),(0,i.yg)("p",null,"To get started, all you need is your SenseCAP Indicator and a Windows/Mac/Linux computer."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:200,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/usb1.png"})),(0,i.yg)("h2",{id:"get-the-native-firmware"},"Get the Native Firmware"),(0,i.yg)("p",null,"The default shipping firmware of the SenseCAP Indicator is fully open source for both ESP32-S3 and RP2040."),(0,i.yg)("admonition",{title:"You have two options to get the Out of the Box Firmware:",type:"tip"},(0,i.yg)("ul",{parentName:"admonition"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Source code:")," Before flashing it, you have the option to modify the code as per your requirements. You will need a toolchain(",(0,i.yg)("a",{parentName:"li",href:"#ESP-IDF"},"ESP-IDF"),", ",(0,i.yg)("a",{parentName:"li",href:"#RP_Arduino"},"Arduino"),") to ",(0,i.yg)("strong",{parentName:"li"},"compile")," it."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Firmware:")," Directly flash the pre-compiled binary file without the need for any code modification or compilation. Using tools like ",(0,i.yg)("a",{parentName:"li",href:"#ESPTOOL"},"Esptool")," and\n",(0,i.yg)("a",{parentName:"li",href:"#Flash_Tools"},"Flash Download Tools"),"."))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Source Code")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Solution/sensecap_indicator_esp32"},"\ud83d\uddb1\ufe0fClick to get ESP32-S3 Firmware Source Code")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Solution/sensecap_indicator_rp2040"},"\ud83d\uddb1\ufe0fClick to get RP2040 Arduino examples Source Code"))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Firmware")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Solution/SenseCAP_Indicator_ESP32/releases/tag/v1.0.0"},"\ud83d\uddb1\ufe0fClick to download ESP32-S3 firmware")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Solution/SenseCAP_Indicator_RP2040/releases/tag/v1.0.0"},"\ud83d\uddb1\ufe0fClick to download RP2040 frimware"))),(0,i.yg)("h2",{id:"for-esp32-s3"},"For ",(0,i.yg)("strong",{parentName:"h2"},"ESP32-S3")),(0,i.yg)("h3",{id:"ESP-IDF"},(0,i.yg)("strong",{parentName:"h3"},"ESP-IDF")),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"ESP-IDF (Espressif IoT Development Framework) is a software development framework provided by Espressif Systems for designing firmware and applications specifically for their ESP32 and ESP8266 series of microcontrollers. For further information, you can refer to the ",(0,i.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32s3/index.html"},"ESP-IDF Programming Guide"))),(0,i.yg)("p",null,"If you've opted to compile the source code into firmware, you'll require the ESP-IDF to perform the compilation process."),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("mdxAdmonitionTitle",{parentName:"admonition"},(0,i.yg)("strong",{parentName:"mdxAdmonitionTitle"},"Note"),":"),(0,i.yg)("p",{parentName:"admonition"},"The ESP-IDF version must be greater than v5.0. If you're using an older version, you'll need to update it to the latest version.")),(0,i.yg)("h4",{id:"toolchain-installation"},(0,i.yg)("strong",{parentName:"h4"},"Toolchain Installation")),(0,i.yg)(r.A,{groupId:"operating-systems",defaultValue:"Win",values:[{label:"Windows",value:"Win"},{label:"Linux and MacOS",value:"Unix"}],mdxType:"Tabs"},(0,i.yg)(o.A,{value:"Win",mdxType:"TabItem"},(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Official Espressif Docs: ",(0,i.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/esp-idf/en/release-v5.1/esp32/get-started/windows-setup.html"},"Standard Setup of Toolchain for Windows"))),(0,i.yg)("p",null,"  ",(0,i.yg)("strong",{parentName:"p"},"Option 1: Using the Offline Installer")),(0,i.yg)("p",null,"  For Windows users, you have the option to download the ESP-IDF offline installer directly. Here's a direct download link: ",(0,i.yg)("a",{parentName:"p",href:"https://dl.espressif.com/dl/idf-installer/esp-idf-tools-setup-offline-5.1.1.exe"},"\ud83d\uddb1\ufe0fDonwload Offline Installer v5.1.1")),(0,i.yg)("p",null,"  ",(0,i.yg)("strong",{parentName:"p"},"Option 2:  Using the Recommended Script")),(0,i.yg)("p",null,"Navigate yourself to ",(0,i.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/windows-setup.html#using-the-command-prompt"},"Using the Command Promp"))),(0,i.yg)(o.A,{value:"Unix",mdxType:"TabItem"},(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Official Espressif Docs: ",(0,i.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/esp-idf/en/release-v5.1/esp32/get-started/linux-macos-setup.html"},"Standard Toolchain Setup for Linux and macOS"))),(0,i.yg)("p",null,"  If in Linux or MacOS, you can follow this guide to change the version of git repo."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"git clone --recursive https://github.com/espressif/esp-idf.git\n")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Navigate to esp-idf directory"),":"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Run ",(0,i.yg)("inlineCode",{parentName:"li"},"./install.sh esp32s3"),", to add ESP32-S3 support (needed for SenseCAP indicator)"),(0,i.yg)("li",{parentName:"ol"},"type ",(0,i.yg)("inlineCode",{parentName:"li"},"./export.sh")," to set up the PATH and IDF_PATH variables in the current terminal session.")),(0,i.yg)("p",null,"if you want to call in any shell session, you can add the following line to your shell configuration file (e.g. ~/.bash_profile):"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"alias get_idf='. $HOME/esp/esp-idf/export.sh'\n")),(0,i.yg)("p",null,"Then you can use ",(0,i.yg)("inlineCode",{parentName:"p"},"get_idf")," to activate the environment.",(0,i.yg)("a",{parentName:"p",href:"https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/linux-macos-setup.html#step-4-set-up-the-environment-variables"},"^refer")))),(0,i.yg)("hr",null),(0,i.yg)("h4",{id:"BUILD"},"Building Project and flashing"),(0,i.yg)("p",null,"If you opt to compile the source code into firmware, you'll require the ESP-IDF to perform the compilation process."),(0,i.yg)("p",null,"To build, flash, and monitor your project, execute the following command:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"cd  <your_sdk_path>/examples/indicator_basis/\nidf.py -p PORT build flash monitor\n")),(0,i.yg)("admonition",{type:"tip"},(0,i.yg)("p",{parentName:"admonition"},"Without ",(0,i.yg)("inlineCode",{parentName:"p"},"PORT"),", the IDF will automatically select the available port.")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/upgrade.png"})),(0,i.yg)("p",null,"Up to this point, by typing the command ",(0,i.yg)("inlineCode",{parentName:"p"},"idf.py -p PORT flash"),", the firmware has been successfully flashed into the ESP32-S3."),(0,i.yg)("h3",{id:"ESPTOOL"},(0,i.yg)("strong",{parentName:"h3"},"Esptool")),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},(0,i.yg)("a",{parentName:"p",href:"https://github.com/espressif/esptool"},"ESPtool - GitHub")," is a Python-based, open-source utility that provides a platform-independent way to communicate with the ROM bootloader in Espressif chips.")),(0,i.yg)("p",null,"Esptool can be used as part of your Python script. In this guide, we'll use the ",(0,i.yg)("inlineCode",{parentName:"p"},"packaged software")," available on the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/espressif/esptool/releases"},"Esptool releases page"),". Choose the software that corresponds to your computer's operating system."),(0,i.yg)("h4",{id:"using-esptool-for-flashing"},"Using Esptool for Flashing"),(0,i.yg)("p",null,"There are two scripts provided that showcase how to effectively utilize Esptool for flashing firmware onto ESP32-S3 microcontrollers."),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("mdxAdmonitionTitle",{parentName:"admonition"},(0,i.yg)("strong",{parentName:"mdxAdmonitionTitle"},"Note"),":"),(0,i.yg)("p",{parentName:"admonition"},"Please be aware that the provided scripts are tailored for Windows operating systems. If you are using a different operating system, you will need to adapt the scripts to suit your environment.")),(0,i.yg)("p",null,"The merge.bat script is particularly useful as it intelligently consolidates the bootloader, partition table, and indicator basis binaries into a single firmware file. Once merged, this firmware can be seamlessly flashed onto the ESP32-S3 using the flash.bat script. When prompted, input the COM port corresponding to your device, and the flashing process will initiate. The complete operation can be summarized as follows:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh",metastring:'title="merge.bat"',title:'"merge.bat"'},"esptool.exe --chip esp32s3 ^\nmerge_bin -o sensecap_indicator_basis_v1.0.0.bin ^ # Target file name\n--flash_mode dio ^\n--flash_size 8MB ^\n0x0 ../../build/bootloader/bootloader.bin ^\n0x8000 ../../build/partition_table/partition-table.bin ^\n0x10000 ../../build/indicator_basis.bin\n")),(0,i.yg)("p",null,"Alternatively, if you prefer to flash individual binary files instead of merging files then flashing, you can directly use the ",(0,i.yg)("inlineCode",{parentName:"p"},"just_flash.bat")," script:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh",metastring:'title="just_flash.bat"',title:'"just_flash.bat"'},"esptool.exe --chip esp32s3 --port COMx --baud 921600 write_flash -z ^\n0x0 ../../build/bootloader/bootloader.bin ^\n0x8000 ../../build/partition_table/partition-table.bin ^\n0x10000 ../../build/indicator_basis.bin\n")),(0,i.yg)("p",null,"And for a straightforward flashing process using the merged firmware:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-sh",metastring:'title="flash.bat"',title:'"flash.bat"'},"esptool.exe --chip esp32s3 --port COMx --baud 921600 write_flash -z 0x0 indicator_basis_v1.0.0.bin\n")),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"Pay close attention to the starting(0x0) address, especially when not merging binaries. For separate binary files, refer to the instructions in ",(0,i.yg)("a",{parentName:"p",href:"#Address_Note"},"Flash Download Tools for separate binary files"),". Following these guidelines ensures error-free flashing.")),(0,i.yg)("p",null,"To utilize these scripts, save the code into separate text files named ",(0,i.yg)("inlineCode",{parentName:"p"},"merge.bat")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"flash.bat")," within the project folder. This organizational approach simplifies access and usage."),(0,i.yg)("p",null,"By employing these scripts, you streamline both firmware preparation and the flashing stages, contributing to a smoother and more reliable process."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"\u251c\u2500\u2500 indicator_basis\n\u2502   \u251c\u2500\u2500 CMakeLists.txt\n\u2502   \u251c\u2500\u2500 build\n\u2502   \u251c\u2500\u2500 docs\n\u2502   \u251c\u2500\u2500 main\n\u2502   \u251c\u2500\u2500 partitions.csv\n\u2502   \u251c\u2500\u2500 sdkconfig\n\u2502   \u2514\u2500\u2500 .defaults\n\u2502   \u2514\u2500\u2500 flash.bat\n\u2502   \u2514\u2500\u2500 merge.bat\n")),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},"Merge the binaries using ",(0,i.yg)("inlineCode",{parentName:"li"},"merge.bat"),"."),(0,i.yg)("li",{parentName:"ol"},"Flash the merged firmware using ",(0,i.yg)("inlineCode",{parentName:"li"},"flash.bat"),".")),(0,i.yg)("h4",{id:"flashing-firmware"},"Flashing Firmware"),(0,i.yg)("p",null,"For flashing firmware, you can use the provided ",(0,i.yg)("inlineCode",{parentName:"p"},"flash.bat")," script. This script is designed to simplify the process of flashing your firmware onto the ESP32-S3 microcontroller."),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Show flash.bat code"),'```bat @echo off setlocal cd /d "%~dp0" :: Set Chip set chip=esp32s3 :: Set Baud set baud=921600 :: List COM ports echo Available ports and devices: echo. for /F "tokens=* delims=" %%A in (\'wmic path Win32_PnPEntity get Name ^| findstr /C:"COM" ^| findstr /C:"CH340"\') do ( echo %%A ) :: Prompt for port :chooseport echo. echo Please enter the COM port to use (e.g., COM5): set /p port= :: Check if chosen port is valid and contains "CH340" for /F "tokens=* delims=" %%A in (\'wmic path Win32_PnPEntity get Name ^| findstr /C:"%port%" ^| findstr /C:"CH340"\') do ( set device=%%A goto :flash ) echo Port %port% not found goto :chooseport :flash:: Print chosen parameters echo. echo You have chosen: echo Chip: %chip% echo Port: %port% - %device% echo Baud: %baud% @REM echo Press any key to continue to... @REM pause >nul :: Run esptool for the single file esptool.exe --chip %chip% --port %port% --baud %baud% write_flash -z 0x0 indicator_basis_v1.0.0.bin if ERRORLEVEL 1 ( echo Flashing with the single file failed with error %ERRORLEVEL%. goto :end ) :: End of script :end endlocal ```'),(0,i.yg)("h4",{id:"merging-binaries"},"Merging Binaries"),(0,i.yg)("p",null,"The provided ",(0,i.yg)("inlineCode",{parentName:"p"},"merge.bat")," script can be used to merge the necessary binary files into one firmware file. This script simplifies the process and ensures correct merging for successful flashing, which allows you to flash a sigal bin file as not to ",(0,i.yg)("a",{parentName:"p",href:"#Address_Note"},"flash separate files"),"."),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Show merge.bat code"),'```bat @echo off SETLOCAL SET CurrentDir=%cd% SET ScriptDir=%~dp0 SET CurrentDir=%CurrentDir:~0,-1% SET ScriptDir=%ScriptDir:~0,-1% IF NOT "%CurrentDir%"=="%ScriptDir%" ( cd /d "%ScriptDir%" ) esptool.exe --chip esp32s3 ^ merge_bin -o indicator_basis_v1.0.0.bin ^ --flash_mode dio ^ --flash_size 8MB ^ 0x0 ../../build/bootloader/bootloader.bin ^ 0x8000 ../../build/partition_table/partition-table.bin ^ 0x10000 ../../build/indicator_basis.bin ENDLOCAL ```'),(0,i.yg)("h3",{id:"Flash_Tools"},(0,i.yg)("strong",{parentName:"h3"},"Flash Download Tools")," (Windows only)"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},(0,i.yg)("strong",{parentName:"p"},"Flash Download Tools")," are used for programming or flashing firmware onto ESP8266 and ESP32 series of microcontrollers. They provide a graphical user interface (GUI) for users to easily flash firmware onto the ESP microcontrollers.")),(0,i.yg)("p",null,"Follow the steps to flash a pre-compiled firmware:"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Download:"),"\n",(0,i.yg)("a",{parentName:"p",href:"https://www.espressif.com.cn/en/support/download/other-tools?keys=&field_type_tid%5B%5D=842"},"Flash Download Tools (for Windows only)")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:480,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_18.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1"),": ",(0,i.yg)("strong",{parentName:"p"},"Double-click")," the ",(0,i.yg)("inlineCode",{parentName:"p"},".exe")," file to enter the main interface of the tool.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2"),": Select the following options:"))),(0,i.yg)("div",{class:"table-center"},(0,i.yg)("table",{align:"center"},(0,i.yg)("tr",null,(0,i.yg)("th",null,"Option"),(0,i.yg)("th",null,"Param")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("strong",null,"Chip Type"))),(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},"ESP32-S3"))),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}}," ",(0,i.yg)("strong",null,"WorkMode"))),(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}}," Develop "))),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}}," ",(0,i.yg)("strong",null,"LoadMode"))),(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}}," UART "))))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:480,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_59.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 3"),": Connect the SenseCAP Indicator to your laptop with a USB type-C cable.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 4"),': In the SPI Download Tab and Click "..." and navigate to the firmware you just downloaded.'))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 5"),": Configure SPI Flash:")),(0,i.yg)("div",{class:"table-center"},(0,i.yg)("table",{align:"center"},(0,i.yg)("tr",null,(0,i.yg)("th",null,"Option"),(0,i.yg)("th",null,"Param")),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("strong",null,"SPI SPEED"))),(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},"40MHz"))),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}}," ",(0,i.yg)("strong",null,"SPI MODE"))),(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}}," DIO "))))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6"),": Configure the Download Panel:")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:400,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/indicator23.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"COM"),": Check the ports on your Device Manage, the USB-SERIAL is the correct one.\n(",(0,i.yg)("inlineCode",{parentName:"li"},"Here we chose COM4"),")"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Baud"),": 921600(recommended value)")),(0,i.yg)("p",null,"Then click ",(0,i.yg)("inlineCode",{parentName:"p"},"START")," to start the flashing."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:400,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/start.png"})),(0,i.yg)("p",null,"When it shows ",(0,i.yg)("inlineCode",{parentName:"p"},"FINISH"),", the firmware flashing has been completed."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:400,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/finish.png"})),(0,i.yg)("h4",{id:"Address_Note"},"Flash Download Tools for separate binary files"),(0,i.yg)("p",null,'In the previously mentioned guide, the binary file "Default_Factory_Firmware_ESP32-S3.bin" merges three binaries into one.'),(0,i.yg)("p",null,"However, if you're using ESP-IDF to build firmware, directly flashing a single file might result in errors. Instead, you'll need to find ",(0,i.yg)("strong",{parentName:"p"},"three separate binary files")," that you've built and specify the correct addresses (you can use your own addresses) as follows:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"bootloader.bin")," ----\x3e ",(0,i.yg)("strong",{parentName:"li"},"0x0")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"partion-table.bin")," ----\x3e ",(0,i.yg)("strong",{parentName:"li"},"0x6800")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"termial_demo.bin")," ----\x3e ",(0,i.yg)("strong",{parentName:"li"},"0x10000"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:400,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/3binfiles.png"})),(0,i.yg)("h2",{id:"for-rp2040"},"For ",(0,i.yg)("strong",{parentName:"h2"},"RP2040")),(0,i.yg)("h3",{id:"RP_Arduino"},"Flash by Arduino IDE"),(0,i.yg)("p",null,"The RP2040 Development Tool leverages Arduino to enhance your coding experience."),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"The Arduino IDE is free software for coding Arduino boards. With its user-friendly interface, you can write and upload code easily. Based on a simpler version of C++, it offers libraries and examples, making it great for beginners.")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Download:")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 1"),": Install ",(0,i.yg)("a",{parentName:"p",href:"https://www.arduino.cc/en/software"},"Arduino IDE"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 2"),": Add the Raspberry Pi Pico Board"))),(0,i.yg)("p",null,"Open your Arduino IDE, click on\xa0",(0,i.yg)("strong",{parentName:"p"},"Arduino IDE"),"\xa0>\xa0",(0,i.yg)("strong",{parentName:"p"},"Reference"),", and copy the below URL to\xa0",(0,i.yg)("strong",{parentName:"p"},"Additional Boards Manager URLs"),":"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json")),(0,i.yg)("div",{class:"table-center"},(0,i.yg)("table",{align:"center"},(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_29.png",style:{width:680,height:"auto"}}))),(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_80.png",style:{width:680,height:"auto"}})))))),(0,i.yg)("p",null,"Click on ",(0,i.yg)("strong",{parentName:"p"},"Tools")," > ",(0,i.yg)("strong",{parentName:"p"},"Board")," > ",(0,i.yg)("strong",{parentName:"p"},"Board Manager"),"."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_30.png"})),(0,i.yg)("p",null,'Search "indicator" and install "Raspberry Pi Pico/RP2040" in the Boards Manager'),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/indicator.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 3"),": Add Libraries")),(0,i.yg)("admonition",{type:"note"},(0,i.yg)("mdxAdmonitionTitle",{parentName:"admonition"},(0,i.yg)("strong",{parentName:"mdxAdmonitionTitle"},"Libraries for reference")),(0,i.yg)("ul",{parentName:"admonition"},(0,i.yg)("li",{parentName:"ul"},"Sensirion Core: ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Sensirion/arduino-core"},"Sensirion Arduino Core library")),(0,i.yg)("li",{parentName:"ul"},"PacketSerial : ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/bakercp/PacketSerial"},"Serial communication protoco")),(0,i.yg)("li",{parentName:"ul"},"Sensirion I2C SGP40 : ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Sensirion/arduino-i2c-sgp40"},"SGP40 TVOC sensor library")),(0,i.yg)("li",{parentName:"ul"},"Sensirion I2C SCD4x : ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Sensirion/arduino-i2c-scd4x"},"SCD41 CO2 sensor library")),(0,i.yg)("li",{parentName:"ul"},"Sensirion Gas Index Algorithm : ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Sensirion/arduino-gas-index-algorithm"},"Transfer index library")),(0,i.yg)("li",{parentName:"ul"},"Seeed_Arduino_AHT20 : ",(0,i.yg)("a",{parentName:"li",href:"https://github.com/Seeed-Studio/Seeed_Arduino_AHT20"},"AHT20 temperature and humidity sensor library")))),(0,i.yg)("p",null,"In the Arduino IDE, you can search for it in the ",(0,i.yg)("inlineCode",{parentName:"p"},"Library Manager"),", e.g. ",(0,i.yg)("inlineCode",{parentName:"p"},"Seeed_Arduino_AHT20"),", and then install it."),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Click to preview offline installation"),(0,i.yg)("p",null,"To install it ",(0,i.yg)("em",{parentName:"p"},"offline"),", you can ",(0,i.yg)("strong",{parentName:"p"},"download the repo zip")," from GitHub, navigate to ",(0,i.yg)("strong",{parentName:"p"},"Sketch")," -> ",(0,i.yg)("strong",{parentName:"p"},"Include Library")," -> ",(0,i.yg)("strong",{parentName:"p"},"Add .ZIP Library"),", then select the libraries you downloaded."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_32.png"}))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 4"),": Connect the device to your PC with the provided USB Typc-C cable.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"Step 5"),": Select the board and port"))),(0,i.yg)("p",null,'Search "Indicator" and select ',(0,i.yg)("inlineCode",{parentName:"p"},"Seeed INDICATOR RP2040")," board and select the ",(0,i.yg)("inlineCode",{parentName:"p"},"usbmodem")," Serial Port."),(0,i.yg)("div",{class:"table-center"},(0,i.yg)("table",{align:"center"},(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/board.png",style:{width:680,height:"auto"}})))),(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/portport.png",style:{width:680,height:"auto"}}))))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 6"),": Open the example code file")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"File")," -> ",(0,i.yg)("strong",{parentName:"p"},"Open"),", then select the example code file (",(0,i.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Solution/sensecap_indicator_rp2040/tree/main/examples/terminal_rp2040"},".ino file"),")."),(0,i.yg)("p",null,"We provide an example code file, you can modify the code according to your needs."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_35.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 7"),": Verify and Upload the file.",(0,i.yg)("div",{class:"table-center"},(0,i.yg)("table",{align:"center"},(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_36.png",style:{width:680,height:"auto"}})))),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_37.png",style:{width:680,height:"auto"}})))),(0,i.yg)("tr",null,(0,i.yg)("td",null,(0,i.yg)("div",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_38.png",style:{width:680,height:"auto"}})))))))),(0,i.yg)("p",null,"Here, we've completed building and flashing(downloading) firmware on the RP2040."),(0,i.yg)("h3",{id:"flash-the-uf2-file"},"Flash the .uf2 file"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 1"),": Connect the device to your PC")),(0,i.yg)("p",null,"Long press this internal button using a needle, then connect the device to your PC by the provided USB type-C cable, release the button once connected."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_56.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Step 2"),": Firmware Flash")),(0,i.yg)("p",null,"After the connection is successful, your PC will show a disk."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/disk.png"})),(0,i.yg)("p",null,"Copy the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Solution/sensecap_indicator_rp2040/releases/download/v1.0.0/terminal_rp2040_v1.0.0.uf2"},".uf2")," file to the disk, then the disk will log out."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/uf2.png"})),(0,i.yg)("p",null,"The upgrade will run automatically."),(0,i.yg)("h2",{id:"esp32--rp2040-communication-protocol"},"ESP32 & RP2040 Communication Protocol"),(0,i.yg)("p",null,"ESP32 and RP2040 use serial port communication, using the ",(0,i.yg)("a",{parentName:"p",href:"http://www.stuartcheshire.org/papers/COBSforToN.pdf"},"cobs")," communication protocol. The list of commands used in the demo is as follows:"),(0,i.yg)("p",null,"The command format consists of the packet type and packet parameters."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_41.png"})),(0,i.yg)("h2",{id:"resource"},"Resource"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Solution/sensecap_indicator_esp32.git"},"SenseCAP Indicator ESP32 SDK")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/Seeed-Solution/sensecap_indicator_rp2040/tree/main"},"SenseCAP Indicator RP2040 Demo")),(0,i.yg)("h2",{id:"faq"},"FAQ"),(0,i.yg)("details",null,(0,i.yg)("summary",null,"How to distinguish the serial port?"),(0,i.yg)(r.A,{groupId:"operating-systems",defaultValue:"Win",values:[{label:"Windows",value:"Win"},{label:"MacOS",value:"Unix"}],mdxType:"Tabs"},(0,i.yg)(o.A,{value:"Win",mdxType:"TabItem"},'Check the port on your Device Manage - "USB Serial Device(COMx)" or "USB \u4e32\u884c\u8bbe\u5907" is for RP2040 - "USB-SERIAL CH340" is for ESP32 In a nut shell, CH340 port is for ESP32.',(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:480,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_39.png"}))),(0,i.yg)(o.A,{value:"Unix",mdxType:"TabItem"},'- "/dev/cu.usbmodem" is for RP2040',(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:680,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/SenseCAP_Indicator_40.png"}))))),(0,i.yg)("h1",{id:"recent-updates"},(0,i.yg)("strong",{parentName:"h1"},"Recent Updates")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"2023-11-17 ",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Removed patching section"))),(0,i.yg)("li",{parentName:"ul"},"2023-08-25",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Make Patching section more clear"))),(0,i.yg)("li",{parentName:"ul"},"2023-07-25",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added content for flashing firmware using Esptool"))),(0,i.yg)("li",{parentName:"ul"},"2023-05-29",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added Patching section")))),(0,i.yg)("h1",{id:"tech-support"},(0,i.yg)("strong",{parentName:"h1"},"Tech Support")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Need help with your SenseCAP Indicator? We're here to assist you!")),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://discord.com/invite/QqMgVwHT3X",class:"button_tech_support_sensecap"}),(0,i.yg)("a",{href:"https://support.sensecapmx.com/portal/en/home",class:"button_tech_support_sensecap3"})),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"mailto:support@sensecapmx.com",class:"button_tech_support_sensecap2"}),(0,i.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}y.isMDXComponent=!0}}]);