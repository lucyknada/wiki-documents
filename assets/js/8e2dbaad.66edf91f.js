"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[61583],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,k=u["".concat(s,".").concat(h)]||u[h]||c[h]||a;return n?o.createElement(k,i(i({ref:t},d),{},{components:n})):o.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},86155:(e,t,n)=>{n.r(t),n.d(t,{Highlight:()=>d,assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={description:"Getting Started with Seeed Studio XIAO ESP32C6.",title:"Getting Started with Seeed Studio XIAO ESP32C6",image:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/2/-/2-113991254-seeedxiao-esp32c6-font.jpg",keywords:["XIAO","ESP32C6","Seeeduino"],slug:"/xiao_esp32c6_getting_started",toc_max_heading_level:4,sidebar_position:1,last_update:{date:"04/02/2024",author:"Spencer"}},i="Getting Started with Seeed Studio XIAO ESP32C6",l={unversionedId:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Getting_Started",id:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Getting_Started",title:"Getting Started with Seeed Studio XIAO ESP32C6",description:"Getting Started with Seeed Studio XIAO ESP32C6.",source:"@site/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Getting_Started.md",sourceDirName:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6",slug:"/xiao_esp32c6_getting_started",permalink:"/xiao_esp32c6_getting_started",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32C6/XIAO_ESP32C6_Getting_Started.md",tags:[],version:"current",lastUpdatedBy:"Spencer",lastUpdatedAt:1712016e3,formattedLastUpdatedAt:"Apr 2, 2024",sidebarPosition:1,frontMatter:{description:"Getting Started with Seeed Studio XIAO ESP32C6.",title:"Getting Started with Seeed Studio XIAO ESP32C6",image:"https://media-cdn.seeedstudio.com/media/catalog/product/cache/bb49d3ec4ee05b6f018e93f896b8a25d/2/-/2-113991254-seeedxiao-esp32c6-font.jpg",keywords:["XIAO","ESP32C6","Seeeduino"],slug:"/xiao_esp32c6_getting_started",toc_max_heading_level:4,sidebar_position:1,last_update:{date:"04/02/2024",author:"Spencer"}},sidebar:"ProductSidebar",previous:{title:"ESPHome Support on Seeed Studio XIAO ESP32C3",permalink:"/XIAO-ESP32C3-for-ESPHome-Support"},next:{title:"Pin Multiplexing With Seeed Studio XIAO ESP32C6",permalink:"/xiao_pin_multiplexing_esp33c6"}},s={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Specifications comparison",id:"specifications-comparison",level:2},{value:"Features",id:"features",level:2},{value:"Hardware overview",id:"hardware-overview",level:2},{value:"Getting started",id:"getting-started",level:2},{value:"Hardware Preparation",id:"hardware-preparation",level:3},{value:"Solder header",id:"solder-header",level:4},{value:"BootLoader Mode",id:"bootloader-mode",level:3},{value:"Reset",id:"reset",level:3},{value:"Software Preparation",id:"software-preparation",level:3},{value:"Add the XIAO-C6 Board",id:"add-board",level:4},{value:"Run your first Blink program",id:"run-your-first-blink-program",level:2},{value:"Battery Usage",id:"battery-usage",level:2},{value:"Deep sleep mode and wake-up",id:"deep-sleep-mode-and-wake-up",level:2},{value:"Demo1: Deep Sleep with External Wake Up",id:"demo1-deep-sleep-with-external-wake-up",level:3},{value:"Demo2: Deep Sleep with Timer Wake Up",id:"demo2-deep-sleep-with-timer-wake-up",level:3},{value:"Resources",id:"resources",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],d=e=>{let{children:t,color:n}=e;return(0,r.kt)("span",{style:{backgroundColor:n,borderRadius:"2px",color:"#fff",padding:"0.2rem"}},t)},u={toc:p,Highlight:d},c="wrapper";function h(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started-with-seeed-studio-xiao-esp32c6"},"Getting Started with Seeed Studio XIAO ESP32C6"),(0,r.kt)("div",{class:"table-center"},(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Seeed Studio XIAO ESP32C6")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/xiaoc6.jpg",style:{width:250,height:"auto"}})))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.kt)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-Studio-XIAO-ESP32C6-p-5884.html "},(0,r.kt)("strong",null,(0,r.kt)("span",null,(0,r.kt)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))))))),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Seeed Studio XIAO ESP32C6 is powered by the highly-integrated ",(0,r.kt)("a",{parentName:"p",href:"https://www.espressif.com/en/products/socs/esp32-c6"},"ESP32-C6 SoC"),", built on ",(0,r.kt)("strong",{parentName:"p"},"two 32-bit RISC-V processors"),", with a high-performance (HP) processor with ",(0,r.kt)("strong",{parentName:"p"},"running up to 160 MHz"),", and a low-power (LP) 32-bit RISC-V processor, which can be clocked up to 20 MHz. There are ",(0,r.kt)("strong",{parentName:"p"},"512KB SRAM and 4 MB Flash on the chip"),", allowing for more programming space, and binging more possibilities to the IoT control scenarios. "),(0,r.kt)("p",null,"XIAO ESP32C6 is ",(0,r.kt)("strong",{parentName:"p"},"Matter native thanks to its enhanced wireless connectivity"),". The wireless stack supports ",(0,r.kt)("strong",{parentName:"p"},"2.4 GHz WiFi 6, Bluetooth\xae 5.3, Zigbee, and Thread (802.15.4)"),". As the first XIAO member compatible with Thread, it's a perfect fit for building Matter-compliant projects, thus achieving interoperability in smart-home."),(0,r.kt)("h2",{id:"specifications-comparison"},"Specifications comparison"),(0,r.kt)("table",{class:"sp-table-c6"},(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"2"},"Products"),(0,r.kt)("th",null,(0,r.kt)(d,{color:"#92c52a",mdxType:"Highlight"},"XIAO ESP32C6")),(0,r.kt)("th",null,"XIAO ESP32C3"),(0,r.kt)("th",null,"XIAO ESP32C6"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"2",rowspan:"2"},"Processor"),(0,r.kt)("td",null,"Espressif ESP32-C6 SoC"),(0,r.kt)("td",null,"Espressif ESP32-C3 SoC"),(0,r.kt)("td",null,"Espressif ESP32-S3R8")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"Two 32-bit RISC-V processors, with the high-performance one running up to 160 MHz, and the low-power one clocking up to 20 MHz"),(0,r.kt)("td",null,"RISC-V single-core 32-bit chip processor with a four-stage pipeline that operates at up to 160 MHz"),(0,r.kt)("td",null,"Xtensa LX7 dual-core, 32-bit processor running up to 240 MHz")),(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"2",rowspan:"3"},"Wireless"),(0,r.kt)("td",null,"Complete 2.4GHz ",(0,r.kt)("strong",null,"Wi-Fi 6")," subsystem"),(0,r.kt)("td",{colspan:"2"},"Complete 2.4GHz Wi-Fi subsystem")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"BLE: Bluetooth 5.0, Bluetooth Mesh"),(0,r.kt)("td",null,"BLE: Bluetooth 5.0, Bluetooth Mesh"),(0,r.kt)("td",null,"BLE: Bluetooth 5.0, Bluetooth Mesh")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("strong",null,"Zigbee,Thread,IEEE 802.15.4")),(0,r.kt)("td",null,"/"),(0,r.kt)("td",null,"/")),(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"2",rowspan:"1"},"On-chip Memory"),(0,r.kt)("td",null,"512KB SRAM & 4MB Flash"),(0,r.kt)("td",null,"400KB SRAM & 4MB Flash"),(0,r.kt)("td",null,"8M PSRAM & 8MB Flash")),(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"2",rowspan:"2"},"Interface"),(0,r.kt)("td",null,"1x UART,1x LP_UART, 1x IIC, 1x LP_IIC, 1x SPI,11x GPIO(PWM), 7x ADC, 1xSDIO"),(0,r.kt)("td",null,"1x UART, 1x IIC, 1x SPI,11x GPIO(PWM), 4x ADC"),(0,r.kt)("td",null,"1x UART, 1x IIC, 1x IIS, 1x SPI,11x GPIO(PWM), 9x ADC, 1x User LED, 1x Charge LED")),(0,r.kt)("tr",null,(0,r.kt)("td",{colspan:"3"},"1x Reset button, 1x Boot button")),(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"2",rowspan:"1"},"Dimensions"),(0,r.kt)("td",{colspan:"3"},"21 x 17.5 mm")),(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"1",rowspan:"3"},"Power"),(0,r.kt)("th",{colspan:"1"},"Input voltage"),(0,r.kt)("td",{colspan:"3"},"Type-C: 5V",(0,r.kt)("br",null),"BAT: 4.2V")),(0,r.kt)("tr",null,(0,r.kt)("th",null,"Circuit operating Voltage (ready to operate)"),(0,r.kt)("td",{colspan:"2"},"USB:5V@9mA",(0,r.kt)("br",null),"BAT:3.8V@9mA"),(0,r.kt)("td",null,"Type-C: 5V@19mA",(0,r.kt)("br",null),"BAT: 3.8V@22mA")),(0,r.kt)("tr",null,(0,r.kt)("th",null,"Charging battery current"),(0,r.kt)("td",null,"100mA"),(0,r.kt)("td",null,"350mA"),(0,r.kt)("td",null,"100mA")),(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"1",rowspan:"3"},"Power Consumption Model(Supply Power: 3.8V)"),(0,r.kt)("th",null,"Modem-sleep Model"),(0,r.kt)("td",null,"~ 30 mA"),(0,r.kt)("td",null,"~ 24 mA"),(0,r.kt)("td",null,"~ 25 mA")),(0,r.kt)("tr",null,(0,r.kt)("th",null," Light-sleep Model"),(0,r.kt)("td",null,"~ 2.5 mA"),(0,r.kt)("td",null,"~ 3 mA"),(0,r.kt)("td",null,"~ 2 mA")),(0,r.kt)("tr",null,(0,r.kt)("th",null," Deep Sleep Model"),(0,r.kt)("td",null,"~ 15 \u03bcA"),(0,r.kt)("td",null,"~ 44 \u03bcA"),(0,r.kt)("td",null,"~ 14 \u03bcA")),(0,r.kt)("tr",null,(0,r.kt)("th",{colspan:"2"},"Working Temperature"),(0,r.kt)("td",{colspan:"2"},"-40\xb0C ~ 85\xb0C"),(0,r.kt)("td",null,"-40\xb0C ~ 65\xb0C")))),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Enhanced Connectivity"),": Integrates ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"2.4"))," GHz Wi-Fi 6 (802.11ax), Bluetooth 5(LE), and IEEE 802.15.4 radio connectivity, allowing for the application of ",(0,r.kt)("strong",{parentName:"li"},"Thread")," and ",(0,r.kt)("strong",{parentName:"li"},"Zigbee")," protocols."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Matter Native"),": Supports the building of Matter-compliant smart home projects, ensuring interoperability among different smart devices."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Security Encrypted on Chip"),": Utilizes the ESP32-C6 to provide secure boot, encryption, and Trusted Execution Environment (TEE) features, enhancing the security of smart home projects."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Outstanding RF Performance"),": Features an on-board antenna with up to ",(0,r.kt)("em",{parentName:"li"},"80m")," BLE/Wi-Fi range and offers an interface for connecting an external UFL antenna, ensuring reliable connectivity."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Leveraging Power Consumption"),": Offers four working modes, including a deep sleep mode with consumption as low as ",(0,r.kt)("em",{parentName:"li"},"15")," \u03bcA, along with support for lithium battery charge management."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Dual RISC-V Processors"),": Incorporates two 32-bit RISC-V processors, with the high-performance processor capable of running up to 160 MHz and the low-power processor up to ",(0,r.kt)("em",{parentName:"li"},"20 MHz"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Classic XIAO Designs"),": Maintains the thumb-size form factor of 21 x 17.5mm and single-sided mount design, ideal for space-limited projects like wearable devices.")),(0,r.kt)("h2",{id:"hardware-overview"},"Hardware overview"),(0,r.kt)("table",{align:"center"},(0,r.kt)("tr",null,(0,r.kt)("th",null,"XIAO ESP32C6 indication diagram")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://wdcdn.qpic.cn/MTY4ODg1Nzc0ODUwMjM3NA_556525_Slxs4ARdyuXRrJK-_1711096256?w=9854&h=3367&type=image/png",style:{width:700,height:"auto"}})))),(0,r.kt)("tr",null,(0,r.kt)("th",null,"XIAO ESP32C6 Pin List")),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://wdcdn.qpic.cn/MTY4ODg1Nzc0ODUwMjM3NA_318648_dMoXitoaQiq2N3-a_1711678067?w=1486&h=1228",style:{width:1e3,height:"auto"}}))))),(0,r.kt)("h2",{id:"getting-started"},"Getting started"),(0,r.kt)("p",null,"To enable you to get started with the XIAO ESP32C6 faster, please read the hardware and software preparation below to prepare the XIAO."),(0,r.kt)("h3",{id:"hardware-preparation"},"Hardware Preparation"),(0,r.kt)("p",null,"You need to prepare the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"1 x ",(0,r.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/Seeed-Studio-XIAO-ESP32C6-p-5884.html"},"Seeed Studio XIAO ESP32C6")),(0,r.kt)("li",{parentName:"ul"},"1 x Computer"),(0,r.kt)("li",{parentName:"ul"},"1 x USB Type-C cable")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Some USB cables can only supply power and cannot transfer data. If you don't have a USB cable or don't know if your USB cable can transmit data, you can check ",(0,r.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/USB-3-1-Type-C-to-A-Cable-1-Meter-3-1A-p-4085.html"},"Seeed USB Type-C support USB 3.1"),".")),(0,r.kt)("h4",{id:"solder-header"},"Solder header"),(0,r.kt)("p",null,"XIAO ESP32C6 is shipped without pin headers by default, you need to prepare your own pin headers and solder it to the corresponding pins of XIAO so that you can connect to the expansion board or sensor."),(0,r.kt)("p",null,"Due to the miniature size of XIAO ESP32C6, please be careful when soldering headers, do not stick different pins together, and do not stick solder to the shield or other components. Otherwise, it may cause XIAO to short circuit or not work properly, and the consequences caused by this will be borne by the user."),(0,r.kt)("h3",{id:"bootloader-mode"},"BootLoader Mode"),(0,r.kt)("p",null,"There are times when we use the wrong program to make XIAO appear to lose ports or not work properly. The specific performance is:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Connected to computer, but no port number found for XIAO.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"The computer is connected and the port number appears, but the upload program fails."))),(0,r.kt)("p",null,"When you encounter the above two situations, you can try to put XIAO into BootLoader mode, which can solve most of the problems of unrecognized devices and failed uploads. The specific method is:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 1"),". Press and hold the BOOT button on the XIAO ESP32C6 without releasing it.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 2"),". Keep the BOOT button pressed and then connect to the computer via the data cable. Release the BOOT button after connecting to the computer.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 3"),". Upload the ",(0,r.kt)("strong",{parentName:"p"},"Blink")," program to check the operation of the XIAO ESP32C6."))),(0,r.kt)("h3",{id:"reset"},"Reset"),(0,r.kt)("p",null,"When the program runs abnormally, you can press Reset once during power-up to let XIAO re-execute the uploaded program."),(0,r.kt)("p",null,"When you press and hold the BOOT key while powering up and then press the Reset key once, you can also enter BootLoader mode."),(0,r.kt)("h3",{id:"software-preparation"},"Software Preparation"),(0,r.kt)("p",null,"The recommended programming tool for the XIAO ESP32C6 is the Arduino IDE, so you need to complete the Arduino installation as part of the software preparation."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If this is your first time using Arduino, we highly recommend you to refer to ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Getting_Started_with_Arduino/"},"Getting Started with Arduino"),"."),(0,r.kt)("p",{parentName:"admonition"},"And the on-board package for XIAO ESP32C6 requires at least version ",(0,r.kt)("strong",{parentName:"p"},"2.0.8")," to be available.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 1.")," Download and Install the stable version of Arduino IDE according to your operating system.")),(0,r.kt)("div",{class:"download_arduino_container",style:{textAlign:"center"}},(0,r.kt)("a",{class:"download_arduino_item",href:"https://www.arduino.cc/en/software"},(0,r.kt)("strong",null,(0,r.kt)("span",null,(0,r.kt)("font",{color:"FFFFFF",size:"4"},"Download Arduino IDE"))))),(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 2.")," Launch the Arduino application."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"#add-board"},"Step 3"),"."),"  Add the XIAO ESP32C6 on-board package to the Arduino IDE and click ",(0,r.kt)("inlineCode",{parentName:"li"},"OK"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 4.")," Close the Arduino IDE and reopen it.")),(0,r.kt)("h4",{id:"add-board"},"Add the XIAO-C6 Board"),(0,r.kt)("p",null,"As of April 16, 2024, the most current stable release of Arduino-ESP32 is version ",(0,r.kt)("inlineCode",{parentName:"p"},"2.0.15"),". Unfortunately, ",(0,r.kt)("a",{parentName:"p",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/getting_started.html#supported-soc-s"},"this version does not support")," the ",(0,r.kt)("strong",{parentName:"p"},"ESP32-C6")," chipset, which means it also does not support the ",(0,r.kt)("inlineCode",{parentName:"p"},"XIAO ESP32-C6")," board. To work with XIAO-C6, you'll need to utilize the development release of ",(0,r.kt)("a",{parentName:"p",href:"https://docs.espressif.com/projects/arduino-esp32/en/latest/installing.html#installing-using-arduino-ide"},"the board manager URL")," provided below:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://espressif.github.io/arduino-esp32/package_esp32_dev_index.json\n")),(0,r.kt)("p",null,"if you've install the ESP32 board package before, you''ll need to remove it first."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/remove_package.png",style:{width:640,height:"auto"}})),(0,r.kt)("p",null,"To install the XIAO ESP32C6 board, follow these steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add the above board manager URL to your Arduino IDE preferences.")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/boards_url.png",style:{width:"auto",height:"auto"}})),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Download the XIAO ESP32C6 board package.")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/install_board.png",style:{width:640,height:"auto"}})),(0,r.kt)("p",null,"Additionally, the latest development release version (",(0,r.kt)("inlineCode",{parentName:"p"},"3.0.0-rc1"),") was released on April, 2024. And has supported XIAO ESP32C6."),(0,r.kt)("h2",{id:"run-your-first-blink-program"},"Run your first Blink program"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 1.")," Launch the Arduino application.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Step 2.")," Navigate to ",(0,r.kt)("strong",{parentName:"p"},"File > Examples > 01.Basics > Blink"),", open the program."))),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/11.png",style:{width:700,height:"auto"}})),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Step 3.")," Select the board model to ",(0,r.kt)("strong",{parentName:"li"},"XIAO ESP32C6"),", and select the correct port number to upload the program.")),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/upload_program.png",style:{width:1e3,height:"auto"}})),(0,r.kt)("p",null,"Once the program is successfully uploaded, you will see the following output message and you can observe that the orange LED on the right side of the XIAO ESP32C6 is blinking."),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/XIAOC6_flash_firmware.png",style:{width:680,height:"auto"}}))),(0,r.kt)("td",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/img/XIAOC6-blink.gif",style:{width:400,height:"auto"}}))))),(0,r.kt)("h2",{id:"battery-usage"},"Battery Usage"),(0,r.kt)("p",null,"The XIAO ESP32C6 series has a built-in power management chip that allows the XIAO ESP32C6 to be powered independently by using a battery or to charge the battery through the XIAO ESP32C6's USB port."),(0,r.kt)("p",null,"If you want to connect the battery for XIAO, we recommend you to purchase qualified rechargeable 3.7V lithium battery. When soldering the battery, please be careful to distinguish between the positive and negative terminals. The negative terminal of the power supply should be the side closest to the USB port, and the positive terminal of the power supply is the side away from the USB port."),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"When you use battery power, there will be no voltage on the 5V pin.")),(0,r.kt)("h2",{id:"deep-sleep-mode-and-wake-up"},"Deep sleep mode and wake-up"),(0,r.kt)("p",null,"The XIAO ESP32C6 has a complete deep sleep mode and wake-up function. Here we will show two of the more common examples offered by the ESP."),(0,r.kt)("h3",{id:"demo1-deep-sleep-with-external-wake-up"},"Demo1: Deep Sleep with External Wake Up"),(0,r.kt)("p",null,"This code displays how to use deep sleep with an external trigger as a wake up source and how to store data in RTC memory to use it over reboots."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\n=====================================\nThis code is under Public Domain License.\n\nHardware Connections\n======================\nPush Button to GPIO 33 pulled down with a 10K Ohm\nresistor\n\nNOTE:\n======\nOnly RTC IO can be used as a source for external wake\nsource. They are pins: 0,2,4,12-15,25-27,32-39.\n\nAuthor:\nPranav Cherukupalli <cherukupallip@gmail.com>\n*/\n\n#define BUTTON_PIN_BITMASK 0x200000000 // 2^33 in hex\n\nRTC_DATA_ATTR int bootCount = 0;\n\n/*\nMethod to print the reason by which ESP32\nhas been awaken from sleep\n*/\nvoid print_wakeup_reason(){\n  esp_sleep_wakeup_cause_t wakeup_reason;\n\n  wakeup_reason = esp_sleep_get_wakeup_cause();\n\n  switch(wakeup_reason)\n  {\n    case ESP_SLEEP_WAKEUP_EXT0 : Serial.println("Wakeup caused by external signal using RTC_IO"); break;\n    case ESP_SLEEP_WAKEUP_EXT1 : Serial.println("Wakeup caused by external signal using RTC_CNTL"); break;\n    case ESP_SLEEP_WAKEUP_TIMER : Serial.println("Wakeup caused by timer"); break;\n    case ESP_SLEEP_WAKEUP_TOUCHPAD : Serial.println("Wakeup caused by touchpad"); break;\n    case ESP_SLEEP_WAKEUP_ULP : Serial.println("Wakeup caused by ULP program"); break;\n    default : Serial.printf("Wakeup was not caused by deep sleep: %d\\n",wakeup_reason); break;\n  }\n}\n\nvoid setup(){\n  Serial.begin(115200);\n  delay(1000); //Take some time to open up the Serial Monitor\n\n  //Increment boot number and print it every reboot\n  ++bootCount;\n  Serial.println("Boot number: " + String(bootCount));\n\n  //Print the wakeup reason for ESP32\n  print_wakeup_reason();\n\n  /*\n  First we configure the wake up source\n  We set our ESP32 to wake up for an external trigger.\n  There are two types for ESP32, ext0 and ext1 .\n  ext0 uses RTC_IO to wakeup thus requires RTC peripherals\n  to be on while ext1 uses RTC Controller so doesnt need\n  peripherals to be powered on.\n  Note that using internal pullups/pulldowns also requires\n  RTC peripherals to be turned on.\n  */\n  esp_sleep_enable_ext0_wakeup(GPIO_NUM_33,1); //1 = High, 0 = Low\n\n  //If you were to use ext1, you would use it like\n  //esp_sleep_enable_ext1_wakeup(BUTTON_PIN_BITMASK,ESP_EXT1_WAKEUP_ANY_HIGH);\n\n  //Go to sleep now\n  Serial.println("Going to sleep now");\n  esp_deep_sleep_start();\n  Serial.println("This will never be printed");\n}\n\nvoid loop(){\n  //This is not going to be called\n}\n')),(0,r.kt)("h3",{id:"demo2-deep-sleep-with-timer-wake-up"},"Demo2: Deep Sleep with Timer Wake Up"),(0,r.kt)("p",null,"ESP32 offers a deep sleep mode for effective power saving as power is an important factor for IoT applications. In this mode CPUs, most of the RAM, and all the digital peripherals which are clocked from APB_CLK are powered off. The only parts of the chip which can still be powered on are: RTC controller, RTC peripherals ,and RTC memories."),(0,r.kt)("p",null,"This code displays the most basic deep sleep with a timer to wake it up and how to store data in RTC memory to use it over reboots."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\nSimple Deep Sleep with Timer Wake Up\n=====================================\nThis code is under Public Domain License.\n\nAuthor:\nPranav Cherukupalli <cherukupallip@gmail.com>\n*/\n\n#define uS_TO_S_FACTOR 1000000ULL  /* Conversion factor for micro seconds to seconds */\n#define TIME_TO_SLEEP  5        /* Time ESP32 will go to sleep (in seconds) */\n\nRTC_DATA_ATTR int bootCount = 0;\n\n/*\nMethod to print the reason by which ESP32\nhas been awaken from sleep\n*/\nvoid print_wakeup_reason(){\n  esp_sleep_wakeup_cause_t wakeup_reason;\n\n  wakeup_reason = esp_sleep_get_wakeup_cause();\n\n  switch(wakeup_reason)\n  {\n    case ESP_SLEEP_WAKEUP_EXT0 : Serial.println("Wakeup caused by external signal using RTC_IO"); break;\n    case ESP_SLEEP_WAKEUP_EXT1 : Serial.println("Wakeup caused by external signal using RTC_CNTL"); break;\n    case ESP_SLEEP_WAKEUP_TIMER : Serial.println("Wakeup caused by timer"); break;\n    case ESP_SLEEP_WAKEUP_TOUCHPAD : Serial.println("Wakeup caused by touchpad"); break;\n    case ESP_SLEEP_WAKEUP_ULP : Serial.println("Wakeup caused by ULP program"); break;\n    default : Serial.printf("Wakeup was not caused by deep sleep: %d\\n",wakeup_reason); break;\n  }\n}\n\nvoid setup(){\n  Serial.begin(115200);\n  delay(1000); //Take some time to open up the Serial Monitor\n\n  //Increment boot number and print it every reboot\n  ++bootCount;\n  Serial.println("Boot number: " + String(bootCount));\n\n  //Print the wakeup reason for ESP32\n  print_wakeup_reason();\n\n  /*\n  First we configure the wake up source\n  We set our ESP32 to wake up every 5 seconds\n  */\n  esp_sleep_enable_timer_wakeup(TIME_TO_SLEEP * uS_TO_S_FACTOR);\n  Serial.println("Setup ESP32 to sleep for every " + String(TIME_TO_SLEEP) +\n  " Seconds");\n\n  /*\n  Next we decide what all peripherals to shut down/keep on\n  By default, ESP32 will automatically power down the peripherals\n  not needed by the wakeup source, but if you want to be a poweruser\n  this is for you. Read in detail at the API docs\n  http://esp-idf.readthedocs.io/en/latest/api-reference/system/deep_sleep.html\n  Left the line commented as an example of how to configure peripherals.\n  The line below turns off all RTC peripherals in deep sleep.\n  */\n  //esp_deep_sleep_pd_config(ESP_PD_DOMAIN_RTC_PERIPH, ESP_PD_OPTION_OFF);\n  //Serial.println("Configured all RTC Peripherals to be powered down in sleep");\n\n  /*\n  Now that we have setup a wake cause and if needed setup the\n  peripherals state in deep sleep, we can now start going to\n  deep sleep.\n  In the case that no wake up sources were provided but deep\n  sleep was started, it will sleep forever unless hardware\n  reset occurs.\n  */\n  Serial.println("Going to sleep now");\n  Serial.flush(); \n  esp_deep_sleep_start();\n  Serial.println("This will never be printed");\n}\n\nvoid loop(){\n  //This is not going to be called\n}\n')),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you want to learn to use more of the deep sleep mode and wake-up functions, you can find more sample programs officially written for the chip by ESP in the Arduino IDE."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("img",{src:"https://files.seeedstudio.com/wiki/XIAO_WiFi/16.png",style:{width:600,height:"auto"}}))),(0,r.kt)("h2",{id:"resources"},"Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"[ZIP]")," ",(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/XIAO-ESP32-C6_v1.0_SCH&PCB_24028.zip"},"Seeed Studio XIAO ESP32C6 KiCAD Libraries"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"[PDF]")," ",(0,r.kt)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32C6/XIAO-ESP32-C6_v1.0_SCH_PDF_24028.pdf"},"Seeed Studio XIAO ESP32C6 Schematic")))),(0,r.kt)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,r.kt)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,r.kt)("div",{class:"button_tech_support_container"},(0,r.kt)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.kt)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.kt)("div",{class:"button_tech_support_container"},(0,r.kt)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.kt)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}h.isMDXComponent=!0}}]);