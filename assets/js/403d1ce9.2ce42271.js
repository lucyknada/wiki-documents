"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[67780],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>m});var r=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var u=r.createContext({}),s=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=s(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(t),g=i,m=c["".concat(u,".").concat(g)]||c[g]||p[g]||o;return t?r.createElement(m,a(a({ref:n},d),{},{components:t})):r.createElement(m,a({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=g;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[c]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},12237:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=t(58168),i=(t(96540),t(15680));const o={description:"Bugduino",title:"Bugduino",keywords:["grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/Bugduino",last_update:{date:"1/13/2023",author:"shuxu hu"}},a=void 0,l={unversionedId:"Seeed_Elderly/Discrete Product/Bugduino",id:"Seeed_Elderly/Discrete Product/Bugduino",title:"Bugduino",description:"Bugduino",source:"@site/docs/Seeed_Elderly/Discrete Product/Bugduino.md",sourceDirName:"Seeed_Elderly/Discrete Product",slug:"/Bugduino",permalink:"/Bugduino",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Seeed_Elderly/Discrete Product/Bugduino.md",tags:[],version:"current",lastUpdatedBy:"shuxu hu",lastUpdatedAt:1673568e3,formattedLastUpdatedAt:"Jan 13, 2023",frontMatter:{description:"Bugduino",title:"Bugduino",keywords:["grove"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/Bugduino",last_update:{date:"1/13/2023",author:"shuxu hu"}},sidebar:"ProductSidebar",previous:{title:"Matrix Clock",permalink:"/Matrix_Clock"},next:{title:"CUI32Stem",permalink:"/CUI32Stem"}},u={},s=[{value:"Features",id:"features",level:2},{value:"Schematic",id:"schematic",level:2},{value:"Specifications",id:"specifications",level:2},{value:"Mechanic Dimensions",id:"mechanic-dimensions",level:2},{value:"Usage",id:"usage",level:2},{value:"Hardware Installation",id:"hardware-installation",level:3},{value:"Programming",id:"programming",level:3},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],d={toc:s},c="wrapper";function p(e){let{components:n,...t}=e;return(0,i.yg)(c,(0,r.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,(0,i.yg)("img",{parentName:"p",src:"https://files.seeedstudio.com/wiki/Bugduino/img/Bugduino-V2r0-Front.jpg",alt:null})),(0,i.yg)("p",null,"Bugduino is an Arduino compatible module."),(0,i.yg)("p",null,"Designed for working with ",(0,i.yg)("a",{parentName:"p",href:"http://www.buglabs.net/"},"Buglabs BUG platform"),"."),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/Bugduino-V2.0-p-863.html"},(0,i.yg)("img",{parentName:"a",src:"https://files.seeedstudio.com/wiki/Seeed-WiKi/docs/images/300px-Get_One_Now_Banner-ragular.png",alt:null}))),(0,i.yg)("h2",{id:"features"},"Features"),(0,i.yg)("hr",null),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://arduino.cc"},"Arduino")," compatible, based on Seeeduino"),(0,i.yg)("li",{parentName:"ul"},"BUG connector"),(0,i.yg)("li",{parentName:"ul"},"USB to Uart: FT232RL"),(0,i.yg)("li",{parentName:"ul"},"ATmega328 microcontroller"),(0,i.yg)("li",{parentName:"ul"},"Input voltage - 7-12V"),(0,i.yg)("li",{parentName:"ul"},"14 Digital I/O Pins (6 PWM outputs)"),(0,i.yg)("li",{parentName:"ul"},"8 Analog Inputs"),(0,i.yg)("li",{parentName:"ul"},"32k Flash Memory"),(0,i.yg)("li",{parentName:"ul"},"16Mhz Clock Speed")),(0,i.yg)("p",null,"**"),(0,i.yg)("h2",{id:"schematic"},"Schematic"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("a",{parentName:"li",href:"https://files.seeedstudio.com/wiki/Bugduino/res/BUGduinoSchematicPDF.pdf"},"File:BUGduinoSchematicPDF.pdf"))),(0,i.yg)("h2",{id:"specifications"},"Specifications"),(0,i.yg)("table",{cellpadding:"1",cellspacing:"1"},(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," Microprocessor"),(0,i.yg)("td",null," Atmega328")),(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," PCB size"),(0,i.yg)("td",null," 60.2cm x 60.2cm")),(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," Indicators"),(0,i.yg)("td",null," POWER,Green LED. LEDs for Txd, Rxd, Rst")),(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," Power supply"),(0,i.yg)("td",null," 5V DC")),(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," Interface"),(0,i.yg)("td",null," Mini-B USB, 2.54mm pitch pin header")),(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," Connectivity"),(0,i.yg)("td",null," USB")),(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," Communication Protocol"),(0,i.yg)("td",null," UART, Bit Bang I/O, SPI, I2C")),(0,i.yg)("tr",null,(0,i.yg)("th",{scope:"row"}," ROHS"),(0,i.yg)("td",null," YES"))),(0,i.yg)("h2",{id:"mechanic-dimensions"},"Mechanic Dimensions"),(0,i.yg)("p",null,"60.2mm ",(0,i.yg)("em",{parentName:"p"}," 60.2mm ")," 20.5mm"),(0,i.yg)("h2",{id:"usage"},"Usage"),(0,i.yg)("h3",{id:"hardware-installation"},"Hardware Installation"),(0,i.yg)("ol",null,(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Toggle Serial Switch to USB side;")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Plug USB cable;")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"Select the Corresponding COM port in Arduino IDE;")),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},'Select "Arduino Duemilanove or Nano w/ ATmega328" in Arduino Board menu;')),(0,i.yg)("li",{parentName:"ol"},(0,i.yg)("p",{parentName:"li"},"click the upload bottom in Arduino IDE;"))),(0,i.yg)("h3",{id:"programming"},"Programming"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},'#include <Wire.h>\n\n//SLOTS: Vendor:  0x02\n//SLOTS: Product  0x10\n//SLOTS: Revision 0x20\n//A0--\x3eGND, A1--\x3eGND, A2--\x3eGND\n#define AT24C02B_Addr  0b1010000\n\nunsigned char bugduino_signature[]=\n{\n    0x00,0x00,0x02,0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0b,0x16,0x00,0x00,0x00,0x0f\n};\nunsigned char address_map[]=\n{\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,0x7f\n};\n\nvoid setup()\n{\n    Wire.begin();\n    Serial.begin(38400);\n}\nvoid loop()\n{\n  /*\n   */\n    unsigned char i = 0;\n    unsigned char eeprom = 0;\n    for(i=0;i<20;i++)\n    {\n        Wire.beginTransmission(AT24C02B_Addr); //start\n        Wire.send(address_map[i]);\n        Wire.endTransmission();    //stop\n        Wire.requestFrom(AT24C02B_Addr, 1);    // request\n        delay(1);\n        while(Wire.available())    // slave may send less than requested\n        {\n            unsigned char c = Wire.receive(); // receive a byte as character\n            if(c != bugduino_signature[i])\n            {\n                eeprom =1;\n            }\n        }\n    }\n    delay(100);\n\n    if(eeprom)\n    {\n        Serial.println("Write Signature");\n        for(i=0;i<20;i++)\n        {\n            Wire.beginTransmission(AT24C02B_Addr); //start\n            Wire.send(address_map[i]);\n            Wire.send(bugduino_signature[i]);\n            Wire.endTransmission();    //stop\n            delay(10);\n        }\n    }\n    else\n    {\n        Serial.println("Signature OK");\n    }\n    for(;;);\n}\n')),(0,i.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,i.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,i.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,i.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}p.isMDXComponent=!0}}]);