"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[83331],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>g});var i=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),p=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return i.createElement(l.Provider,{value:n},e.children)},u="mdxType",_={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(t),c=r,g=u["".concat(l,".").concat(c)]||u[c]||_[c]||a;return t?i.createElement(g,s(s({ref:n},d),{},{components:t})):i.createElement(g,s({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<a;p++)s[p]=t[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},95881:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>_,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var i=t(58168),r=(t(96540),t(15680));const a={description:"\u6211\u4eec\u7ee7\u7eed\u5728Seeed XIAO family\u7684\u5de8\u5927\u7684\u65b0\u5fae\u578b\u8bbe\u5907ESP32S3 Sense\u4e0a\u63a2\u7d22\u673a\u5668\u5b66\u4e60\u3002",title:"\u57fa\u4e8e Edge Impulse \u7684\u5173\u952e\u8bcd\u8bc6\u522b",image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/cn/xiao_esp32s3_keyword_spotting",last_update:{date:"10/31/2023",author:"Xin Ping Li"}},s="\u57fa\u4e8e Edge Impulse \u7684\u5173\u952e\u8bcd\u8bc6\u522b",o={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/Application/CN_XIAO_ESP32S3_Keyword_Spotting",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/Application/CN_XIAO_ESP32S3_Keyword_Spotting",title:"\u57fa\u4e8e Edge Impulse \u7684\u5173\u952e\u8bcd\u8bc6\u522b",description:"\u6211\u4eec\u7ee7\u7eed\u5728Seeed XIAO family\u7684\u5de8\u5927\u7684\u65b0\u5fae\u578b\u8bbe\u5907ESP32S3 Sense\u4e0a\u63a2\u7d22\u673a\u5668\u5b66\u4e60\u3002",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/Application/CN_XIAO_ESP32S3_Keyword_Spotting.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/Application",slug:"/cn/xiao_esp32s3_keyword_spotting",permalink:"/cn/xiao_esp32s3_keyword_spotting",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/Application/CN_XIAO_ESP32S3_Keyword_Spotting.md",tags:[],version:"current",lastUpdatedBy:"Xin Ping Li",lastUpdatedAt:1698710400,formattedLastUpdatedAt:"Oct 31, 2023",frontMatter:{description:"\u6211\u4eec\u7ee7\u7eed\u5728Seeed XIAO family\u7684\u5de8\u5927\u7684\u65b0\u5fae\u578b\u8bbe\u5907ESP32S3 Sense\u4e0a\u63a2\u7d22\u673a\u5668\u5b66\u4e60\u3002",title:"\u57fa\u4e8e Edge Impulse \u7684\u5173\u952e\u8bcd\u8bc6\u522b",image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/cn/xiao_esp32s3_keyword_spotting",last_update:{date:"10/31/2023",author:"Xin Ping Li"}},sidebar:"CNSidebar",previous:{title:"\u57fa\u4e8e XIAO ESP32S3 \u7684\u5730\u7406\u5b9a\u4f4d\u8ffd\u8e2a\u5668",permalink:"/cn/geolocation_tracker_with_XIAO_ESP32S3"},next:{title:"\u5feb\u901f\u4e0a\u624b",permalink:"/cn/get_start_round_display"}},l={},p=[{value:"\u5f00\u59cb",id:"\u5f00\u59cb",level:2},{value:"\u786c\u4ef6",id:"\u786c\u4ef6",level:3},{value:"\u8f6f\u4ef6",id:"\u8f6f\u4ef6",level:3},{value:"\u6355\u83b7(\u79bb\u7ebf)\u97f3\u9891\u6570\u636e",id:"\u6355\u83b7\u79bb\u7ebf\u97f3\u9891\u6570\u636e",level:2},{value:"\u6b65\u9aa4 1.\u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3a\u3002wav\u97f3\u9891\u6587\u4ef6\u5230microSD\u5361\u3002",id:"\u6b65\u9aa4-1\u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3awav\u97f3\u9891\u6587\u4ef6\u5230microsd\u5361",level:3},{value:"\u8bad\u7ec3\u6570\u636e\u91c7\u96c6",id:"\u8bad\u7ec3\u6570\u636e\u91c7\u96c6",level:2},{value:"\u6b65\u9aa4 2.\u4e0a\u4f20\u91c7\u96c6\u7684\u58f0\u97f3\u6570\u636e",id:"\u6b65\u9aa4-2\u4e0a\u4f20\u91c7\u96c6\u7684\u58f0\u97f3\u6570\u636e",level:3},{value:"\u6b65\u9aa4 3.\u521b\u9020\u8109\u51b2\u4fe1\u53f7(\u9884\u5904\u7406/\u6a21\u578b\u5b9a\u4e49)",id:"\u6b65\u9aa4-3\u521b\u9020\u8109\u51b2\u4fe1\u53f7\u9884\u5904\u7406\u6a21\u578b\u5b9a\u4e49",level:3},{value:"\u6b65\u9aa4 4.\u9884\u5904\u7406(MFCC)",id:"\u6b65\u9aa4-4\u9884\u5904\u7406mfcc",level:3},{value:"\u5efa\u7acb\u673a\u5668\u5b66\u4e60\u6a21\u578b",id:"\u5efa\u7acb\u673a\u5668\u5b66\u4e60\u6a21\u578b",level:2},{value:"\u6b65\u9aa4 5.\u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3",id:"\u6b65\u9aa4-5\u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3",level:3},{value:"\u90e8\u7f72\u5230XIAO ESP32S3 Sense",id:"\u90e8\u7f72\u5230xiao-esp32s3-sense",level:2},{value:"\u6b65\u9aa4 6. \u90e8\u7f72\u5230XIAO ESP32S3 Sense",id:"\u6b65\u9aa4-6-\u90e8\u7f72\u5230xiao-esp32s3-sense",level:3},{value:"\u7279\u522b\u611f\u8c22",id:"\u7279\u522b\u611f\u8c22",level:2},{value:"\u8d44\u6e90",id:"\u8d44\u6e90",level:2},{value:"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba",id:"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba",level:2}],d={toc:p},u="wrapper";function _(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,i.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"\u57fa\u4e8e-edge-impulse-\u7684\u5173\u952e\u8bcd\u8bc6\u522b"},"\u57fa\u4e8e Edge Impulse \u7684\u5173\u952e\u8bcd\u8bc6\u522b"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/1.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u672c\u6559\u7a0b\u5c06\u6307\u5bfc\u60a8\u5728XIAO ESP32S3 Sense\u5fae\u63a7\u5236\u5668\u677f\u4e0a\u4f7f\u7528TinyML\u5b9e\u73b0\u5173\u952e\u5b57\u8bc6\u522b(KWS)\u7cfb\u7edf\uff0c\u5e76\u5728Edge Impulse\u7684\u5e2e\u52a9\u4e0b\u8fdb\u884c\u6570\u636e\u6536\u96c6\u548c\u6a21\u578b\u8bad\u7ec3\u3002KWS\u5bf9\u4e8e\u8bed\u97f3\u8bc6\u522b\u7cfb\u7edf\u81f3\u5173\u91cd\u8981\uff0c\u501f\u52a9TinyML\u7684\u529b\u91cf\uff0c\u53ef\u4ee5\u5728\u66f4\u5c0f\u3001\u4f4e\u529f\u8017\u7684\u8bbe\u5907\u4e0a\u5b9e\u73b0\u3002\u8ba9\u6211\u4eec\u4f7f\u7528Edge Impulse\u548cXIAO ESP32S3 Sense\u6784\u5efa\u6211\u4eec\u81ea\u5df1\u7684KWS\u7cfb\u7edf!"),(0,r.yg)("h2",{id:"\u5f00\u59cb"},"\u5f00\u59cb"),(0,r.yg)("p",null,"\u5728\u5f00\u59cb\u8fd9\u4e2a\u9879\u76ee\u4e4b\u524d\uff0c\u8bf7\u6309\u7167\u4e0b\u9762\u7684\u51c6\u5907\u6b65\u9aa4\u51c6\u5907\u8fd9\u4e2a\u9879\u76ee\u6240\u9700\u7684\u8f6f\u4ef6\u548c\u786c\u4ef6\u3002"),(0,r.yg)("h3",{id:"\u786c\u4ef6"},"\u786c\u4ef6"),(0,r.yg)("p",null,"\u4e3a\u4e86\u987a\u5229\u5b8c\u6210\u8fd9\u4e2a\u9879\u76ee\uff0c\u60a8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u786c\u4ef6\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"XIAO ESP32S3 Sense")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"microSD\u5361(\u4e0d\u5927\u4e8e32GB)")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"microSD\u8bfb\u5361\u5668")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"USB-C\u6570\u636e\u7ebf"))),(0,r.yg)("p",null,"\u4f7f\u7528XIAO ESP32S3 Sense\u5b89\u88c5\u6269\u5c55\u677f\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u6269\u5c55\u677f\u4e0a\u7684\u9ea6\u514b\u98ce\u3002"),(0,r.yg)("p",null,"\u5b89\u88c5\u6269\u5c55\u677f\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06\u6269\u5c55\u677f\u4e0a\u7684\u8fde\u63a5\u5668\u5bf9\u51c6\u5c0fESP32S3\u4e0a\u7684B2B\u8fde\u63a5\u5668\uff0c\u7136\u540e\u7528\u529b\u6309\u4e0b\uff0c\u542c\u5230\u201c\u5494\u201d\u7684\u4e00\u58f0\uff0c\u5b89\u88c5\u5b8c\u6210\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/61.gif",style:{width:500,height:"auto"}})),(0,r.yg)("p",null,"XIAO ESP32S3 Sense\u652f\u6301\u9ad8\u8fbe",(0,r.yg)("strong",{parentName:"p"},"32GB"),"\u7684microSD\u5361\uff0c\u6240\u4ee5\u5982\u679c\u60a8\u51c6\u5907\u4e3aXIAO\u8d2d\u4e70microSD\u5361\uff0c\u8bf7\u53c2\u9605\u6b64\u89c4\u683c\u3002\u5e76\u5728\u4f7f\u7528microSD\u5361\u4e4b\u524d\u5c06microSD\u5361\u683c\u5f0f\u5316\u4e3a",(0,r.yg)("strong",{parentName:"p"},"FAT32"),"\u683c\u5f0f\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/67.png",style:{width:250,height:"auto"}})),(0,r.yg)("p",null,"\u683c\u5f0f\u5316\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06microSD\u5361\u63d2\u5165microSD\u5361\u63d2\u69fd\u3002\u8bf7\u6ce8\u610f\u63d2\u5165\u65b9\u5411\uff0c\u91d1\u624b\u6307\u4fa7\u5e94\u671d\u5185\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/66.jpg",style:{width:500,height:"auto"}})),(0,r.yg)("h3",{id:"\u8f6f\u4ef6"},"\u8f6f\u4ef6"),(0,r.yg)("p",null,"\u5982\u679c\u8fd9\u662f\u4f60\u7b2c\u4e00\u6b21\u4f7f\u7528XIAO ESP32S3 Sense\uff0c\u90a3\u4e48\u5728\u5f00\u59cb\u4e4b\u524d\uff0c\u6211\u4eec\u5efa\u8bae\u4f60\u9605\u8bfb\u4ee5\u4e0b\u4e24\u4e2aWiki\u6765\u5b66\u4e60\u5982\u4f55\u4f7f\u7528\u5b83\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/xiao_esp32s3_getting_started/"},"\u4f7f\u7528Seeed Studio XIAO ESP32S3 (Sense)\u5165\u95e8"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/xiao_esp32s3_sense_mic/"},"Seeed Studio XIAO ESP32S3\u9ea6\u514b\u98ce\u7684\u4f7f\u7528")))),(0,r.yg)("h2",{id:"\u6355\u83b7\u79bb\u7ebf\u97f3\u9891\u6570\u636e"},"\u6355\u83b7(\u79bb\u7ebf)\u97f3\u9891\u6570\u636e"),(0,r.yg)("h3",{id:"\u6b65\u9aa4-1\u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3awav\u97f3\u9891\u6587\u4ef6\u5230microsd\u5361"},"\u6b65\u9aa4 1.\u5c06\u5f55\u5236\u7684\u58f0\u97f3\u6837\u672c\u4fdd\u5b58\u4e3a\u3002wav\u97f3\u9891\u6587\u4ef6\u5230microSD\u5361\u3002"),(0,r.yg)("p",null,"\u8ba9\u6211\u4eec\u4f7f\u7528\u677f\u8f7dSD\u8bfb\u5361\u5668\u6765\u4fdd\u5b58\u3002wav\u97f3\u9891\u6587\u4ef6\uff0c\u6211\u4eec\u9700\u8981\u5148\u9002\u5e94XIAO PSRAM\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/94.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u7136\u540e\u7f16\u8bd1\u5e76\u4e0a\u4f20\u4ee5\u4e0b\u7a0b\u5e8f\u5230XIAO ESP32S3\u3002"),(0,r.yg)("p",null,":::\u63d0\u793a\n\u672c\u4ee3\u7801\u901a\u8fc7Seeed XIAO ESP32S3\u611f\u97f3\u677f\u7684I2S\u63a5\u53e3\u5f55\u5236\u97f3\u9891\uff0c\u5e76\u5c06\u5f55\u5236\u7684\u97f3\u9891\u4ee5a.wav\u6587\u4ef6\u7684\u5f62\u5f0f\u4fdd\u5b58\u5728SD\u5361\u4e0a\uff0c\u5e76\u5141\u8bb8\u901a\u8fc7\u4e32\u53e3\u76d1\u89c6\u5668\u53d1\u9001\u7684\u547d\u4ee4\u6765\u63a7\u5236\u5f55\u5236\u8fc7\u7a0b\u3002\u97f3\u9891\u6587\u4ef6\u7684\u540d\u79f0\u662f\u53ef\u5b9a\u5236\u7684(\u5b83\u5e94\u8be5\u662f\u4e0e\u8bad\u7ec3\u4e00\u8d77\u4f7f\u7528\u7684\u7c7b\u6807\u7b7e)\uff0c\u53ef\u4ee5\u5236\u4f5c\u591a\u4e2a\u5f55\u97f3\uff0c\u6bcf\u4e2a\u5f55\u97f3\u4fdd\u5b58\u5728\u4e00\u4e2a\u65b0\u6587\u4ef6\u4e2d\u3002\u8be5\u4ee3\u7801\u8fd8\u5305\u62ec\u589e\u52a0\u5f55\u97f3\u97f3\u91cf\u7684\u529f\u80fd\u3002\n:::"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'/* \n * WAV Recorder for Seeed XIAO ESP32S3 Sense \n * \n * NOTE: To execute this code, we will need to use the PSRAM \n * function of the ESP-32 chip, so please turn it on before uploading.\n * Tools>PSRAM: "OPI PSRAM"\n * \n * Adapted by M.Rovai @May23 from original Seeed code\n*/\n\n#include <I2S.h>\n#include "FS.h"\n#include "SD.h"\n#include "SPI.h"\n\n// make changes as needed\n#define RECORD_TIME   10  // seconds, The maximum value is 240\n#define WAV_FILE_NAME "data"\n\n// do not change for best\n#define SAMPLE_RATE 16000U\n#define SAMPLE_BITS 16\n#define WAV_HEADER_SIZE 44\n#define VOLUME_GAIN 2\n\nint fileNumber = 1;\nString baseFileName;\nbool isRecording = false;\n\nvoid setup() {\n  Serial.begin(115200);\n  while (!Serial) ;\n  \n  I2S.setAllPins(-1, 42, 41, -1, -1);\n  if (!I2S.begin(PDM_MONO_MODE, SAMPLE_RATE, SAMPLE_BITS)) {\n    Serial.println("Failed to initialize I2S!");\n    while (1) ;\n  }\n  if(!SD.begin(21)){\n    Serial.println("Failed to mount SD Card!");\n    while (1) ;\n  }\n  Serial.printf("Enter with the label name\\n");\n  //record_wav();\n}\n\nvoid loop() {\n  if (Serial.available() > 0) {\n    String command = Serial.readStringUntil(\'\\n\');\n    command.trim();\n    if (command == "rec") {\n      isRecording = true;\n    } else {\n      baseFileName = command;\n      fileNumber = 1; // reset file number each time a new base file name is set\n      Serial.printf("Send rec for starting recording label \\n");\n    }\n  }\n  if (isRecording && baseFileName != "") {\n    String fileName = "/" + baseFileName + "." + String(fileNumber) + ".wav";\n    fileNumber++;\n    record_wav(fileName);\n    delay(1000); // delay to avoid recording multiple files at once\n    isRecording = false;\n  }\n}\n\nvoid record_wav(String fileName)\n{\n  uint32_t sample_size = 0;\n  uint32_t record_size = (SAMPLE_RATE * SAMPLE_BITS / 8) * RECORD_TIME;\n  uint8_t *rec_buffer = NULL;\n  Serial.printf("Start recording ...\\n");\n   \n  File file = SD.open(fileName.c_str(), FILE_WRITE);\n  // Write the header to the WAV file\n  uint8_t wav_header[WAV_HEADER_SIZE];\n  generate_wav_header(wav_header, record_size, SAMPLE_RATE);\n  file.write(wav_header, WAV_HEADER_SIZE);\n\n  // PSRAM malloc for recording\n  rec_buffer = (uint8_t *)ps_malloc(record_size);\n  if (rec_buffer == NULL) {\n    Serial.printf("malloc failed!\\n");\n    while(1) ;\n  }\n  Serial.printf("Buffer: %d bytes\\n", ESP.getPsramSize() - ESP.getFreePsram());\n\n  // Start recording\n  esp_i2s::i2s_read(esp_i2s::I2S_NUM_0, rec_buffer, record_size, &sample_size, portMAX_DELAY);\n  if (sample_size == 0) {\n    Serial.printf("Record Failed!\\n");\n  } else {\n    Serial.printf("Record %d bytes\\n", sample_size);\n  }\n\n  // Increase volume\n  for (uint32_t i = 0; i < sample_size; i += SAMPLE_BITS/8) {\n    (*(uint16_t *)(rec_buffer+i)) <<= VOLUME_GAIN;\n  }\n\n  // Write data to the WAV file\n  Serial.printf("Writing to the file ...\\n");\n  if (file.write(rec_buffer, record_size) != record_size)\n    Serial.printf("Write file Failed!\\n");\n\n  free(rec_buffer);\n  file.close();\n  Serial.printf("Recording complete: \\n");\n  Serial.printf("Send rec for a new sample or enter a new label\\n\\n");\n}\n\nvoid generate_wav_header(uint8_t *wav_header, uint32_t wav_size, uint32_t sample_rate)\n{\n  // See this for reference: http://soundfile.sapp.org/doc/WaveFormat/\n  uint32_t file_size = wav_size + WAV_HEADER_SIZE - 8;\n  uint32_t byte_rate = SAMPLE_RATE * SAMPLE_BITS / 8;\n  const uint8_t set_wav_header[] = {\n    \'R\', \'I\', \'F\', \'F\', // ChunkID\n    file_size, file_size >> 8, file_size >> 16, file_size >> 24, // ChunkSize\n    \'W\', \'A\', \'V\', \'E\', // Format\n    \'f\', \'m\', \'t\', \' \', // Subchunk1ID\n    0x10, 0x00, 0x00, 0x00, // Subchunk1Size (16 for PCM)\n    0x01, 0x00, // AudioFormat (1 for PCM)\n    0x01, 0x00, // NumChannels (1 channel)\n    sample_rate, sample_rate >> 8, sample_rate >> 16, sample_rate >> 24, // SampleRate\n    byte_rate, byte_rate >> 8, byte_rate >> 16, byte_rate >> 24, // ByteRate\n    0x02, 0x00, // BlockAlign\n    0x10, 0x00, // BitsPerSample (16 bits)\n    \'d\', \'a\', \'t\', \'a\', // Subchunk2ID\n    wav_size, wav_size >> 8, wav_size >> 16, wav_size >> 24, // Subchunk2Size\n  };\n  memcpy(wav_header, set_wav_header, sizeof(set_wav_header));\n}\n')),(0,r.yg)("p",null,"\u73b0\u5728\uff0c\u5c06\u4ee3\u7801\u4e0a\u4f20\u5230XIAO\u5e76\u4ece\u5173\u952e\u5b57(hello\u548cstop)\u4e2d\u83b7\u53d6\u793a\u4f8b\u3002\u4f60\u4e5f\u53ef\u4ee5\u6355\u6349\u566a\u58f0\u548c\u5176\u4ed6\u5355\u8bcd\u3002\u4e32\u884c\u76d1\u89c6\u5668\u5c06\u63d0\u793a\u60a8\u6536\u5230\u8981\u8bb0\u5f55\u7684\u6807\u7b7e\u3002"),(0,r.yg)("p",null,"\u53d1\u9001\u6807\u7b7e(\u4f8b\u5982\uff0c",(0,r.yg)("strong",{parentName:"p"},"hello"),")\u3002\u7a0b\u5e8f\u5c06\u7b49\u5f85\u53e6\u4e00\u4e2a\u547d\u4ee4:",(0,r.yg)("strong",{parentName:"p"},"rec"),"\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/2.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u6bcf\u6b21\u53d1\u9001\u547d\u4ee4",(0,r.yg)("strong",{parentName:"p"},"rec"),"\u65f6\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u5f00\u59cb\u8bb0\u5f55\u65b0\u7684\u6837\u672c\u3002\u6587\u4ef6\u5c06\u4fdd\u5b58\u4e3ahello.1.wav\u3001hello.2.wav\u3001hello.3.wav\u7b49\uff0c\u76f4\u5230\u53d1\u9001\u4e00\u4e2a\u65b0\u6807\u7b7e(\u4f8b\u5982\uff0c",(0,r.yg)("strong",{parentName:"p"},"stop"),")\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f60\u5e94\u8be5\u4e3a\u6bcf\u4e2a\u65b0\u6837\u672c\u53d1\u9001\u547d\u4ee4",(0,r.yg)("strong",{parentName:"p"},"rec"),"\uff0c\u5b83\u5c06\u88ab\u4fdd\u5b58\u4e3astop.1.wav\u3001stop.2.wav\u3001stop.3.wav\u7b49\u3002"),(0,r.yg)("p",null,"\u6700\u7ec8\uff0c\u6211\u4eec\u5c06\u5f97\u5230\u4fdd\u5b58\u5728SD\u5361\u4e0a\u7684\u6587\u4ef6\u3002"),(0,r.yg)("p",null,":::\u8bf7\u6ce8\u610f"),(0,r.yg)("p",null,"\u6211\u4eec\u5efa\u8bae\u60a8\u4e3a\u6bcf\u4e2a\u6807\u7b7e\u6837\u672c\u63d0\u4f9b\u8db3\u591f\u7684\u58f0\u97f3\u3002\u4f60\u53ef\u4ee5\u5728\u6bcf10\u79d2\u7684\u5f55\u5236\u8fc7\u7a0b\u4e2d\u91cd\u590d\u4f60\u7684\u5173\u952e\u8bcd\u51e0\u6b21\uff0c\u6211\u4eec\u5c06\u5728\u540e\u7eed\u6b65\u9aa4\u4e2d\u5bf9\u6837\u672c\u8fdb\u884c\u5206\u5272\u3002\u4f46\u662f\u5173\u952e\u5b57\u4e4b\u95f4\u9700\u8981\u4e00\u4e9b\u7a7a\u683c\u3002\n:::"),(0,r.yg)("h2",{id:"\u8bad\u7ec3\u6570\u636e\u91c7\u96c6"},"\u8bad\u7ec3\u6570\u636e\u91c7\u96c6"),(0,r.yg)("h3",{id:"\u6b65\u9aa4-2\u4e0a\u4f20\u91c7\u96c6\u7684\u58f0\u97f3\u6570\u636e"},"\u6b65\u9aa4 2.\u4e0a\u4f20\u91c7\u96c6\u7684\u58f0\u97f3\u6570\u636e"),(0,r.yg)("p",null,"\u5f53\u5b9a\u4e49\u5e76\u6536\u96c6\u539f\u59cb\u6570\u636e\u96c6\u65f6\uff0c\u6211\u4eec\u5e94\u8be5\u5728",(0,r.yg)("a",{parentName:"p",href:"https://edgeimpulse.com/"},"Edge Impulse"),"\u542f\u52a8\u4e00\u4e2a\u65b0\u9879\u76ee\u3002\u521b\u5efa\u9879\u76ee\u540e\uff0c\u5728",(0,r.yg)("strong",{parentName:"p"},"Data Acquisition"),"\u90e8\u5206\u9009\u62e9",(0,r.yg)("strong",{parentName:"p"},"Upload Existing Data"),"\u5de5\u5177\u3002\u9009\u62e9\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/3.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u5e76\u5c06\u5b83\u4eec\u4e0a\u4f20\u5230\u5de5\u4f5c\u5ba4(\u4f60\u53ef\u4ee5\u5728\u8bad\u7ec3/\u6d4b\u8bd5\u4e2d\u81ea\u52a8\u5206\u5272\u6570\u636e)\u3002\u91cd\u590d\u5230\u6240\u6709\u7c7b\u548c\u6240\u6709\u539f\u59cb\u6570\u636e\u3002"),(0,r.yg)("p",null,"\u6570\u636e\u96c6\u4e0a\u7684\u6240\u6709\u6570\u636e\u957f\u5ea6\u90fd\u662f1\u79d2\uff0c\u4f46\u4e0a\u4e00\u8282\u4e2d\u8bb0\u5f55\u7684\u6837\u672c\u957f\u5ea6\u4e3a10\u79d2\uff0c\u5fc5\u987b\u5c06\u5176\u62c6\u5206\u4e3a1\u79d2\u7684\u6837\u672c\u624d\u80fd\u517c\u5bb9\u3002\u70b9\u51fb\u6837\u672c\u540d\u79f0\u540e\u7684\u4e09\u4e2a\u70b9\uff0c\u5e76\u9009\u62e9",(0,r.yg)("strong",{parentName:"p"},"Split sample"),"."),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/5.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u4e00\u65e6\u8fdb\u5165\u8be5\u5de5\u5177\uff0c\u5c06\u6570\u636e\u62c6\u5206\u4e3a1\u79d2\u7684\u8bb0\u5f55\u3002\u5982\u6709\u5fc5\u8981\uff0c\u6dfb\u52a0\u6216\u5220\u9664\u7247\u6bb5\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/4.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u6240\u6709\u6837\u54c1\u90fd\u5e94\u91cd\u590d\u6b64\u7a0b\u5e8f\u3002"),(0,r.yg)("h3",{id:"\u6b65\u9aa4-3\u521b\u9020\u8109\u51b2\u4fe1\u53f7\u9884\u5904\u7406\u6a21\u578b\u5b9a\u4e49"},"\u6b65\u9aa4 3.\u521b\u9020\u8109\u51b2\u4fe1\u53f7(\u9884\u5904\u7406/\u6a21\u578b\u5b9a\u4e49)"),(0,r.yg)("p",null,"\u8109\u51b2\u4fe1\u53f7\u63a5\u6536\u539f\u59cb\u6570\u636e\uff0c\u901a\u8fc7\u4fe1\u53f7\u5904\u7406\u624b\u6bb5\u63d0\u53d6\u7279\u5f81\uff0c\u518d\u8fd0\u7528\u5b66\u4e60\u6a21\u5757\u5bf9\u65b0\u6570\u636e\u8fdb\u884c\u5206\u7c7b\u8bc6\u522b\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/6.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("p",null,"\u9996\u5148\uff0c\u6211\u4eec\u5c06\u4f7f\u75281\u79d2\u7684\u7a97\u53e3\u83b7\u53d6\u6570\u636e\u70b9\uff0c\u589e\u52a0\u6570\u636e\uff0c\u6bcf500ms\u6ed1\u52a8\u8be5\u7a97\u53e3\u3002\u6ce8\u610f\uff0c\u8bbe\u7f6e\u4e86",(0,r.yg)("strong",{parentName:"p"},"\u96f6\u586b\u5145\u6570\u636e"),"\u9009\u9879\u3002\u586b\u5145\u5c0f\u4e8e1\u79d2\u7684\u96f6\u6837\u672c\u662f\u5f88\u91cd\u8981\u7684(\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u51cf\u5c11\u4e86",(0,r.yg)("strong",{parentName:"p"},"\u5206\u5272\u5de5\u5177"),"\u76841000\u6beb\u79d2\u7a97\u53e3\uff0c\u4ee5\u907f\u514d\u566a\u58f0\u548c\u5c16\u5cf0)\u3002"),(0,r.yg)("p",null,"\u6bcf\u4e2a1\u79d2\u7684\u97f3\u9891\u6837\u672c\u5e94\u8be5\u7ecf\u8fc7\u9884\u5904\u7406\u5e76\u8f6c\u6362\u4e3a\u56fe\u50cf(\u4f8b\u5982\uff0c13 x 49 x 1)\u3002\u6211\u4eec\u5c06\u4f7f\u7528MFCC\uff0c\u5b83\u4f7f\u7528\u6885\u5c14\u9891\u7387\u5012\u8c31\u7cfb\u6570\u4ece\u97f3\u9891\u4fe1\u53f7\u4e2d\u63d0\u53d6\u7279\u5f81\uff0c\u8fd9\u5bf9\u4eba\u7c7b\u58f0\u97f3\u975e\u5e38\u6709\u7528\u3002"),(0,r.yg)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9009\u62e9",(0,r.yg)("strong",{parentName:"p"},"KERAS"),"\u8fdb\u884c\u5206\u7c7b\uff0c\u5b83\u901a\u8fc7\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u56fe\u50cf\u5206\u7c7b\u4ece\u5934\u5f00\u59cb\u6784\u5efa\u6211\u4eec\u7684\u6a21\u578b\u3002"),(0,r.yg)("h3",{id:"\u6b65\u9aa4-4\u9884\u5904\u7406mfcc"},"\u6b65\u9aa4 4.\u9884\u5904\u7406(MFCC)"),(0,r.yg)("p",null,"\u4e0b\u4e00\u6b65\u662f\u521b\u5efa\u4e0b\u4e00\u9636\u6bb5\u8981\u8bad\u7ec3\u7684\u56fe\u50cf\u3002\u6211\u4eec\u53ef\u4ee5\u4fdd\u7559\u9ed8\u8ba4\u53c2\u6570\u503c\uff0c\u6216\u8005\u5229\u7528DSP\u7684",(0,r.yg)("strong",{parentName:"p"},"Autotuneparameters\u9009\u9879"),"\uff0c\u6211\u4eec\u5c06\u8fd9\u6837\u505a\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/7.png",style:{width:1e3,height:"auto"}})),(0,r.yg)("h2",{id:"\u5efa\u7acb\u673a\u5668\u5b66\u4e60\u6a21\u578b"},"\u5efa\u7acb\u673a\u5668\u5b66\u4e60\u6a21\u578b"),(0,r.yg)("h3",{id:"\u6b65\u9aa4-5\u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3"},"\u6b65\u9aa4 5.\u6a21\u578b\u8bbe\u8ba1\u4e0e\u8bad\u7ec3"),(0,r.yg)("p",null,"\u6211\u4eec\u5c06\u4f7f\u7528\u5377\u79ef\u795e\u7ecf\u7f51\u7edc(CNN)\u6a21\u578b\u3002\u57fa\u672c\u67b6\u6784\u7531\u4e24\u4e2aConv1D + MaxPooling\u5757(\u5206\u522b\u67098\u4e2a\u548c16\u4e2a\u795e\u7ecf\u5143)\u548c0.25\u4e2aDropout\u5b9a\u4e49\u3002\u5728\u6700\u540e\u4e00\u5c42\uff0c\u5e73\u5c55\u56db\u4e2a\u795e\u7ecf\u5143\u540e\uff0c\u6bcf\u4e2a\u7c7b\u4e00\u4e2a\u3002"),(0,r.yg)("p",null,"\u4f5c\u4e3a\u8d85\u53c2\u6570\uff0c\u6211\u4eec\u5c06\u67090.005\u7684\u5b66\u4e60\u7387\u548c\u4e00\u4e2a\u5c06\u88ab\u8bad\u7ec3100\u4e2aepoch\u7684\u6a21\u578b\u3002\u6211\u4eec\u8fd8\u5c06\u5305\u62ec\u6570\u636e\u589e\u5f3a\uff0c\u4f5c\u4e3a\u4e00\u4e9b\u566a\u58f0\u3002\u7ed3\u679c\u770b\u8d77\u6765\u8fd8\u4e0d\u9519\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/8.png",style:{width:600,height:"auto"}})),(0,r.yg)("h2",{id:"\u90e8\u7f72\u5230xiao-esp32s3-sense"},"\u90e8\u7f72\u5230XIAO ESP32S3 Sense"),(0,r.yg)("h3",{id:"\u6b65\u9aa4-6-\u90e8\u7f72\u5230xiao-esp32s3-sense"},"\u6b65\u9aa4 6. \u90e8\u7f72\u5230XIAO ESP32S3 Sense"),(0,r.yg)("p",null,"Edge Impulse\u5c06\u6253\u5305\u6240\u6709\u9700\u8981\u7684\u5e93\u3001\u9884\u5904\u7406\u51fd\u6570\u548c\u8bad\u7ec3\u597d\u7684\u6a21\u578b\uff0c\u5e76\u5c06\u5b83\u4eec\u4e0b\u8f7d\u5230\u60a8\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\u60a8\u5e94\u8be5\u9009\u62e9Arduino\u5e93\u9009\u9879\uff0c\u5e76\u5728\u5e95\u90e8\u9009\u62e9Quantized (Int8)\u5e76\u6309\u4e0b\u6309\u94aeBuild\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/9.png",style:{width:600,height:"auto"}})),(0,r.yg)("p",null,"\u5c3d\u7ba1Edge Impulse\u8fd8\u6ca1\u6709\u53d1\u5e03\u4f7f\u7528ESP NN\u52a0\u901f\u5668\u7684ESP32S3 SDK\uff0c\u4f46\u591a\u4e8f\u4e86Dmitry Maslov\uff0c\u6211\u4eec\u53ef\u4ee5\u6062\u590d\u5e76\u4fee\u590d\u9488\u5bf9ESP32-S3\u7684\u7ec4\u88c5\u4f18\u5316\u3002\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u8fd8\u6ca1\u6709\u6b63\u5f0f\u53d1\u5e03\uff0c\u4e00\u65e6\u4ed6\u4eec\u89e3\u51b3\u4e86\u4e0e\u5176\u4ed6\u677f\u7684\u51b2\u7a81\uff0cEI\u5c06\u4f1a\u628a\u5b83\u5305\u542b\u5728EI SDK\u4e2d\u3002"),(0,r.yg)("p",null,":::\u63d0\u9192\n\u76ee\u524d\uff0c\u8fd9\u53ea\u9002\u7528\u4e8e\u975eeon\u7248\u672c\u3002\u56e0\u6b64\uff0c\u4f60\u8fd8\u5e94\u8be5\u4fdd\u6301\u4e0d\u9009\u4e2d",(0,r.yg)("strong",{parentName:"p"},"\u542f\u7528EON\u7f16\u8bd1\u5668"),"\u9009\u9879\u3002\n:::"),(0,r.yg)("p",null,"\u9009\u62e9Build\u6309\u94ae\u540e\uff0c\u5c06\u521b\u5efa\u4e00\u4e2aZip\u6587\u4ef6\u5e76\u5c06\u5176\u4e0b\u8f7d\u5230\u8ba1\u7b97\u673a\u3002"),(0,r.yg)("p",null,"\u5728\u6211\u4eec\u4f7f\u7528\u4e0b\u8f7d\u7684\u5e93\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u542f\u7528",(0,r.yg)("strong",{parentName:"p"},"ESP NN"),"\u52a0\u901f\u5668\u3002\u4e3a\u6b64\uff0c\u60a8\u53ef\u4ee5\u4ece",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Mjrovai/XIAO-ESP32S3-Sense/blob/main/ESP-NN.zip"},"\u9879\u76eeGitHub"),"\u4e0b\u8f7d\u521d\u6b65\u7248\u672c\uff0c\u89e3\u538b\u5b83\uff0c\u5e76\u5c06\u5176\u66ff\u6362\u4e3a",(0,r.yg)("inlineCode",{parentName:"p"},"src/edge-impulse-sdk/\u79fb\u690d/espressif/ESP-NN"),"\u6587\u4ef6\u5939\u4e0b\u7684ESP NN\u6587\u4ef6\u5939\uff0c\u5728\u60a8\u7684Arduino\u5e93\u6587\u4ef6\u5939\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/10.png",style:{width:800,height:"auto"}})),(0,r.yg)("p",null,"\u5728\u60a8\u7684Arduino IDE\u4e0a\uff0c\u8f6c\u5230Sketch\u9009\u9879\u5361\u5e76\u9009\u62e9\u9009\u9879Add .zip Library\uff0c\u5e76\u9009\u62e9Edge Impulse\u4e0b\u8f7d\u7684.zip\u6587\u4ef6\u3002"),(0,r.yg)("p",null,"\u4f60\u53ef\u4ee5\u5728",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Mjrovai/XIAO-ESP32S3-Sense/tree/main/xiao_esp32s3_microphone_led"},"\u9879\u76ee\u7684GitHub"),"\u4e0a\u627e\u5230\u5b8c\u6574\u7684\u4ee3\u7801\u3002\u5c06\u8349\u56fe\u4e0a\u4f20\u5230\u4f60\u7684\u677f\u4e0a\u5e76\u6d4b\u8bd5\u4e00\u4e9b\u771f\u5b9e\u7684\u63a8\u8bba\u3002"),(0,r.yg)("p",null,":::\u63d0\u793a\n\u5728\u4ee3\u7801\u4e2d\u5bfc\u5165\u7684\u5e93\u9700\u8981\u66f4\u65b0\u4e3a\u5e93\u7684\u540d\u79f0\u3002\u4eae\u8d77\u7684\u903b\u8f91\u4e5f\u9700\u8981\u6839\u636e\u60a8\u5b9e\u9645\u8bad\u7ec3\u7684\u6807\u7b7e\u7684\u987a\u5e8f\u8fdb\u884c\u4fee\u6539\u3002\n:::"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'/* Edge Impulse Arduino examples\n * Copyright (c) 2022 EdgeImpulse Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the "Software"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// If your target is limited in memory remove this macro to save 10K RAM\n#define EIDSP_QUANTIZE_FILTERBANK   0\n\n/*\n ** NOTE: If you run into TFLite arena allocation issue.\n **\n ** This may be due to may dynamic memory fragmentation.\n ** Try defining "-DEI_CLASSIFIER_ALLOCATION_STATIC" in boards.local.txt (create\n ** if it doesn\'t exist) and copy this file to\n ** `<ARDUINO_CORE_INSTALL_PATH>/arduino/hardware/<mbed_core>/<core_version>/`.\n **\n ** See\n ** (https://support.arduino.cc/hc/en-us/articles/360012076960-Where-are-the-installed-cores-located-)\n ** to find where Arduino installs cores on your machine.\n **\n ** If the problem persists then there\'s not enough memory for this model and application.\n */\n\n/* Includes ---------------------------------------------------------------- */\n#include <XIAO-ESP32S3-KWS_inferencing.h>\n\n#include <I2S.h>\n#define SAMPLE_RATE 16000U\n#define SAMPLE_BITS 16\n\n#define LED_BUILT_IN 21 \n\n/** Audio buffers, pointers and selectors */\ntypedef struct {\n    int16_t *buffer;\n    uint8_t buf_ready;\n    uint32_t buf_count;\n    uint32_t n_samples;\n} inference_t;\n\nstatic inference_t inference;\nstatic const uint32_t sample_buffer_size = 2048;\nstatic signed short sampleBuffer[sample_buffer_size];\nstatic bool debug_nn = false; // Set this to true to see e.g. features generated from the raw signal\nstatic bool record_status = true;\n\n/**\n * @brief      Arduino setup function\n */\nvoid setup()\n{\n    // put your setup code here, to run once:\n    Serial.begin(115200);\n    // comment out the below line to cancel the wait for USB connection (needed for native USB)\n    while (!Serial);\n    Serial.println("Edge Impulse Inferencing Demo");\n\n    pinMode(LED_BUILT_IN, OUTPUT); // Set the pin as output\n    digitalWrite(LED_BUILT_IN, HIGH); //Turn off\n    \n    I2S.setAllPins(-1, 42, 41, -1, -1);\n    if (!I2S.begin(PDM_MONO_MODE, SAMPLE_RATE, SAMPLE_BITS)) {\n      Serial.println("Failed to initialize I2S!");\n    while (1) ;\n  }\n    \n    // summary of inferencing settings (from model_metadata.h)\n    ei_printf("Inferencing settings:\\n");\n    ei_printf("\\tInterval: ");\n    ei_printf_float((float)EI_CLASSIFIER_INTERVAL_MS);\n    ei_printf(" ms.\\n");\n    ei_printf("\\tFrame size: %d\\n", EI_CLASSIFIER_DSP_INPUT_FRAME_SIZE);\n    ei_printf("\\tSample length: %d ms.\\n", EI_CLASSIFIER_RAW_SAMPLE_COUNT / 16);\n    ei_printf("\\tNo. of classes: %d\\n", sizeof(ei_classifier_inferencing_categories) / sizeof(ei_classifier_inferencing_categories[0]));\n\n    ei_printf("\\nStarting continious inference in 2 seconds...\\n");\n    ei_sleep(2000);\n\n    if (microphone_inference_start(EI_CLASSIFIER_RAW_SAMPLE_COUNT) == false) {\n        ei_printf("ERR: Could not allocate audio buffer (size %d), this could be due to the window length of your model\\r\\n", EI_CLASSIFIER_RAW_SAMPLE_COUNT);\n        return;\n    }\n\n    ei_printf("Recording...\\n");\n}\n\n/**\n * @brief      Arduino main function. Runs the inferencing loop.\n */\nvoid loop()\n{\n    bool m = microphone_inference_record();\n    if (!m) {\n        ei_printf("ERR: Failed to record audio...\\n");\n        return;\n    }\n\n    signal_t signal;\n    signal.total_length = EI_CLASSIFIER_RAW_SAMPLE_COUNT;\n    signal.get_data = &microphone_audio_signal_get_data;\n    ei_impulse_result_t result = { 0 };\n\n    EI_IMPULSE_ERROR r = run_classifier(&signal, &result, debug_nn);\n    if (r != EI_IMPULSE_OK) {\n        ei_printf("ERR: Failed to run classifier (%d)\\n", r);\n        return;\n    }\n\n    int pred_index = 0;     // Initialize pred_index\n    float pred_value = 0;   // Initialize pred_value\n\n    // print the predictions\n    ei_printf("Predictions ");\n    ei_printf("(DSP: %d ms., Classification: %d ms., Anomaly: %d ms.)",\n        result.timing.dsp, result.timing.classification, result.timing.anomaly);\n    ei_printf(": \\n");\n    for (size_t ix = 0; ix < EI_CLASSIFIER_LABEL_COUNT; ix++) {\n        ei_printf("    %s: ", result.classification[ix].label);\n        ei_printf_float(result.classification[ix].value);\n        ei_printf("\\n");\n\n        if (result.classification[ix].value > pred_value){\n           pred_index = ix;\n           pred_value = result.classification[ix].value;\n      }\n    }\n    // Display inference result\n    if (pred_index == 3){\n      digitalWrite(LED_BUILT_IN, LOW); //Turn on\n    }\n    else{\n      digitalWrite(LED_BUILT_IN, HIGH); //Turn off\n    }\n\n    \n#if EI_CLASSIFIER_HAS_ANOMALY == 1\n    ei_printf("    anomaly score: ");\n    ei_printf_float(result.anomaly);\n    ei_printf("\\n");\n#endif\n}\n\nstatic void audio_inference_callback(uint32_t n_bytes)\n{\n    for(int i = 0; i < n_bytes>>1; i++) {\n        inference.buffer[inference.buf_count++] = sampleBuffer[i];\n\n        if(inference.buf_count >= inference.n_samples) {\n          inference.buf_count = 0;\n          inference.buf_ready = 1;\n        }\n    }\n}\n\nstatic void capture_samples(void* arg) {\n\n  const int32_t i2s_bytes_to_read = (uint32_t)arg;\n  size_t bytes_read = i2s_bytes_to_read;\n\n  while (record_status) {\n\n    /* read data at once from i2s - Modified for XIAO ESP2S3 Sense and I2S.h library */\n    // i2s_read((i2s_port_t)1, (void*)sampleBuffer, i2s_bytes_to_read, &bytes_read, 100);\n    esp_i2s::i2s_read(esp_i2s::I2S_NUM_0, (void*)sampleBuffer, i2s_bytes_to_read, &bytes_read, 100);\n\n    if (bytes_read <= 0) {\n      ei_printf("Error in I2S read : %d", bytes_read);\n    }\n    else {\n        if (bytes_read < i2s_bytes_to_read) {\n        ei_printf("Partial I2S read");\n        }\n\n        // scale the data (otherwise the sound is too quiet)\n        for (int x = 0; x < i2s_bytes_to_read/2; x++) {\n            sampleBuffer[x] = (int16_t)(sampleBuffer[x]) * 8;\n        }\n\n        if (record_status) {\n            audio_inference_callback(i2s_bytes_to_read);\n        }\n        else {\n            break;\n        }\n    }\n  }\n  vTaskDelete(NULL);\n}\n\n/**\n * @brief      Init inferencing struct and setup/start PDM\n *\n * @param[in]  n_samples  The n samples\n *\n * @return     { description_of_the_return_value }\n */\nstatic bool microphone_inference_start(uint32_t n_samples)\n{\n    inference.buffer = (int16_t *)malloc(n_samples * sizeof(int16_t));\n\n    if(inference.buffer == NULL) {\n        return false;\n    }\n\n    inference.buf_count  = 0;\n    inference.n_samples  = n_samples;\n    inference.buf_ready  = 0;\n\n//    if (i2s_init(EI_CLASSIFIER_FREQUENCY)) {\n//        ei_printf("Failed to start I2S!");\n//    }\n\n    ei_sleep(100);\n\n    record_status = true;\n\n    xTaskCreate(capture_samples, "CaptureSamples", 1024 * 32, (void*)sample_buffer_size, 10, NULL);\n\n    return true;\n}\n\n/**\n * @brief      Wait on new data\n *\n * @return     True when finished\n */\nstatic bool microphone_inference_record(void)\n{\n    bool ret = true;\n\n    while (inference.buf_ready == 0) {\n        delay(10);\n    }\n\n    inference.buf_ready = 0;\n    return ret;\n}\n\n/**\n * Get raw audio signal data\n */\nstatic int microphone_audio_signal_get_data(size_t offset, size_t length, float *out_ptr)\n{\n    numpy::int16_to_float(&inference.buffer[offset], out_ptr, length);\n\n    return 0;\n}\n\n/**\n * @brief      Stop PDM and release buffers\n */\nstatic void microphone_inference_end(void)\n{\n    free(sampleBuffer);\n    ei_free(inference.buffer);\n}\n\n#if !defined(EI_CLASSIFIER_SENSOR) || EI_CLASSIFIER_SENSOR != EI_CLASSIFIER_SENSOR_MICROPHONE\n#error "Invalid model for current sensor."\n#endif\n')),(0,r.yg)("p",null,"\u5176\u539f\u7406\u662f\uff0c\u53ea\u8981\u68c0\u6d4b\u5230\u5173\u952e\u5b57",(0,r.yg)("strong",{parentName:"p"},"HELLO"),"\uff0c LED\u5c31\u4f1a\u4eae\u8d77\u3002\u540c\u6837\u7684\uff0c\u9664\u4e86\u6253\u5f00LED\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u6210\u4e3a\u5916\u90e8\u8bbe\u5907\u7684\u201c\u89e6\u53d1\u5668\u201d\uff0c\u5c31\u50cf\u6211\u4eec\u5728\u4ecb\u7ecd\u4e2d\u770b\u5230\u7684\u90a3\u6837\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/xiaoesp32s3_kws/11.png",style:{width:700,height:"auto"}})),(0,r.yg)("h2",{id:"\u7279\u522b\u611f\u8c22"},"\u7279\u522b\u611f\u8c22"),(0,r.yg)("p",null,"\u7279\u522b\u611f\u8c22",(0,r.yg)("strong",{parentName:"p"},(0,r.yg)("a",{parentName:"strong",href:"https://mjrobot.org/"},"MJRoBot (Marcelo Rovai)")),")\u5173\u4e8eXIAO ESP32S3 Sense access to Edge Impulse\u7684\u6559\u7a0b\u5185\u5bb9\u3002\u539f\u6587\u975e\u5e38\u8be6\u7ec6\uff0c\u5305\u542b\u4e86\u5f88\u591a\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u77e5\u8bc6\u3002"),(0,r.yg)("p",null,"\u5982\u679c\u4f60\u60f3\u9605\u8bfb\u8fd9\u7bc7\u6587\u7ae0\u7684\u539f\u59cb\u5185\u5bb9\uff0c\u4f60\u53ef\u4ee5\u76f4\u63a5\u5411\u4e0b\u6eda\u52a8\u5230\u539f\u59cb\u6587\u7ae0\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://www.hackster.io/mjrobot/tinyml-made-easy-keyword-spotting-kws-5fa6e7#toc-capturing--offline--audio-data-with-the-xiao-esp32s3-sense-5"},"TinyML\u7b80\u5316:\u5173\u952e\u8bcd\u8bc6\u522b(KWS)"))),(0,r.yg)("p",null,"MJRoBot\u8fd8\u6709\u5f88\u591a\u5173\u4e8eXIAO ESP32S3\u7684\u6709\u8da3\u9879\u76ee\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://www.hackster.io/mjrobot/exploring-machine-learning-with-the-new-xiao-esp32s3-6463e5"},"\u4f7f\u7528\u65b0\u7684XIAO ESP32S3\u63a2\u7d22\u673a\u5668\u5b66\u4e60"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://www.hackster.io/mjrobot/tinyml-made-easy-image-classification-cb42ae"},"TinyML\u7b80\u5316:\u56fe\u50cf\u5206\u7c7b")))),(0,r.yg)("h2",{id:"\u8d44\u6e90"},"\u8d44\u6e90"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"[GITHUB]")," ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/Mjrovai/XIAO-ESP32S3-Sense"},"GITHUB\u9879\u76ee"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"[\u8fb9\u7f18\u8109\u51b2]")," ",(0,r.yg)("a",{parentName:"p",href:"https://studio.edgeimpulse.com/public/256022/latest"},"\u8fb9\u7f18\u8109\u51b2\u6f14\u793a")))),(0,r.yg)("h2",{id:"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba"},"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba"),(0,r.yg)("p",null,"\u611f\u8c22\u60a8\u9009\u62e9\u6211\u4eec\u7684\u4ea7\u54c1\uff01\u6211\u4eec\u5728\u8fd9\u91cc\u4e3a\u60a8\u63d0\u4f9b\u4e0d\u540c\u7684\u652f\u6301\uff0c\u4ee5\u786e\u4fdd\u60a8\u5728\u4f7f\u7528\u6211\u4eec\u4ea7\u54c1\u7684\u8fc7\u7a0b\u4e2d\u5c3d\u53ef\u80fd\u987a\u5229\u3002\u6211\u4eec\u63d0\u4f9b\u591a\u79cd\u6c9f\u901a\u6e20\u9053\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u504f\u597d\u548c\u9700\u6c42\u3002"),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}_.isMDXComponent=!0}}]);