"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4844],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>h});var s=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,i=function(e,t){if(null==e)return{};var n,s,i={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=s.createContext({}),l=function(e){var t=s.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=l(e.components);return s.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=l(n),m=i,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||a;return n?s.createElement(h,r(r({ref:t},d),{},{components:n})):s.createElement(h,r({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,r=new Array(a);r[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:i,r[1]=o;for(var l=2;l<a;l++)r[l]=n[l];return s.createElement.apply(null,r)}return s.createElement.apply(null,n)}m.displayName="MDXCreateElement"},86107:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=n(58168),i=(n(96540),n(15680));const a={description:"Extend Home Assistant with LoRaWAN device (XIAO-ESP32-S3)",title:"Extend Home Assistant with LoRaWAN device (XIAO-ESP32-S3)",keywords:["LoRaWAN","Home Assistant","XIAO ESP32"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/ha_xiao_esp32",last_update:{date:"1/10/2023",author:"Jessie"}},r=void 0,o={unversionedId:"Topics/Home_Assistant/Home_Assistant_Tutorials/Extend_Home_Assistant_with_LoRaWAN_device",id:"Topics/Home_Assistant/Home_Assistant_Tutorials/Extend_Home_Assistant_with_LoRaWAN_device",title:"Extend Home Assistant with LoRaWAN device (XIAO-ESP32-S3)",description:"Extend Home Assistant with LoRaWAN device (XIAO-ESP32-S3)",source:"@site/docs/Topics/Home_Assistant/Home_Assistant_Tutorials/Extend_Home_Assistant_with_LoRaWAN_device.md",sourceDirName:"Topics/Home_Assistant/Home_Assistant_Tutorials",slug:"/ha_xiao_esp32",permalink:"/ha_xiao_esp32",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Topics/Home_Assistant/Home_Assistant_Tutorials/Extend_Home_Assistant_with_LoRaWAN_device.md",tags:[],version:"current",lastUpdatedBy:"Jessie",lastUpdatedAt:1673308800,formattedLastUpdatedAt:"Jan 10, 2023",frontMatter:{description:"Extend Home Assistant with LoRaWAN device (XIAO-ESP32-S3)",title:"Extend Home Assistant with LoRaWAN device (XIAO-ESP32-S3)",keywords:["LoRaWAN","Home Assistant","XIAO ESP32"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/ha_xiao_esp32",last_update:{date:"1/10/2023",author:"Jessie"}},sidebar:"ProductSidebar",previous:{title:"SenseCAP Integration for Home Assistant",permalink:"/home_assistant_sensecap"},next:{title:"SenseCraft-HomeAssistant User Manual",permalink:"/sensecraft_homeassistant_userguide"}},c={},l=[{value:"Introduction",id:"introduction",level:3},{value:"Add LoRaWAN Sensors to Home Assistant",id:"add-lorawan-sensors-to-home-assistant",level:3},{value:"Arduino Program Code",id:"arduino-program-code",level:4},{value:"ChirpStack Configuration",id:"chirpstack-configuration",level:4},{value:"Home Assistant Configuration",id:"home-assistant-configuration",level:4},{value:"Discussion",id:"discussion",level:3},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],d={toc:l},p="wrapper";function u(e){let{components:t,...n}=e;return(0,i.yg)(p,(0,s.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Home_Assistant/ha-xiao1.png",alt:"pir",width:1e3,height:"auto"})),(0,i.yg)("h3",{id:"introduction"},"Introduction"),(0,i.yg)("p",null,"Home Assistant is an open source smart home platform system, and user can easily connect their own Internet of Things devices to the system for unified management. However, the main special point of the Home Assistant is not just to realize the view of various sensing devices, but to realize the automatic linkage of cross-platform device, only such a smart home platform is enough to have vitality."),(0,i.yg)("h3",{id:"add-lorawan-sensors-to-home-assistant"},"Add LoRaWAN Sensors to Home Assistant"),(0,i.yg)("h4",{id:"arduino-program-code"},"Arduino Program Code"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Hardware"))),(0,i.yg)("p",null,"As shown below, install XIAO onto the expansion board while connecting the E5 module to the GND, 3V3, SDA-4 and SL-5 pins of the board"),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Home_Assistant/ha-xiao-hardware.png",alt:"pir",width:700,height:"auto"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Software"))),(0,i.yg)("p",null,"Make certain modifications to the following code, such as modifying the AppKEY and other essential information of LoRa communication module, so as to be able to access LoRaWAN, and then modify the data we want to send by command: AT+CMSGHEX. For example, I send data by simulating temp and humi here"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'# include <Arduino.h>\n\nstatic char recv_buf[512];\nstatic bool is_exist = false;\nstatic bool is_join = false;\nstatic int led = 0;\n\nint temp = 25;\nint humi = 56;\n\n\nstatic int at_send_check_response(char *p_ack, int timeout_ms, char*p_cmd, ...)\n{\n    int ch;\n    int num = 0;\n    int index = 0;\n    int startMillis = 0;\n    va_list args;\n    memset(recv_buf, 0, sizeof(recv_buf));\n    va_start(args, p_cmd);\n    Serial1.printf(p_cmd, args);\n    Serial.printf(p_cmd, args);\n    va_end(args);\n    delay(200);\n    startMillis = millis();\n\n    if (p_ack == NULL)\n    {\n        return 0;\n    }\n\n    do\n    {\n        while (Serial1.available() > 0)\n        {\n            ch = Serial1.read();\n            recv_buf[index++] = ch;\n            Serial.print((char)ch);\n            delay(2);\n        }\n\n        if (strstr(recv_buf, p_ack) != NULL)\n        {\n            return 1;\n        }\n\n    } while (millis() - startMillis < timeout_ms);\n    return 0;\n}\n\nstatic void recv_prase(char *p_msg)\n{\n    if (p_msg == NULL)\n    {\n        return;\n    }\nchar*p_start = NULL;\n    int data = 0;\n    int rssi = 0;\n    int snr = 0;\n\n    p_start = strstr(p_msg, "RX");\n    if (p_start && (1 == sscanf(p_start, "RX: \\"%d\\"\\r\\n", &data)))\n    {\n        Serial.println(data);\n        Serial.print("led :");\n        led = !!data;\n        Serial.print(led);\n        if (led)\n        {\n            digitalWrite(LED_BUILTIN, LOW);\n        }\n        else\n        {\n            digitalWrite(LED_BUILTIN, HIGH);\n        }\n    }\n\n    p_start = strstr(p_msg, "RSSI");\n    if (p_start && (1 == sscanf(p_start, "RSSI %d,", &rssi)))\n    {\n        Serial.print("rssi:");\n        Serial.print(rssi);\n    }\n    p_start = strstr(p_msg, "SNR");\n    if (p_start && (1 == sscanf(p_start, "SNR %d", &snr)))\n    {\n        Serial.print("snr :");\n        Serial.print(snr);\n    }\n}\n\nvoid setup() {\n  Serial.begin(115200); // Initialize serial communication\n  Serial1.begin(9600, SERIAL_8N1, 44, 43);\n\n  if (at_send_check_response("+AT: OK", 100, "AT\\r\\n"))\n{\n    is_exist = true;\n    \n    // Send AT+ID Command\n    if (at_send_check_response("+ID:", 1000, "AT+ID\\r\\n")) {\n        // Command sent successfully and response received\n        // The returned data can be found in recv_buf\n        Serial.print("Received ID data: ");\n        Serial.println(recv_buf);\n    } else {\n        // The command failed to be sent or no response was received.\n        Serial.println("Failed to get ID data.");\n    }\n\n    // Other Commands\n    at_send_check_response("+MODE: LWOTAA", 1000, "AT+MODE=LWOTAA\\r\\n");\n    at_send_check_response("+DR: EU868", 1000, "AT+DR=EU868\\r\\n");\n    at_send_check_response("+CH: NUM", 1000, "AT+CH=NUM,0-2\\r\\n");\n    at_send_check_response("+KEY: APPKEY", 1000, "AT+KEY=APPKEY,\\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\\"\\r\\n");\n    at_send_check_response("+CLASS: C", 1000, "AT+CLASS=A\\r\\n");\n    at_send_check_response("+PORT: 8", 1000, "AT+PORT=8\\r\\n");\n    \n    delay(200);\n    is_join = true;\n}\nelse\n{\n    is_exist = false;\n    Serial.print("No E5 module found.\\r\\n");\n}\n}\n\nvoid loop() {\n    if (is_exist)\n        {\n            int ret = 0;\n            if (is_join)\n            {\n\n                ret = at_send_check_response("+JOIN: Network joined", 12000, "AT+JOIN\\r\\n");\n                if (ret)\n                {\n                    is_join = false;\n                }\n                else\n                {\n                    at_send_check_response("+ID: AppEui", 1000, "AT+ID\\r\\n");\n                    Serial.print("JOIN failed!\\r\\n\\r\\n");\n                    delay(5000);\n                }\n            }\n            else\n            {\n                char cmd[128];\n                sprintf(cmd, "AT+CMSGHEX=\\"%04X%04X\\"\\r\\n", (int)temp, (int)humi);\n                ret = at_send_check_response("Done", 5000, cmd);\n                if (ret)\n                {\n                    recv_prase(recv_buf);\n                }\n                else\n                {\n                    Serial.print("Send failed!\\r\\n\\r\\n");\n                }\n                delay(30000);\n            }\n        }\n        else\n        {\n            delay(1000);\n        }\n    temp++;\n    humi++;\n}\n')),(0,i.yg)("h4",{id:"chirpstack-configuration"},"ChirpStack Configuration"),(0,i.yg)("p",null,"Create a new Device profiles in ChirpStack, and fill in the Payload codec with the following code:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"function decodeUplink(input, port) {\n    var decoded = {\n        temp: 0,\n        humi: 0\n    };\n    var bytes = input['bytes']\n    bytes = bytes2HexString(bytes)\n  \n    decoded.temp = parseInt(bytes.slice(0, 4), 16);\n    decoded.humi = parseInt(bytes.slice(-4), 16);\n\n    let messages = [\n        {\n            type: 'temp',\n            measurementId: 4097,\n            measurementValue: decoded.temp\n        },\n        {\n            type: 'humi',\n            measurementId: 4098,\n            measurementValue: decoded.humi\n        }\n    ];\n\n    var result = {};\n    result.messages = messages;\n    return { data: result };\n}\n  \n  \n  /**\n   * Convert to an 8-digit binary number with 0s in front of the number\n   * @param arr\n   * @returns {string}\n   */\n  function toBinary (arr) {\n    let binaryData = arr.map((item) => {\n      let data = parseInt(item, 16)\n        .toString(2)\n      let dataLength = data.length\n      if (data.length !== 8) {\n        for (let i = 0; i < 8 - dataLength; i++) {\n          data = `0` + data\n        }\n      }\n      return data\n    })\n    let ret = binaryData.toString()\n      .replace(/,/g, '')\n    return ret\n  }\n  \n  \n  function bytes2HexString (arrBytes) {\n    var str = ''\n    for (var i = 0; i < arrBytes.length; i++) {\n      var tmp\n      var num = arrBytes[i]\n      if (num < 0) {\n        tmp = (255 + num + 1).toString(16)\n      } else {\n        tmp = num.toString(16)\n      }\n      if (tmp.length === 1) {\n        tmp = '0' + tmp\n      }\n      str += tmp\n    }\n    return str\n  }\n")),(0,i.yg)("p",null,"Then click ",(0,i.yg)("inlineCode",{parentName:"p"},"Submit"),"."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Home_Assistant/ha-xiao3.png",alt:"pir",width:800,height:"auto"})),(0,i.yg)("p",null,"As shown in the following figure, the relevant data is received, indicating that the data is successfully sent"),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Home_Assistant/ha-xiao4.png",alt:"pir",width:700,height:"auto"})),(0,i.yg)("h4",{id:"home-assistant-configuration"},"Home Assistant Configuration"),(0,i.yg)("p",null,"Complete the installation of the Home Assistant intergration with the following tutorial:",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/home_assistant_sensecap/"},"SenseCAP Integration for Home Assistant"),". Wait for a few minutes, we can see that the device XIAO-ESP32-S3 has been recognized, and there are two entities in this device, namely Temperature and Humidity, which are the two data we have sent just now. And have been identified as the corresponding sensor entities in the Home Assistant."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Home_Assistant/ha-xiao6.png",alt:"pir",width:700,height:"auto"})),(0,i.yg)("p",null,"After adding the device to the overview, we have completed all the process of adding XIAO to the Home Assistant."),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Home_Assistant/ha-xiao5.png",alt:"pir",width:700,height:"auto"})),(0,i.yg)("h3",{id:"discussion"},"Discussion"),(0,i.yg)("p",null,"Home Assistant is a very powerful smart home open source system, we can connect a variety of devices to this platform, the smart home ecology becomes larger and larger, you can imagine using XIAO can control Apple HomePod? Through this tutorial, we have connected XIAO to the Home Assistant, and this is just the beginning. Similarly, we can connect the key sensor to the Home Assistant to achieve more interesting functions, and the whole smart home ecology will become bigger and bigger."),(0,i.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,i.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,i.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,i.yg)("div",{class:"button_tech_support_container"},(0,i.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,i.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}u.isMDXComponent=!0}}]);