"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[43816],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>S});var i=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),o=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=o(e.components);return i.createElement(c.Provider,{value:t},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),g=o(n),u=r,S=g["".concat(c,".").concat(u)]||g[u]||p[u]||a;return n?i.createElement(S,l(l({ref:t},d),{},{components:n})):i.createElement(S,l({ref:t},d))}));function S(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[g]="string"==typeof e?e:r,l[1]=s;for(var o=2;o<a;o++)l[o]=n[o];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},58962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>o});var i=n(58168),r=(n(96540),n(15680));const a={description:"Bluetooth usage with Seeed Studio XIAO ESP32S3.",title:"\u84dd\u7259\u4f7f\u7528",keywords:["esp32s3","xiao","ble","bluetooth"],image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",last_update:{date:"11/09/2023",author:"Chen Lei"}},l="\u4f7f\u7528 XIAO ESP32S3\uff08Sense\uff09\u7684\u84dd\u7259\u529f\u80fd",s={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/CN_XIAO_ESP32S3_Bluetooth_Usage",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/CN_XIAO_ESP32S3_Bluetooth_Usage",title:"\u84dd\u7259\u4f7f\u7528",description:"Bluetooth usage with Seeed Studio XIAO ESP32S3.",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/CN_XIAO_ESP32S3_Bluetooth_Usage.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3",slug:"/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/CN_XIAO_ESP32S3_Bluetooth_Usage",permalink:"/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/CN_XIAO_ESP32S3_Bluetooth_Usage",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_ESP32S3/CN_XIAO_ESP32S3_Bluetooth_Usage.md",tags:[],version:"current",lastUpdatedBy:"Chen Lei",lastUpdatedAt:1699488e3,formattedLastUpdatedAt:"Nov 9, 2023",frontMatter:{description:"Bluetooth usage with Seeed Studio XIAO ESP32S3.",title:"\u84dd\u7259\u4f7f\u7528",keywords:["esp32s3","xiao","ble","bluetooth"],image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",last_update:{date:"11/09/2023",author:"Chen Lei"}},sidebar:"CNSidebar",previous:{title:"Wi-Fi \u4f7f\u7528",permalink:"/cn/xiao_esp32s3_wifi_usage"},next:{title:"\u6444\u50cf\u5934\u4f7f\u7528",permalink:"/cn/xiao_esp32s3_camera_usage"}},c={},o=[{value:"\u5165\u95e8",id:"\u5165\u95e8",level:2},{value:"\u5929\u7ebf\u7684\u5b89\u88c5",id:"\u5929\u7ebf\u7684\u5b89\u88c5",level:3},{value:"\u84dd\u7259\u4f4e\u80fd\u8017\uff08BLE\uff09\u4f7f\u7528",id:"\u84dd\u7259\u4f4e\u80fd\u8017ble\u4f7f\u7528",level:2},{value:"\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5",id:"\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5",level:3},{value:"\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef",id:"\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef",level:4},{value:"\u5c5e\u6027",id:"\u5c5e\u6027",level:4},{value:"GATT\u534f\u8bae",id:"gatt\u534f\u8bae",level:4},{value:"BLE\u7279\u6027",id:"ble\u7279\u6027",level:4},{value:"UUID",id:"uuid",level:4},{value:"BLE\u626b\u63cf\u4eea",id:"ble\u626b\u63cf\u4eea",level:3},{value:"\u7a0b\u5e8f\u6ce8\u91ca",id:"\u7a0b\u5e8f\u6ce8\u91ca",level:4},{value:"BLE\u670d\u52a1\u5668/\u5ba2\u6237\u7aef",id:"ble\u670d\u52a1\u5668\u5ba2\u6237\u7aef",level:3},{value:"\u7a0b\u5e8f\u6ce8\u91ca",id:"\u7a0b\u5e8f\u6ce8\u91ca-1",level:4},{value:"BLE\u4f20\u611f\u5668\u6570\u636e\u4ea4\u6362",id:"ble\u4f20\u611f\u5668\u6570\u636e\u4ea4\u6362",level:3},{value:"\u7a0b\u5e8f\u6ce8\u91ca",id:"\u7a0b\u5e8f\u6ce8\u91ca-2",level:4},{value:"\u6545\u969c\u6392\u9664",id:"\u6545\u969c\u6392\u9664",level:2},{value:"Q1: XIAO ESP32S3\u793a\u4f8b\u4e2d\u6ca1\u6709BleoutSerial\uff1f",id:"q1-xiao-esp32s3\u793a\u4f8b\u4e2d\u6ca1\u6709bleoutserial",level:3},{value:"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba",id:"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba",level:2}],d={toc:o},g="wrapper";function p(e){let{components:t,...n}=e;return(0,r.yg)(g,(0,i.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"\u4f7f\u7528-xiao-esp32s3sense\u7684\u84dd\u7259\u529f\u80fd"},"\u4f7f\u7528 XIAO ESP32S3\uff08Sense\uff09\u7684\u84dd\u7259\u529f\u80fd"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/64.jpg",style:{width:700,height:"auto"}})),(0,r.yg)("p",null,"Seeed Studio XIAO ESP32S3\u662f\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684\u5f00\u53d1\u677f\uff0c\u652f\u6301\u84dd\u72595\u3001BLE\u548cMesh\u7f51\u7edc\uff0c\u662f\u9700\u8981\u65e0\u7ebf\u8fde\u63a5\u7684\u5404\u79cd\u7269\u8054\u7f51\u5e94\u7528\u7684\u7406\u60f3\u9009\u62e9\u3002\u51ed\u501f\u5176\u5353\u8d8a\u7684\u5c04\u9891\u6027\u80fd\uff0cXIAO ESP32S3\u53ef\u4ee5\u5728\u5404\u79cd\u8ddd\u79bb\u4e0a\u63d0\u4f9b\u53ef\u9760\u548c\u9ad8\u901f\u7684\u65e0\u7ebf\u901a\u4fe1\uff0c\u4f7f\u5176\u6210\u4e3a\u77ed\u7a0b\u548c\u8fdc\u7a0b\u65e0\u7ebf\u5e94\u7528\u7684\u901a\u7528\u89e3\u51b3\u65b9\u6848\u3002\u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u91cd\u70b9\u4ecb\u7ecdXIAO ESP32S3\u84dd\u7259\u529f\u80fd\u7684\u57fa\u672c\u529f\u80fd\uff0c\u4f8b\u5982\u5982\u4f55\u626b\u63cf\u9644\u8fd1\u7684\u84dd\u7259\u8bbe\u5907\uff0c\u5982\u4f55\u5efa\u7acb\u84dd\u7259\u8fde\u63a5\uff0c\u4ee5\u53ca\u5982\u4f55\u901a\u8fc7\u84dd\u7259\u8fde\u63a5\u53d1\u9001\u548c\u63a5\u6536\u6570\u636e\u3002"),(0,r.yg)("div",{class:"table-center"},(0,r.yg)("table",{align:"center"},(0,r.yg)("tr",null,(0,r.yg)("th",null,"Seeed Studio XIAO ESP32S3"),(0,r.yg)("th",null,"Seeed Studio XIAO ESP32S3 Sense")),(0,r.yg)("tr",null,(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/xiaoesp32s3.jpg",style:{width:250,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/xiaoesp32s3sense.jpg",style:{width:250,height:"auto"}})))),(0,r.yg)("tr",null,(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/XIAO-ESP32S3-p-5627.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," \u70b9\u51fb\u8d2d\u4e70 \ud83d\uddb1\ufe0f")))))),(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/XIAO-ESP32S3-Sense-p-5639.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," \u70b9\u51fb\u8d2d\u4e70 \ud83d\uddb1\ufe0f"))))))))),(0,r.yg)("h2",{id:"\u5165\u95e8"},"\u5165\u95e8"),(0,r.yg)("h3",{id:"\u5929\u7ebf\u7684\u5b89\u88c5"},"\u5929\u7ebf\u7684\u5b89\u88c5"),(0,r.yg)("p",null,"\u5728XIAO ESP32S3\u6b63\u9762\u7684\u5de6\u4e0b\u89d2\uff0c\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u201cWiFi/BT\u5929\u7ebf\u8fde\u63a5\u5668\u201d\u3002\u4e3a\u4e86\u83b7\u5f97\u66f4\u597d\u7684WiFi/\u84dd\u7259\u4fe1\u53f7\uff0c\u60a8\u9700\u8981\u53d6\u51fa\u5305\u88c5\u5185\u7684\u5929\u7ebf\u5e76\u5c06\u5176\u5b89\u88c5\u5728\u8fde\u63a5\u5668\u4e0a\u3002"),(0,r.yg)("p",null,"\u5929\u7ebf\u7684\u5b89\u88c5\u6709\u4e00\u4e2a\u5c0f\u6280\u5de7\uff0c\u5982\u679c\u4f60\u76f4\u63a5\u7528\u529b\u6309\u538b\uff0c\u4f60\u4f1a\u53d1\u73b0\u5f88\u96be\u6309\u538b\uff0c\u4f60\u7684\u624b\u6307\u4f1a\u53d7\u4f24\uff01\u5b89\u88c5\u5929\u7ebf\u7684\u6b63\u786e\u65b9\u6cd5\u662f\u5148\u5c06\u5929\u7ebf\u8fde\u63a5\u5668\u7684\u4e00\u4fa7\u653e\u5165\u8fde\u63a5\u5668\u5757\u4e2d\uff0c\u7136\u540e\u5728\u53e6\u4e00\u4fa7\u5411\u4e0b\u538b\u4e00\u70b9\uff0c\u5929\u7ebf\u5c31\u5b89\u88c5\u597d\u4e86\u3002"),(0,r.yg)("p",null,"\u62c6\u4e0b\u5929\u7ebf\u4e5f\u662f\u8fd9\u6837\uff0c\u4e0d\u8981\u7528\u86ee\u529b\u76f4\u63a5\u62c9\u5929\u7ebf\uff0c\u4e00\u4fa7\u7528\u529b\u63d0\u8d77\uff0c\u5929\u7ebf\u5f88\u5bb9\u6613\u53d6\u4e0b\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/5.gif",style:{width:500,height:"auto"}})),(0,r.yg)("p",null,":::\u6ce8\u91ca\n\u5982\u679c\u60a8\u6ca1\u6709\u5b89\u88c5\u5929\u7ebf\uff0c\u5219\u53ef\u80fd\u65e0\u6cd5\u4f7f\u7528\u84dd\u7259\u529f\u80fd\u3002"),(0,r.yg)("p",null,"\u5982\u679c\u4f60\u6709\u6761\u4ef6\uff0c\u6211\u5efa\u8bae\u4f60\u4f7f\u7528\u5927\u5929\u7ebf\uff0c\u8fd9\u6837\u4f1a\u5f97\u5230\u66f4\u597d\u7684\u4f53\u9a8c\u3002\n:::"),(0,r.yg)("h2",{id:"\u84dd\u7259\u4f4e\u80fd\u8017ble\u4f7f\u7528"},"\u84dd\u7259\u4f4e\u80fd\u8017\uff08BLE\uff09\u4f7f\u7528"),(0,r.yg)("p",null,"\u84dd\u7259\u4f4e\u80fd\u8017\uff0c\u7b80\u79f0BLE\uff0c\u662f\u84dd\u7259\u7684\u4e00\u79cd\u8282\u80fd\u53d8\u4f53\u3002BLE\u7684\u4e3b\u8981\u5e94\u7528\u662f\u77ed\u8ddd\u79bb\u4f20\u8f93\u5c11\u91cf\u6570\u636e\uff08\u4f4e\u5e26\u5bbd\uff09\u3002\u4e0e\u59cb\u7ec8\u6253\u5f00\u7684\u84dd\u7259\u4e0d\u540c\uff0cBLE\u59cb\u7ec8\u5904\u4e8e\u7761\u7720\u6a21\u5f0f\uff0c\u9664\u975e\u542f\u52a8\u8fde\u63a5\u3002"),(0,r.yg)("p",null,"\u7531\u4e8e\u5176\u7279\u6027\uff0cBLE\u9002\u7528\u4e8e\u9700\u8981\u5b9a\u671f\u4ea4\u6362\u786c\u5e01\u5355\u5143\u4e0a\u8fd0\u884c\u7684\u5c11\u91cf\u6570\u636e\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0cBLE\u5728\u533b\u7597\u4fdd\u5065\u3001\u5065\u8eab\u3001\u8ddf\u8e2a\u3001\u4fe1\u6807\u3001\u5b89\u5168\u548c\u5bb6\u5ead\u81ea\u52a8\u5316\u884c\u4e1a\u975e\u5e38\u6709\u7528\u3002"),(0,r.yg)("p",null,"\u8fd9\u4f7f\u5f97\u5b83\u6d88\u8017\u7684\u529f\u7387\u975e\u5e38\u4f4e\u3002BLE\u7684\u529f\u8017\u5927\u7ea6\u662f\u84dd\u7259\u7684100\u500d\uff08\u5177\u4f53\u53d6\u51b3\u4e8e\u4f7f\u7528\u60c5\u51b5\uff09\u3002"),(0,r.yg)("p",null,"\u5173\u4e8eXIAO ESP32S3\u7684BLE\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u5728\u4ee5\u4e0b\u56db\u4e2a\u90e8\u5206\u4ecb\u7ecd\u5b83\u7684\u4f7f\u7528\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#some-fundamental-concepts"},"\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5")," -- \u6211\u4eec\u5c06\u9996\u5148\u4e86\u89e3BLE\u4e2d\u53ef\u80fd\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e9b\u6982\u5ff5\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u7406\u89e3BLE\u7a0b\u5e8f\u7684\u6267\u884c\u8fc7\u7a0b\u548c\u601d\u7ef4\u3002"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ble-scanner"},"BLE\u626b\u63cf\u4eea")," -- \u672c\u8282\u5c06\u4ecb\u7ecd\u5982\u4f55\u641c\u7d22\u9644\u8fd1\u7684\u84dd\u7259\u8bbe\u5907\u5e76\u5c06\u5176\u6253\u5370\u5230\u4e32\u884c\u76d1\u89c6\u5668\u4e2d\u3002"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ble-serverclient"},"BLE\u670d\u52a1\u5668/\u5ba2\u6237\u7aef")," -- \u672c\u8282\u5c06\u89e3\u91ca\u5982\u4f55\u4f7f\u7528XIAO ESP32S3\u4f5c\u4e3a\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u6765\u53d1\u9001\u548c\u63a5\u6536\u6307\u5b9a\u7684\u6570\u636e\u6d88\u606f\u3002\u5b83\u8fd8\u5c06\u7528\u4e8e\u4ece\u624b\u673a\u63a5\u6536\u6216\u53d1\u9001\u4fe1\u606f\u7ed9Xiao\u3002"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"#ble-sensor-data-exchange"},"BLE\u4f20\u611f\u5668\u6570\u636e\u4ea4\u6362")," -- \u8fd9\u662f\u5b8c\u6574\u6559\u7a0b\u7684\u6700\u540e\u4e00\u8282\uff0c\u6211\u4eec\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f20\u611f\u5668\u793a\u4f8b\u6765\u89e3\u91ca\u5982\u4f55\u901a\u8fc7BLE\u53d1\u9001\u4f20\u611f\u5668\u6570\u636e\u3002")),(0,r.yg)("h3",{id:"\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5"},"\u4e00\u4e9b\u57fa\u672c\u6982\u5ff5"),(0,r.yg)("h4",{id:"\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef"},"\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef"),(0,r.yg)("p",null,"\u5bf9\u4e8e\u84dd\u7259\u4f4e\u80fd\u8017\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8bbe\u5907\uff1a\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\u3002XIAO ESP32S3\u65e2\u53ef\u4ee5\u5145\u5f53\u5ba2\u6237\u7aef\uff0c\u4e5f\u53ef\u4ee5\u5145\u5f53\u670d\u52a1\u5668\u3002"),(0,r.yg)("p",null,"\u670d\u52a1\u5668\u5ba3\u4f20\u5b83\u7684\u5b58\u5728\uff0c\u56e0\u6b64\u5176\u4ed6\u8bbe\u5907\u53ef\u4ee5\u627e\u5230\u5b83\uff0c\u5e76\u5305\u542b\u5ba2\u6237\u7aef\u53ef\u4ee5\u8bfb\u53d6\u7684\u6570\u636e\u3002\u5ba2\u6237\u7aef\u626b\u63cf\u9644\u8fd1\u7684\u8bbe\u5907\uff0c\u5f53\u5b83\u627e\u5230\u8981\u67e5\u627e\u7684\u670d\u52a1\u5668\u65f6\uff0c\u5b83\u4f1a\u5efa\u7acb\u8fde\u63a5\u5e76\u4fa6\u542c\u4f20\u5165\u7684\u6570\u636e\u3002\u8fd9\u79f0\u4e3a\u70b9\u5bf9\u70b9\u901a\u4fe1\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/49.png",style:{width:800,height:"auto"}})),(0,r.yg)("h4",{id:"\u5c5e\u6027"},"\u5c5e\u6027"),(0,r.yg)("p",null,"\u5c5e\u6027\u5b9e\u9645\u4e0a\u662f\u4e00\u6bb5\u6570\u636e\u3002\u6bcf\u4e2a\u84dd\u7259\u8bbe\u5907\u90fd\u7528\u6765\u63d0\u4f9b\u670d\u52a1\uff0c\u670d\u52a1\u662f\u4e00\u4e2a\u6570\u636e\u96c6\u5408\uff0c\u96c6\u5408\u53ef\u4ee5\u79f0\u4e3a\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u90fd\u662f\u4e00\u4e2a\u5c5e\u6027\uff0c\u6240\u4ee5\u5728\u8fd9\u91cc\u6211\u5c06\u5c5e\u6027\u8f6c\u6362\u4e3a\u6570\u636e\u6761\u76ee\u3002\u60a8\u53ef\u4ee5\u5c06\u84dd\u7259\u8bbe\u5907\u60f3\u8c61\u6210\u4e00\u4e2a\u8868\uff0c\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u90fd\u662f\u4e00\u4e2a\u5c5e\u6027\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/52.png",style:{width:600,height:"auto"}})),(0,r.yg)("h4",{id:"gatt\u534f\u8bae"},"GATT\u534f\u8bae"),(0,r.yg)("p",null,"\u5f53\u4e24\u4e2a\u84dd\u7259\u8bbe\u5907\u5efa\u7acb\u8fde\u63a5\u65f6\uff0c\u5b83\u4eec\u9700\u8981\u4e00\u4e2a\u534f\u8bae\u6765\u786e\u5b9a\u5982\u4f55\u901a\u4fe1\u3002GATT\uff08Generic Attribute Profile\uff0c\u901a\u7528\u5c5e\u6027\u914d\u7f6e\u6587\u4ef6\uff09\u662f\u4e00\u79cd\u5b9a\u4e49\u5982\u4f55\u5728\u84dd\u7259\u8bbe\u5907\u4e4b\u95f4\u4f20\u8f93\u6570\u636e\u7684\u534f\u8bae\u3002"),(0,r.yg)("p",null,"\u5728GATT\u534f\u8bae\u4e2d\uff0c\u8bbe\u5907\u7684\u529f\u80fd\u548c\u5c5e\u6027\u88ab\u7ec4\u7ec7\u6210\u79f0\u4e3a\u670d\u52a1\u3001\u7279\u6027\u548c\u63cf\u8ff0\u7b26\u7684\u7ed3\u6784\u3002\u670d\u52a1\u8868\u793a\u7531\u8bbe\u5907\u63d0\u4f9b\u7684\u4e00\u7ec4\u76f8\u5173\u529f\u80fd\u548c\u7279\u5f81\u3002\u6bcf\u4e2a\u670d\u52a1\u53ef\u4ee5\u5305\u62ec\u591a\u4e2a\u7279\u5f81\uff0c\u8fd9\u4e9b\u7279\u5f81\u5b9a\u4e49\u4e86\u670d\u52a1\u7684\u7279\u5b9a\u5c5e\u6027\u6216\u884c\u4e3a\uff0c\u4f8b\u5982\u4f20\u611f\u5668\u6570\u636e\u6216\u63a7\u5236\u547d\u4ee4\u3002\u6bcf\u4e2a\u7279\u5f81\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u7b26\u548c\u4e00\u4e2a\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u6216\u5199\u5165\u6765\u8fdb\u884c\u901a\u4fe1\u3002\u63cf\u8ff0\u7b26\u7528\u4e8e\u63cf\u8ff0\u7279\u5f81\u7684\u5143\u6570\u636e\uff0c\u5982\u7279\u5f81\u503c\u7684\u683c\u5f0f\u548c\u8bbf\u95ee\u6743\u9650\u3002"),(0,r.yg)("p",null,"\u901a\u8fc7\u4f7f\u7528GATT\u534f\u8bae\uff0c\u84dd\u7259\u8bbe\u5907\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5e94\u7528\u573a\u666f\u4e2d\u8fdb\u884c\u901a\u4fe1\uff0c\u4f8b\u5982\u4f20\u8f93\u4f20\u611f\u5668\u6570\u636e\u6216\u63a7\u5236\u8fdc\u7a0b\u8bbe\u5907\u3002"),(0,r.yg)("h4",{id:"ble\u7279\u6027"},"BLE\u7279\u6027"),(0,r.yg)("p",null,"ATT\uff0c\u5168\u540d\u5c5e\u6027\u534f\u8bae\u3002\u6700\u540e\uff0cATT\u7531\u4e00\u7ec4ATT\u547d\u4ee4\u7ec4\u6210\uff0c\u5373\u8bf7\u6c42\u548c\u54cd\u5e94\u547d\u4ee4\uff0cATT\u4e5f\u662f\u84dd\u7259\u7a7a\u5305\u7684\u6700\u4e0a\u5c42\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0cATT\u662f\u6211\u4eec\u5206\u6790\u84dd\u7259\u5305\u6700\u591a\u7684\u5730\u65b9\u3002"),(0,r.yg)("p",null,"ATT\u547d\u4ee4\uff0c\u6b63\u5f0f\u540d\u79f0\u4e3aATT PDU\uff08\u534f\u8bae\u6570\u636e\u5355\u5143\uff09\u3002\u5b83\u5305\u62ec4\u7c7b\uff1a\u8bfb\u3001\u5199\u3001\u901a\u77e5\u548c\u6307\u793a\u3002\u8fd9\u4e9b\u547d\u4ee4\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u7c7b\u578b\uff1a\u5982\u679c\u5b83\u9700\u8981\u4e00\u4e2a\u54cd\u5e94\uff0c\u90a3\u4e48\u5b83\u540e\u9762\u4f1a\u6709\u4e00\u4e2a\u8bf7\u6c42\uff1b\u76f8\u53cd\uff0c\u5982\u679c\u5b83\u53ea\u9700\u8981ACK\u800c\u4e0d\u9700\u8981\u54cd\u5e94\uff0c\u90a3\u4e48\u5b83\u540e\u9762\u5c31\u4e0d\u4f1a\u6709\u8bf7\u6c42\u3002"),(0,r.yg)("p",null,"\u670d\u52a1\u548c\u7279\u6027\u5728GATT\u5c42\u4e2d\u5b9a\u4e49\u3002\u670d\u52a1\u65b9\u63d0\u4f9b\u670d\u52a1\uff0c\u670d\u52a1\u662f\u6570\u636e\uff0c\u6570\u636e\u662f\u5c5e\u6027\uff0c\u670d\u52a1\u548c\u7279\u5f81\u662f\u6570\u636e\u7684\u903b\u8f91\u5448\u73b0\uff0c\u6216\u8005\u8bf4\u7528\u6237\u80fd\u770b\u5230\u7684\u6570\u636e\u6700\u7ec8\u8f6c\u5316\u4e3a\u670d\u52a1\u548c\u7279\u5f81\u3002"),(0,r.yg)("p",null,"\u8ba9\u6211\u4eec\u4ece\u79fb\u52a8\u7684\u89d2\u5ea6\u6765\u770b\u770b\u670d\u52a1\u548c\u7279\u6027\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u3002nRFConnect\u662f\u4e00\u4e2a\u975e\u5e38\u76f4\u89c2\u5730\u5411\u6211\u4eec\u5c55\u793a\u6bcf\u4e2a\u6570\u636e\u5305\u5e94\u8be5\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5e94\u7528\u7a0b\u5e8f\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/62.png",style:{width:400,height:"auto"}})),(0,r.yg)("p",null,"\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u5728\u84dd\u7259\u89c4\u8303\u4e2d\uff0c\u6bcf\u4e2a\u7279\u5b9a\u7684\u84dd\u7259\u5e94\u7528\u7a0b\u5e8f\u7531\u591a\u4e2a\u670d\u52a1\u7ec4\u6210\uff0c\u6bcf\u4e2a\u670d\u52a1\u7531\u591a\u4e2a\u7279\u5f81\u7ec4\u6210\u3002\u7279\u5f81\u7531UUID\u3001\u5c5e\u6027\u548c\u503c\u7ec4\u6210\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/50.png",style:{width:300,height:"auto"}})),(0,r.yg)("p",null,"\u5c5e\u6027\u7528\u4e8e\u63cf\u8ff0\u5bf9\u7279\u6027\u7684\u64cd\u4f5c\u7c7b\u578b\u548c\u6743\u9650\uff0c\u4f8b\u5982\u5b83\u662f\u5426\u652f\u6301\u8bfb\u53d6\u3001\u5199\u5165\u3001\u901a\u77e5\u7b49\u3002\u8fd9\u7c7b\u4f3c\u4e8eATT PDU\u4e2d\u5305\u542b\u7684\u56db\u4e2a\u7c7b\u522b\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/51.png",style:{width:800,height:"auto"}})),(0,r.yg)("h4",{id:"uuid"},"UUID"),(0,r.yg)("p",null,"\u6bcf\u4e2a\u670d\u52a1\u3001\u7279\u5f81\u548c\u63cf\u8ff0\u7b26\u90fd\u6709\u4e00\u4e2aUUID\uff08\u901a\u7528\u552f\u4e00\u6807\u8bc6\u7b26\uff09\u3002UUID\u662f\u4e00\u4e2a\u552f\u4e00\u7684128\u4f4d\uff0816\u5b57\u8282\uff09\u6570\u5b57\u3002\u4f8b\u5982\uff1a"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"ea094cbd-3695-4205-b32d-70c1dea93c35\n")),(0,r.yg)("p",null,"\u4e2d\u6307\u5b9a\u7684\u6240\u6709\u7c7b\u578b\u3001\u670d\u52a1\u548c\u914d\u7f6e\u6587\u4ef6\u90fd\u6709\u7f29\u77ed\u7684UUID ",(0,r.yg)("a",{parentName:"p",href:"https://www.bluetooth.com/specifications/gatt/services"},"SIG (\u84dd\u7259\u6280\u672f\u8054\u76df)"),". \u4f46\u662f\uff0c\u5982\u679c\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u81ea\u5df1\u7684UUID\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 ",(0,r.yg)("a",{parentName:"p",href:"https://www.uuidgenerator.net/"},"UUID\u751f\u6210\u5668\u7f51\u7ad9"),"\u3002"),(0,r.yg)("h3",{id:"ble\u626b\u63cf\u4eea"},"BLE\u626b\u63cf\u4eea"),(0,r.yg)("p",null,"\u521b\u5efaXIAO ESP32S3 BLE\u626b\u63cf\u4eea\u975e\u5e38\u7b80\u5355\u3002\u4ee5\u4e0b\u662f\u521b\u5efa\u626b\u63cf\u4eea\u7684\u793a\u4f8b\u7a0b\u5e8f\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <BLEDevice.h>\n#include <BLEUtils.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n\nint scanTime = 5; //In seconds\nBLEScan* pBLEScan;\n\nclass MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {\n    void onResult(BLEAdvertisedDevice advertisedDevice) {\n      Serial.printf("Advertised Device: %s \\n", advertisedDevice.toString().c_str());\n    }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println("Scanning...");\n\n  BLEDevice::init("");\n  pBLEScan = BLEDevice::getScan(); //create new scan\n  pBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());\n  pBLEScan->setActiveScan(true); //active scan uses more power, but get results faster\n  pBLEScan->setInterval(100);\n  pBLEScan->setWindow(99);  // less or equal setInterval value\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  BLEScanResults foundDevices = pBLEScan->start(scanTime, false);\n  Serial.print("Devices found: ");\n  Serial.println(foundDevices.getCount());\n  Serial.println("Scan done!");\n  pBLEScan->clearResults();   // delete results fromBLEScan buffer to release memory\n  delay(10000);\n}\n')),(0,r.yg)("p",null,"\u73b0\u5728\u60a8\u53ef\u4ee5\u9009\u62e9XIAO ESP32S3\u4e3b\u677f\u5e76\u4e0a\u4f20\u7a0b\u5e8f\u3002\u5982\u679c\u7a0b\u5e8f\u8fd0\u884c\u987a\u5229\uff0c\u6253\u5f00\u4e32\u884c\u76d1\u89c6\u5668\uff0c\u5c06\u6ce2\u7279\u7387\u8bbe\u7f6e\u4e3a115200\uff0c\u53ef\u4ee5\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/54.png",style:{width:700,height:"auto"}})),(0,r.yg)("p",null,"\u8be5\u7a0b\u5e8f\u6253\u5370\u51fa\u626b\u63cf\u7684\u84dd\u7259\u8bbe\u5907\u7684\u540d\u79f0\u3001MAC\u5730\u5740\u3001\u5236\u9020\u5546\u6570\u636e\u548c\u4fe1\u53f7\u3002"),(0,r.yg)("h4",{id:"\u7a0b\u5e8f\u6ce8\u91ca"},"\u7a0b\u5e8f\u6ce8\u91ca"),(0,r.yg)("p",null,"\u5b83\u9996\u5148\u5bfc\u5165BLE\u529f\u80fd\u6240\u9700\u7684\u5e93\u3002\n\u7136\u540e\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"MyAdvertisedDeviceCallbacks")," \u7ee7\u627f\u81ea ",(0,r.yg)("inlineCode",{parentName:"p"},"BLEAdvertisedDeviceCallbacks")," \u7c7b. \u5b83\u6709\u4e00\u4e2a\u540d\u4e3a ",(0,r.yg)("inlineCode",{parentName:"p"},"onResult")," \u5f53\u5728\u626b\u63cf\u671f\u95f4\u53d1\u73b0\u5e7f\u544a\u7684\u84dd\u7259\u8bbe\u5907\u65f6\u8c03\u7528\u3002\u8be5\u529f\u80fd\u4f7f\u7528 ",(0,r.yg)("inlineCode",{parentName:"p"},"Serial.printf")," \u4f5c\u7528\u3002\u6b64\u7c7b\u53ef\u7528\u4e8e\u5728\u626b\u63cf\u671f\u95f4\u5904\u7406\u84dd\u7259\u8bbe\u5907\u4fe1\u606f\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'class MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {\n    void onResult(BLEAdvertisedDevice advertisedDevice) {\n      Serial.printf("Advertised Device: %s \\n", advertisedDevice.toString().c_str());\n    }\n};\n')),(0,r.yg)("p",null,"\u5728",(0,r.yg)("inlineCode",{parentName:"p"},"Setup")," \u529f\u80fd\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6307\u5b9a\u7684\u53c2\u6570\u8bbe\u7f6eBLE\u626b\u63cf\uff0c\u5305\u62ec\u626b\u63cf\u95f4\u9694\u548c\u7a97\u53e3\u503c\u3002\u5b83\u8fd8\u521d\u59cb\u5316BLE\u8bbe\u5907\uff0c\u5e76\u8bbe\u7f6e\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u626b\u63cf\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u7684\u5e7f\u544a\u8bbe\u5907\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'BLEDevice::init("");\npBLEScan = BLEDevice::getScan();\npBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());\npBLEScan->setActiveScan(true);\npBLEScan->setInterval(100);\npBLEScan->setWindow(99);\n')),(0,r.yg)("p",null,"\u6700\u540e\uff0c ",(0,r.yg)("inlineCode",{parentName:"p"},"loop")," \u51fd\u6570\u4f7f\u7528\u6307\u5b9a\u7684\u626b\u63cf\u65f6\u95f4\u548c\u963b\u585e\u6807\u5fd7\u542f\u52a8BLE\u626b\u63cf\u3002\u7136\u540e\uff0c\u5b83\u5c06\u627e\u5230\u7684\u8bbe\u5907\u6570\u91cf\u6253\u5370\u5230\u4e32\u884c\u7aef\u53e3\uff0c\u5e76\u6e05\u9664\u7ed3\u679c\u7f13\u51b2\u533a\u4ee5\u91ca\u653e\u5185\u5b58\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'BLEScanResults foundDevices = pBLEScan->start(scanTime, false);\nSerial.print("Devices found: ");\nSerial.println(foundDevices.getCount());\nSerial.println("Scan done!");\npBLEScan->clearResults();\n')),(0,r.yg)("h3",{id:"ble\u670d\u52a1\u5668\u5ba2\u6237\u7aef"},"BLE\u670d\u52a1\u5668/\u5ba2\u6237\u7aef"),(0,r.yg)("p",null,"\u5982\u524d\u6240\u8ff0\uff0cXIAO ESP32S3\u65e2\u53ef\u4ee5\u5145\u5f53\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u5145\u5f53\u5ba2\u6237\u7aef\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4f5c\u4e3a\u670d\u52a1\u5668\u7684\u7a0b\u5e8f\u4ee5\u53ca\u5982\u4f55\u4f7f\u7528\u5b83\u3002\u5c06\u4ee5\u4e0b\u7a0b\u5e8f\u4e0a\u4f20\u5230XIAO\u540e\uff0c\u5b83\u5c06\u4f5c\u4e3a\u670d\u52a1\u5668\u5411\u6240\u6709\u8fde\u63a5\u5230XIAO\u7684\u84dd\u7259\u8bbe\u5907\u53d1\u9001\u201cHello World\u201d\u6d88\u606f\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'//Server Code\n#include <BLEDevice.h>\n#include <BLEUtils.h>\n#include <BLEServer.h>\n\n#define SERVICE_UUID        "4fafc201-1fb5-459e-8fcc-c5c9c331914b"\n#define CHARACTERISTIC_UUID "beb5483e-36e1-4688-b7f5-ea07361b26a8"\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println("Starting BLE work!");\n\n  BLEDevice::init("XIAO_ESP32S3");\n  BLEServer *pServer = BLEDevice::createServer();\n  BLEService *pService = pServer->createService(SERVICE_UUID);\n  BLECharacteristic *pCharacteristic = pService->createCharacteristic(\n                                         CHARACTERISTIC_UUID,\n                                         BLECharacteristic::PROPERTY_READ |\n                                         BLECharacteristic::PROPERTY_WRITE\n                                       );\n\n  pCharacteristic->setValue("Hello World");\n  pService->start();\n  // BLEAdvertising *pAdvertising = pServer->getAdvertising();  // this still is working for backward compatibility\n  BLEAdvertising *pAdvertising = BLEDevice::getAdvertising();\n  pAdvertising->addServiceUUID(SERVICE_UUID);\n  pAdvertising->setScanResponse(true);\n  pAdvertising->setMinPreferred(0x06);  // functions that help with iPhone connections issue\n  pAdvertising->setMinPreferred(0x12);\n  BLEDevice::startAdvertising();\n  Serial.println("Characteristic defined! Now you can read it in your phone!");\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n  delay(2000);\n}\n')),(0,r.yg)("p",null,"\u540c\u65f6\uff0c\u60a8\u53ef\u4ee5\u5728\u4e3b\u8981\u7684\u79fb\u52a8\u5e94\u7528\u5546\u5e97\u4e2d\u641c\u7d22\u5e76\u4e0b\u8f7d",(0,r.yg)("strong",{parentName:"p"},"nRF Connect"),"\u5e94\u7528\u7a0b\u5e8f\uff0c\u8be5\u5e94\u7528\u7a0b\u5e8f\u5141\u8bb8\u60a8\u7684\u624b\u673a\u641c\u7d22\u5e76\u8fde\u63a5\u5230\u84dd\u7259\u8bbe\u5907\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Android: ",(0,r.yg)("a",{parentName:"li",href:"https://play.google.com/store/apps/details?id=no.nordicsemi.android.mcp&hl=en"},"nRF Connect")),(0,r.yg)("li",{parentName:"ul"},"IOS: ",(0,r.yg)("a",{parentName:"li",href:"https://apps.apple.com/us/app/nrf-connect-for-mobile/id1054362403"},"nRF Connect"))),(0,r.yg)("p",null,"\u4e0b\u8f7d\u8f6f\u4ef6\u540e\uff0c\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u641c\u7d22\u5e76\u8fde\u63a5XIAO ESP32S3\uff0c\u60a8\u5c06\u770b\u5230\u5e7f\u544a\u4e2d\u7684\u201cHello World\u201d\u3002"),(0,r.yg)("table",{align:"center"},(0,r.yg)("tr",null,(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/55.jpg",style:{width:200,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/56.jpg",style:{width:200,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/58.jpg",style:{width:200,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/59.jpg",style:{width:200,height:"auto"}}))))),(0,r.yg)("p",null,"\u5982\u679c\u60a8\u60f3\u4f7f\u7528\u53e6\u4e00\u4e2aXIAO ESP32S3\u4f5c\u4e3a\u5ba2\u6237\u7aef\u6765\u63a5\u6536\u6765\u81ea\u670d\u52a1\u5668\u7684\u6d88\u606f\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u5bf9\u5ba2\u6237\u7aefXIAO\u4f7f\u7528\u4ee5\u4e0b\u8fc7\u7a0b\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-cpp"},'// Client Code\n#include "BLEDevice.h"\n//#include "BLEScan.h"\n\n// The remote service we wish to connect to.\nstatic BLEUUID serviceUUID("4fafc201-1fb5-459e-8fcc-c5c9c331914b");\n// The characteristic of the remote service we are interested in.\nstatic BLEUUID    charUUID("beb5483e-36e1-4688-b7f5-ea07361b26a8");\n\nstatic boolean doConnect = false;\nstatic boolean connected = false;\nstatic boolean doScan = false;\nstatic BLERemoteCharacteristic* pRemoteCharacteristic;\nstatic BLEAdvertisedDevice* myDevice;\n\nstatic void notifyCallback(\n  BLERemoteCharacteristic* pBLERemoteCharacteristic,\n  uint8_t* pData,\n  size_t length,\n  bool isNotify) {\n    Serial.print("Notify callback for characteristic ");\n    Serial.print(pBLERemoteCharacteristic->getUUID().toString().c_str());\n    Serial.print(" of data length ");\n    Serial.println(length);\n    Serial.print("data: ");\n    Serial.write(pData, length);\n    Serial.println();\n}\n\nclass MyClientCallback : public BLEClientCallbacks {\n  void onConnect(BLEClient* pclient) {\n  }\n\n  void onDisconnect(BLEClient* pclient) {\n    connected = false;\n    Serial.println("onDisconnect");\n  }\n};\n\nbool connectToServer() {\n    Serial.print("Forming a connection to ");\n    Serial.println(myDevice->getAddress().toString().c_str());\n    \n    BLEClient*  pClient  = BLEDevice::createClient();\n    Serial.println(" - Created client");\n\n    pClient->setClientCallbacks(new MyClientCallback());\n\n    // Connect to the remove BLE Server.\n    pClient->connect(myDevice);  // if you pass BLEAdvertisedDevice instead of address, it will be recognized type of peer device address (public or private)\n    Serial.println(" - Connected to server");\n    pClient->setMTU(517); //set client to request maximum MTU from server (default is 23 otherwise)\n  \n    // Obtain a reference to the service we are after in the remote BLE server.\n    BLERemoteService* pRemoteService = pClient->getService(serviceUUID);\n    if (pRemoteService == nullptr) {\n      Serial.print("Failed to find our service UUID: ");\n      Serial.println(serviceUUID.toString().c_str());\n      pClient->disconnect();\n      return false;\n    }\n    Serial.println(" - Found our service");\n\n    // Obtain a reference to the characteristic in the service of the remote BLE server.\n    pRemoteCharacteristic = pRemoteService->getCharacteristic(charUUID);\n    if (pRemoteCharacteristic == nullptr) {\n      Serial.print("Failed to find our characteristic UUID: ");\n      Serial.println(charUUID.toString().c_str());\n      pClient->disconnect();\n      return false;\n    }\n    Serial.println(" - Found our characteristic");\n\n    // Read the value of the characteristic.\n    if(pRemoteCharacteristic->canRead()) {\n      std::string value = pRemoteCharacteristic->readValue();\n      Serial.print("The characteristic value was: ");\n      Serial.println(value.c_str());\n    }\n\n    if(pRemoteCharacteristic->canNotify())\n      pRemoteCharacteristic->registerForNotify(notifyCallback);\n\n    connected = true;\n    return true;\n}\n/**\n * Scan for BLE servers and find the first one that advertises the service we are looking for.\n */\nclass MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {\n /**\n   * Called for each advertising BLE server.\n   */\n  void onResult(BLEAdvertisedDevice advertisedDevice) {\n    Serial.print("BLE Advertised Device found: ");\n    Serial.println(advertisedDevice.toString().c_str());\n\n    // We have found a device, let us now see if it contains the service we are looking for.\n    if (advertisedDevice.haveServiceUUID() && advertisedDevice.isAdvertisingService(serviceUUID)) {\n\n      BLEDevice::getScan()->stop();\n      myDevice = new BLEAdvertisedDevice(advertisedDevice);\n      doConnect = true;\n      doScan = true;\n\n    } // Found our server\n  } // onResult\n}; // MyAdvertisedDeviceCallbacks\n\nvoid setup() {\n  Serial.begin(115200);\n  Serial.println("Starting Arduino BLE Client application...");\n  BLEDevice::init("");\n\n  // Retrieve a Scanner and set the callback we want to use to be informed when we\n  // have detected a new device.  Specify that we want active scanning and start the\n  // scan to run for 5 seconds.\n  BLEScan* pBLEScan = BLEDevice::getScan();\n  pBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());\n  pBLEScan->setInterval(1349);\n  pBLEScan->setWindow(449);\n  pBLEScan->setActiveScan(true);\n  pBLEScan->start(5, false);\n} // End of setup.\n\n// This is the Arduino main loop function.\nvoid loop() {\n  // If the flag "doConnect" is true then we have scanned for and found the desired\n  // BLE Server with which we wish to connect.  Now we connect to it.  Once we are \n  // connected we set the connected flag to be true.\n  if (doConnect == true) {\n    if (connectToServer()) {\n      Serial.println("We are now connected to the BLE Server.");\n    } else {\n      Serial.println("We have failed to connect to the server; there is nothin more we will do.");\n    }\n    doConnect = false;\n  }\n\n  // If we are connected to a peer BLE Server, update the characteristic each time we are reached\n  // with the current time since boot.\n  if (connected) {\n    String newValue = "Time since boot: " + String(millis()/1000);\n    Serial.println("Setting new characteristic value to \\"" + newValue + "\\"");\n    \n    // Set the characteristic\'s value to be the array of bytes that is actually a string.\n    pRemoteCharacteristic->writeValue(newValue.c_str(), newValue.length());\n  }else if(doScan){\n    BLEDevice::getScan()->start(0);  // this is just example to start scan after disconnect, most likely there is better way to do it in arduino\n  }\n  \n  delay(1000); // Delay a second between loops.\n} // End of loop\n')),(0,r.yg)("p",null,"\u4e0a\u8ff0\u7a0b\u5e8f\u5c06\u628a\u6653\u53d8\u6210\u4e00\u4e2a\u5ba2\u6237\u7aef\uff0c\u5e76\u641c\u7d22\u9644\u8fd1\u7684\u84dd\u7259\u8bbe\u5907\u3002\u5f53\u84dd\u7259\u8bbe\u5907\u7684UUID\u4e0e\u60a8\u63d0\u4f9b\u7684UUID\u5339\u914d\u65f6\uff0c\u5b83\u5c06\u8fde\u63a5\u5230\u8bbe\u5907\u5e76\u83b7\u5f97\u5176\u7279\u5f81\u503c\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/60.png",style:{width:800,height:"auto"}})),(0,r.yg)("h4",{id:"\u7a0b\u5e8f\u6ce8\u91ca-1"},"\u7a0b\u5e8f\u6ce8\u91ca"),(0,r.yg)("p",null,"\u8ba9\u6211\u4eec\u5feb\u901f\u4e86\u89e3\u4e00\u4e0bBLE\u670d\u52a1\u5668\u793a\u4f8b\u4ee3\u7801\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002\u5b83\u9996\u5148\u5bfc\u5165BLE\u529f\u80fd\u6240\u9700\u7684\u5e93\u3002\u7136\u540e\uff0c\u60a8\u9700\u8981\u4e3a\u670d\u52a1\u548c\u7279\u5f81\u5b9a\u4e49\u4e00\u4e2aUUID\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'#define SERVICE_UUID "4fafc201-1fb5-459e-8fcc-c5c9c331914b"\n#define CHARACTERISTIC_UUID "beb5483e-36e1-4688-b7f5-ea07361b26a8"\n')),(0,r.yg)("p",null,"\u60a8\u53ef\u4ee5\u4fdd\u7559\u9ed8\u8ba4\u7684UUID\uff0c\u4e5f\u53ef\u4ee5\u8f6c\u5230",(0,r.yg)("a",{parentName:"p",href:"https://www.uuidgenerator.net/"},"uuidgenerator.net"),"\u4e3a\u60a8\u7684\u670d\u52a1\u548c\u7279\u6027\u521b\u5efa\u968f\u673aUUID\u3002"),(0,r.yg)("p",null,"\u7136\u540e\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201cXIAO_ESP32S3\u201d\u7684BLE\u8bbe\u5907\u3002\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e2a\u540d\u5b57\u6539\u6210\u4f60\u559c\u6b22\u7684\u540d\u5b57\u3002\u5728\u4e0b\u9762\u7684\u884c\u4e2d\uff0c\u60a8\u5c06BLE\u8bbe\u5907\u8bbe\u7f6e\u4e3a\u670d\u52a1\u5668\u3002\u4e4b\u540e\uff0c\u4f7f\u7528\u524d\u9762\u5b9a\u4e49\u7684UUID\u4e3aBLE\u670d\u52a1\u5668\u521b\u5efa\u4e00\u4e2a\u670d\u52a1\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"BLEServer *pServer = BLEDevice::createServer();\nBLEService *pService = pServer->createService(SERVICE_UUID);\n")),(0,r.yg)("p",null,"\u7136\u540e\uff0c\u8bbe\u7f6e\u8be5\u670d\u52a1\u7684\u7279\u6027\u3002\u6b63\u5982\u60a8\u6240\u770b\u5230\u7684\uff0c\u60a8\u8fd8\u4f7f\u7528\u524d\u9762\u5b9a\u4e49\u7684UUID\uff0c\u5e76\u4e14\u9700\u8981\u5c06\u7279\u6027\u7684\u5c5e\u6027\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5b83\u662f\uff1a\u8bfb\u548c\u5199\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"BLECharacteristic *pCharacteristic = pService->createCharacteristic(\n                                     CHARACTERISTIC_UUID,\n                                     BLECharacteristic::PROPERTY_READ |\n                                     BLECharacteristic::PROPERTY_WRITE\n                                     );\n")),(0,r.yg)("p",null,"\u521b\u5efa\u7279\u5f81\u540e\uff0c\u53ef\u4ee5\u4f7f\u7528\u201csetValue\uff08\uff09\u201d\u65b9\u6cd5\u8bbe\u7f6e\u5176\u503c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u503c\u8bbe\u7f6e\u4e3a\u6587\u672c\u201cHello World\u201d\u3002\u60a8\u53ef\u4ee5\u5c06\u6b64\u6587\u672c\u66f4\u6539\u4e3a\u4efb\u4f55\u60a8\u559c\u6b22\u7684\u5185\u5bb9\u3002\u5728\u672a\u6765\u7684\u9879\u76ee\u4e2d\uff0c\u8be5\u6587\u672c\u53ef\u4ee5\u662f\u4f20\u611f\u5668\u8bfb\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u706f\u7684\u72b6\u6001\u3002"),(0,r.yg)("p",null,"\u6700\u540e\uff0c\u4f60\u53ef\u4ee5\u542f\u52a8\u670d\u52a1\u548c\u5e7f\u544a\uff0c\u8fd9\u6837\u5176\u4ed6BLE\u8bbe\u5907\u5c31\u53ef\u4ee5\u626b\u63cf\u5e76\u627e\u5230\u8fd9\u4e2aBLE\u8bbe\u5907\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"BLEAdvertising *pAdvertising = pServer->getAdvertising();\npAdvertising->start();\n")),(0,r.yg)("p",null,"\u8fd9\u53ea\u662f\u4e00\u4e2a\u5173\u4e8e\u5982\u4f55\u521b\u5efaBLE\u670d\u52a1\u5668\u7684\u7b80\u5355\u793a\u4f8b\u3002\u5728\u8be5\u4ee3\u7801\u4e2d ",(0,r.yg)("inlineCode",{parentName:"p"},"loop()"),", \u4f46\u662f\u60a8\u53ef\u4ee5\u6dfb\u52a0\u65b0\u5ba2\u6237\u7aef\u8fde\u63a5\u65f6\u53d1\u751f\u7684\u60c5\u51b5 (\u68c0\u67e5 ",(0,r.yg)("inlineCode",{parentName:"p"},"BLE_notify")," \u4e00\u4e9b\u6307\u5bfc\u7684\u793a\u4f8b)\u3002"),(0,r.yg)("h3",{id:"ble\u4f20\u611f\u5668\u6570\u636e\u4ea4\u6362"},"BLE\u4f20\u611f\u5668\u6570\u636e\u4ea4\u6362"),(0,r.yg)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u5c06\u6765\u5230\u73b0\u5b9e\u4e16\u754c\u6765\u5b8c\u6210\u4e00\u4e2a\u6848\u4f8b\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u8ba9XIAO ESP32S3\u8fde\u63a5\u5230\u5149\u5f3a\u5ea6\u4f20\u611f\u5668\uff0c\u7136\u540e\u901a\u8fc7\u84dd\u7259\u5c06\u5149\u4f20\u611f\u5668\u7684\u503c\u53d1\u9001\u5230\u53e6\u4e00\u4e2aXIAO ESP 32S3\uff0c\u5e76\u5c06\u5176\u663e\u793a\u5728\u6269\u5c55\u677f\u7684\u5c4f\u5e55\u4e0a\u3002"),(0,r.yg)("p",null,"\u4e3a\u4e86\u63a5\u7ebf\u65b9\u4fbf\uff0c\u6211\u4eec\u5c06\u4f7f\u7528\u4e24\u4e2aXIAO\u6269\u5c55\u677f\uff0c\u793a\u4f8b\u7a0b\u5e8f\u4ec5\u4f9b\u53c2\u8003\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u9879\u76ee\u9700\u6c42\u9009\u62e9\u4ea7\u54c1\u3002"),(0,r.yg)("table",{align:"center"},(0,r.yg)("tr",null,(0,r.yg)("th",null,"Seeed Studio XIAO ESP32S3"),(0,r.yg)("th",null,"Seeed Studio XIAO ESP32S3 Sense"),(0,r.yg)("th",null,"Seeed Studio Expansion Base for XIAO with Grove OLED"),(0,r.yg)("th",null,"Grove - Digital Light Sensor - TSL2561")),(0,r.yg)("tr",null,(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/xiaoesp32s3.jpg",style:{width:200,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/xiaoesp32s3sense.jpg",style:{width:200,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO-Expansion-Board/Update_pic/zheng1.jpg",style:{width:200,height:"auto"}}))),(0,r.yg)("td",null,(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Digital_Light_Sensor/img/hardware%20overview.jpg",style:{width:180,height:"auto"}})))),(0,r.yg)("tr",null,(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/XIAO-ESP32S3-p-5627.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," \u70b9\u51fb\u8d2d\u4e70 \ud83d\uddb1\ufe0f")))))),(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/XIAO-ESP32S3-Sense-p-5639.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," \u70b9\u51fb\u8d2d\u4e70 \ud83d\uddb1\ufe0f")))))),(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Expansion-board-p-4746.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," \u70b9\u51fb\u8d2d\u4e70 \ud83d\uddb1\ufe0f")))))),(0,r.yg)("td",null,(0,r.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Digital-Light-Sensor-TSL2561.html"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," \u70b9\u51fb\u8d2d\u4e70 \ud83d\uddb1\ufe0f")))))))),(0,r.yg)("p",null,"\u9664\u4e86\u4e0a\u8ff0\u786c\u4ef6\u51c6\u5907\u5916\uff0c\u60a8\u53ef\u80fd\u8fd8\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u5e93\uff0c\u4e0b\u8f7d\u5e76\u5c06\u5b83\u4eec\u6dfb\u52a0\u5230Arduino IDE\u73af\u5883\u4e2d\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"OLED\u663e\u793a\u5668u8g2\u5e93"),":")),(0,r.yg)("div",{class:"github_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"github_item",href:"https://github.com/olikraus/U8g2_Arduino"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"},"\u4e0b\u8f7d\u5e93")))," ",(0,r.yg)("svg",{"aria-hidden":"true",focusable:"false",role:"img",className:"mr-2",viewBox:"-3 10 9 1",width:16,height:16,fill:"currentColor",style:{textAlign:"center",display:"inline-block",userSelect:"none",verticalAlign:"text-bottom",overflow:"visible"}},(0,r.yg)("path",{d:"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"})))),(0,r.yg)("br",null),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Library of Grove - Digital Light Sensor - TSL2561"),":")),(0,r.yg)("div",{class:"github_container",style:{textAlign:"center"}},(0,r.yg)("a",{class:"github_item",href:"https://github.com/Seeed-Studio/Grove_Digital_Light_Sensor"},(0,r.yg)("strong",null,(0,r.yg)("span",null,(0,r.yg)("font",{color:"FFFFFF",size:"4"}," \u4e0b\u8f7d\u5e93")))," ",(0,r.yg)("svg",{"aria-hidden":"true",focusable:"false",role:"img",className:"mr-2",viewBox:"-3 10 9 1",width:16,height:16,fill:"currentColor",style:{textAlign:"center",display:"inline-block",userSelect:"none",verticalAlign:"text-bottom",overflow:"visible"}},(0,r.yg)("path",{d:"M8 0c4.42 0 8 3.58 8 8a8.013 8.013 0 0 1-5.45 7.59c-.4.08-.55-.17-.55-.38 0-.27.01-1.13.01-2.2 0-.75-.25-1.23-.54-1.48 1.78-.2 3.65-.88 3.65-3.95 0-.88-.31-1.59-.82-2.15.08-.2.36-1.02-.08-2.12 0 0-.67-.22-2.2.82-.64-.18-1.32-.27-2-.27-.68 0-1.36.09-2 .27-1.53-1.03-2.2-.82-2.2-.82-.44 1.1-.16 1.92-.08 2.12-.51.56-.82 1.28-.82 2.15 0 3.06 1.86 3.75 3.64 3.95-.23.2-.44.55-.51 1.07-.46.21-1.61.55-2.33-.66-.15-.24-.6-.83-1.23-.82-.67.01-.27.38.01.53.34.19.73.9.82 1.13.16.45.68 1.31 2.69.94 0 .67.01 1.3.01 1.49 0 .21-.15.45-.55.38A7.995 7.995 0 0 1 0 8c0-4.42 3.58-8 8-8Z"})))),(0,r.yg)("br",null),(0,r.yg)("p",null,"\u6211\u4eec\u9700\u8981\u51c6\u5907\u4e24\u4e2aXIAO\uff0c\u4e00\u4e2a\u4f5c\u4e3a\u670d\u52a1\u5668\uff0c\u4e00\u4e2a\u4e3a\u5ba2\u6237\u7aef\u3002\u4ee5\u4e0b\u662f\u4f5c\u4e3a\u670d\u52a1\u5668\u7684\u793a\u4f8b\u7a0b\u5e8f\u3002XIAO\u4f5c\u4e3a\u4e00\u4e2a\u670d\u52a1\u5668\u6709\u4ee5\u4e0b\u4e3b\u8981\u4efb\u52a1\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"\u9996\u5148\uff0c\u4ece\u5149\u4f20\u611f\u5668\u83b7\u5f97\u5b9e\u65f6\u503c\uff1b"),(0,r.yg)("li",{parentName:"ul"},"\u521b\u5efa\u84dd\u7259\u670d\u52a1\u5668\uff1b"),(0,r.yg)("li",{parentName:"ul"},"\u901a\u8fc7\u84dd\u7259\u5ba3\u4f20\u5149\u5f3a\u503c\uff1b"),(0,r.yg)("li",{parentName:"ul"},"\u5728\u663e\u793a\u5668\u4e0a\u663e\u793a\u5b9e\u65f6\u5149\u5f3a\u548c\u53d1\u9001\u3002")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'//server\n#include <BLEDevice.h>\n#include <BLEUtils.h>\n#include <BLE2902.h>\n#include <BLEServer.h>\n#include <Wire.h>\n#include <Digital_Light_TSL2561.h>\n#include <Arduino.h>\n#include <U8x8lib.h>\n#include <Wire.h>\n\n// OLEDs without Reset of the Display\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);\n\n//BLE Server name (the other ESP32 name running the server sketch)\n#define bleServerName "XIAOESP32S3_BLE"\n\nBLECharacteristic *pCharacteristic;\nbool deviceConnected = false;\n\nint light_val = 0;\n\nclass MyServerCallbacks: public BLEServerCallbacks {\n  void onConnect(BLEServer* pServer) {\n    deviceConnected = true;\n  };\n  \n  void onDisconnect(BLEServer* pServer) {\n    deviceConnected = false;\n  }\n};\n\nvoid setup() {\n  Serial.begin(115200);\n  \n  //OLED display setup\n  u8x8.begin();\n  u8x8.setFlipMode(1);\n\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.drawString(0, 3, "Starting...");\n\n  Wire.begin();\n  TSL2561.init();\n  \n  BLEDevice::init(bleServerName);\n  BLEServer *pServer = BLEDevice::createServer();\n  pServer->setCallbacks(new MyServerCallbacks());\n  \n  BLEService *pService = pServer->createService(BLEUUID((uint16_t)0x181A)); // Environmental Sensing\n  pCharacteristic = pService->createCharacteristic(\n    BLEUUID((uint16_t)0x2A59), // Analog Output\n    BLECharacteristic::PROPERTY_NOTIFY\n  );\n  pCharacteristic->addDescriptor(new BLE2902());\n  \n  pService->start();\n  BLEAdvertising *pAdvertising = BLEDevice::getAdvertising();\n  pAdvertising->addServiceUUID(pService->getUUID());\n  pAdvertising->setScanResponse(true);\n  pAdvertising->setMinPreferred(0x0);\n  pAdvertising->setMinPreferred(0x1F);\n  BLEDevice::startAdvertising();\n  u8x8.clearDisplay();\n}\n\nvoid loop() {\n  if (deviceConnected) {\n    light_val = TSL2561.readVisibleLux();\n    pCharacteristic->setValue(light_val);\n    pCharacteristic->notify();\n    u8x8.setFont(u8x8_font_chroma48medium8_r);\n    u8x8.setCursor(0, 0);\n    u8x8.print("Light Value:");\n    u8x8.clearLine(2);\n    u8x8.setCursor(0, 2);\n    u8x8.print(light_val);\n    u8x8.drawString(0, 4, "Sending...");\n    delay(10); // bluetooth stack will go into congestion, if too many packets are sent\n  }\n}\n')),(0,r.yg)("p",null,"\u4e0a\u4f20\u5176\u4e2d\u4e00\u4e2aXIAO\u7684\u7a0b\u5e8f\u540e\uff0c\u5982\u679c\u7a0b\u5e8f\u8fd0\u884c\u987a\u5229\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u62ff\u51fa\u624b\u673a\uff0c\u4f7f\u7528nRF Connect APP\u641c\u7d22\u540d\u4e3a",(0,r.yg)("strong",{parentName:"p"},"XIOESP32S3_BLE"),"\u7684\u84dd\u7259\u8bbe\u5907\uff0c\u5c06\u5176\u8fde\u63a5\uff0c\u7136\u540e\u5355\u51fb\u4e0b\u9762\u663e\u793a\u7684\u6309\u94ae\uff0c\u60a8\u5c06\u6536\u5230\u4f20\u611f\u5668\u6570\u636e\u4fe1\u606f\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/63.jpg",style:{width:300,height:"auto"}})),(0,r.yg)("p",null,"\u5728\u8fd9\u91cc\u4f60\u4f1a\u53d1\u73b0\uff0c\u6211\u4eec\u64cd\u4f5c\u8f6f\u4ef6\u7684\u65b9\u5f0f\u4e0e\u524d\u9762\u7684\u4f8b\u5b50\u4e0d\u592a\u4e00\u6837\uff0c\u56e0\u4e3a\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u53d1\u9001\u4f20\u611f\u5668\u7c7b\u578b\u7684\u6d88\u606f\uff0c\u6211\u4eec\u4f1a\u9009\u62e9\u4f7f\u7528",(0,r.yg)("strong",{parentName:"p"},"\u901a\u77e5"),"\u7684\u5c5e\u6027\u6765\u786e\u4fdd\u6d88\u606f\u7684\u6709\u6548\u6027\u3002"),(0,r.yg)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u9700\u8981\u62ff\u51fa\u6211\u4eec\u7684\u53e6\u4e00\u4e2aXIAO\uff0c\u5b83\u5145\u5f53\u5ba2\u6237\u7aef\u6765\u6536\u96c6\u548c\u663e\u793a\u6211\u4eec\u7684\u6570\u636e\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'//client\n#include <BLEDevice.h>\n#include <BLEUtils.h>\n#include <BLEClient.h>\n#include <BLEServer.h>\n#include <Arduino.h>\n#include <U8x8lib.h>\n#include <Wire.h>\n\n// OLEDs without Reset of the Display\nU8X8_SSD1306_128X64_NONAME_HW_I2C u8x8(/* clock=*/ SCL, /* data=*/ SDA, /* reset=*/ U8X8_PIN_NONE);\n\nBLEClient*  pClient;\nbool doconnect = false;\n\n//BLE Server name (the other ESP32 name running the server sketch)\n#define bleServerName "XIAOESP32S3_BLE"\n\n//Address of the peripheral device. Address will be found during scanning...\nstatic BLEAddress *pServerAddress;\n\nBLEUUID serviceUUID("181A"); // Environmental Sensing\nBLEUUID charUUID("2A59");    // Analog Output\n\nchar light_val[1024];\n\n//Callback function that gets called, when another device\'s advertisement has been received\nclass MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {\n  void onResult(BLEAdvertisedDevice advertisedDevice) {\n    if (advertisedDevice.getName() == bleServerName) { //Check if the name of the advertiser matches\n      advertisedDevice.getScan()->stop(); //Scan can be stopped, we found what we are looking for\n      pServerAddress = new BLEAddress(advertisedDevice.getAddress()); //Address of advertiser is the one we need\n      Serial.println("Device found. Connecting!");\n    }\n  }\n};\n\n//function that prints the latest sensor readings in the OLED display\nvoid printReadings(){\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.setCursor(0, 0);\n  u8x8.print("Light Value:");\n  u8x8.drawString(0, 2, light_val);\n}\n\nvoid setup() {\n  Serial.begin(115200);\n  //OLED display setup\n  u8x8.begin();\n  u8x8.setFlipMode(1);\n\n  u8x8.setFont(u8x8_font_chroma48medium8_r);\n  u8x8.drawString(0, 3, "Starting...");\n  \n  Serial.println("Starting BLE client...");\n\n  BLEDevice::init("XIAOESP32S3_Client");\n\n  // Retrieve a Scanner and set the callback we want to use to be informed when we\n  // have detected a new device.  Specify that we want active scanning and start the\n  // scan to run for 30 seconds.\n  BLEScan* pBLEScan = BLEDevice::getScan();\n  pBLEScan->setAdvertisedDeviceCallbacks(new MyAdvertisedDeviceCallbacks());\n  pBLEScan->setActiveScan(true);\n  pBLEScan->start(30);\n\n  pClient = BLEDevice::createClient();\n  // Connect to the remove BLE Server.\n  pClient->connect(*pServerAddress);\n  Serial.println(" - Connected to server");\n\n  // Obtain a reference to the service we are after in the remote BLE server.\n  BLERemoteService* pRemoteService = pClient->getService(serviceUUID);\n  if (pRemoteService == nullptr) {\n    u8x8.clearDisplay();\n    u8x8.drawString(0, 3, "False UUID");\n    Serial.print("Failed to find our service UUID: ");\n    Serial.println(serviceUUID.toString().c_str());\n    return;\n  }\n\n  // Obtain a reference to the characteristics in the service of the remote BLE server.\n  BLERemoteCharacteristic* pCharacteristic = pRemoteService->getCharacteristic(charUUID);\n  if (pCharacteristic == nullptr) {\n    u8x8.clearDisplay();\n    u8x8.drawString(0, 3, "False UUID");\n    Serial.print("Failed to find our characteristic UUID");\n    return;\n  }\n  Serial.println(" - Found light value characteristics");\n  u8x8.clearDisplay();\n  u8x8.drawString(0, 3, "Connected!");\n  \n  pCharacteristic->registerForNotify([](BLERemoteCharacteristic* pBLERemoteCharacteristic, uint8_t* pData, size_t length, bool isNotify) {\n    Serial.println("Notify received");\n    Serial.print("Value: ");\n    Serial.println(*pData);\n    snprintf(light_val, sizeof(light_val), "%d", *pData);\n  });\n\n  doconnect = true;\n  u8x8.clearDisplay();\n  u8x8.drawString(0, 4, "Receiving...");\n}\n\nvoid loop() {\n  if (doconnect) {\n    BLERemoteService* pRemoteService = pClient->getService(serviceUUID);\n    BLERemoteCharacteristic* pCharacteristic = pRemoteService->getCharacteristic(charUUID);\n    pCharacteristic->registerForNotify([](BLERemoteCharacteristic* pBLERemoteCharacteristic, uint8_t* pData, size_t length, bool isNotify) {\n      Serial.println("Notify received");\n      Serial.print("Value: ");\n      Serial.println(*pData);\n      snprintf(light_val, sizeof(light_val), "%d", *pData);\n    });\n  }\n  printReadings();\n  delay(1000);\n  u8x8.clearLine(2);\n}\n')),(0,r.yg)("p",null,"\u5f53\u4f7f\u7528\u4e0a\u9762\u7684\u793a\u4f8b\u65f6\uff0c\u6211\u4eec\u5efa\u8bae\u5728\u4f7f\u7528\u5ba2\u6237\u7aef\u7a0b\u5e8f\u4e4b\u524d\u4e0a\u8f7d\u670d\u52a1\u5668\u7a0b\u5e8f\u5e76\u786e\u4fdd\u5b83\u5df2\u6210\u529f\u8fd0\u884c\u3002\u5982\u679c\u7a0b\u5e8f\u8fd0\u884c\u987a\u5229\uff0c\u60a8\u5c06\u770b\u5230\u4ee5\u4e0b\u7ed3\u679c\u3002"),(0,r.yg)("div",{style:{textAlign:"center"}},(0,r.yg)("img",{src:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/img/65.gif",style:{width:700,height:"auto"}})),(0,r.yg)("h4",{id:"\u7a0b\u5e8f\u6ce8\u91ca-2"},"\u7a0b\u5e8f\u6ce8\u91ca"),(0,r.yg)("p",null,"\u5bf9\u4e8e\u4e0a\u8ff0\u7a0b\u5e8f\uff0c\u6211\u4eec\u5c06\u9009\u62e9\u66f4\u91cd\u8981\u7684\u90e8\u5206\u8fdb\u884c\u89e3\u91ca\u3002\u6211\u4eec\u5c06\u4ece\u670d\u52a1\u5668\u7a0b\u5e8f\u5f00\u59cb\u3002"),(0,r.yg)("p",null,"\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u84dd\u7259\u670d\u52a1\u5668\u7684\u540d\u79f0\uff0c\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u662f\u60a8\u8bbe\u7f6e\u7684\u540d\u79f0\uff0c\u4f46\u60a8\u9700\u8981\u8bb0\u4f4f\u5b83\uff0c\u56e0\u4e3a\u60a8\u9700\u8981\u4f9d\u9760\u8fd9\u4e2a\u540d\u79f0\u6765\u641c\u7d22\u8fd9\u4e2a\u84dd\u7259\u8bbe\u5907\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'#define bleServerName "XIAOESP32S3_BLE"\n')),(0,r.yg)("p",null,"\u5728\u672c\u6559\u7a0b\u7684\u524d\u51e0\u8282\u4e2d\uff0c\u6211\u4eec\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u5728\u670d\u52a1\u5668\u4e0b\u4f1a\u6709Characteristic\uff0c\u5728Characteristic\u4e0b\u4f1a\u6709\u503c\u548c\u5176\u4ed6\u5185\u5bb9\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u5728\u5236\u4f5c\u5e7f\u544a\u65f6\u9700\u8981\u9075\u5faa\u8fd9\u4e00\u539f\u5219\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"BLEService *pService = pServer->createService(BLEUUID((uint16_t)0x181A)); // Environmental Sensing\n  pCharacteristic = pService->createCharacteristic(\n    BLEUUID((uint16_t)0x2A59), // Analog Output\n    BLECharacteristic::PROPERTY_NOTIFY\n  );\n  pCharacteristic->addDescriptor(new BLE2902());\n")),(0,r.yg)("p",null,"\u5728\u4e0a\u9762\u7684\u7a0b\u5e8f\u4e2d\uff0c\u60a8\u53ef\u4ee5\u770b\u5230 ",(0,r.yg)("inlineCode",{parentName:"p"},"createService()")," \u7528\u4e8e\u521b\u5efa\u670d\u52a1\u5668\u3002 \u53c2\u6570\u662f\u4e00\u4e2a\u7279\u5b9a\u7684UUID\uff1a ",(0,r.yg)("strong",{parentName:"p"},"0x181A"),"\u3002\u5728\u5173\u8d38\u603b\u534f\u5b9a\u7684\u89c4\u5219\u4e2d\uff0c ",(0,r.yg)("strong",{parentName:"p"},"0x181A")," \u8868\u793a\u73af\u5883\u76d1\u6d4b\u7c7b\u578b\u6570\u636e\uff0c\u4ee5\u53ca\u76f8\u540c\u7279\u5f81\u7684UUID\uff1a ",(0,r.yg)("strong",{parentName:"p"},"0x2A59")," \u4e5f\u6709\u7740\u7279\u6b8a\u7684\u610f\u4e49\u3002\u5728GATT\u4e2d\uff0c\u5b83\u8868\u793a\u6a21\u62df\u8f93\u51fa\u3002\u8fd9\u7b26\u5408\u6211\u4eec\u7684\u5149\u4f20\u611f\u5668\u503c\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6211\u5728\u8fd9\u91cc\u5b9a\u4e49\u5b83\u3002\u4f60\u53ef\u4ee5\u9605\u8bfb",(0,r.yg)("a",{parentName:"p",href:"https://files.seeedstudio.com/wiki/SeeedStudio-XIAO-ESP32S3/res/GATT.pdf"},"here"),"\u5173\u8d38\u603b\u534f\u5b9a\u4e3a\u6211\u4eec\u51c6\u5907\u7684\u4e00\u4e9b\u5177\u4f53\u7684\u7edf\u4e00\u6218\u7ebf\u610f\u5473\u7740\u4ec0\u4e48\u3002"),(0,r.yg)("p",null,"\u5f53\u7136\uff0c\u60a8\u4e5f\u53ef\u4ee5\u5728\u4e0d\u9075\u5faaGATT\u6807\u51c6\u7684\u60c5\u51b5\u4e0b\u8bbe\u7f6eUUID\uff0c\u60a8\u53ea\u9700\u8981\u786e\u4fdd\u8fd9\u4e24\u4e2a\u503c\u662f\u552f\u4e00\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u60a8\u7684\u5ba2\u6237\u901a\u8fc7\u8bc6\u522b\u8fd9\u4e9bUUID\u6765\u67e5\u627e\u503c\u7684\u80fd\u529b\u3002\u4f60\u53ef\u4ee5\u8bbf\u95ee ",(0,r.yg)("a",{parentName:"p",href:"https://www.uuidgenerator.net/"},"uuidgenerator.net")," \u4e3a\u60a8\u7684\u670d\u52a1\u548c\u7279\u6027\u521b\u5efa\u968f\u673aUUID\u3002"),(0,r.yg)("p",null,"\u7b2c\u4e8c\u4e2a\u53c2\u6570 ",(0,r.yg)("inlineCode",{parentName:"p"},"createCharacteristic()"),"\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u5c5e\u6027\u3002 \u8bf7\u6ce8\u610f\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5c06\u5176\u8bbe\u7f6e\u4e3a",(0,r.yg)("strong",{parentName:"p"},"PROPERTY_NOTIFY"),"\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u8fde\u7eed\u53d1\u9001\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"pCharacteristic->setValue(light_val);\npCharacteristic->notify();\n")),(0,r.yg)("p",null,"\u6700\u540e\uff0c\u5728 ",(0,r.yg)("inlineCode",{parentName:"p"},"loop"),"\u4e2d\uff0c\u6211\u4eec\u53ea\u662f\u6bcf\u969410ms\u516c\u5e03\u4e00\u6b21\u8bfb\u53d6\u5149\u4f20\u611f\u5668\u7684\u503c\u3002"),(0,r.yg)("p",null,"\u4e0b\u4e00\u6b65\u662f\u5ba2\u6237\u7aef\u7a0b\u5e8f\uff0c\u5b83\u770b\u8d77\u6765\u8981\u590d\u6742\u5f97\u591a\u3002"),(0,r.yg)("p",null,"\u5728\u8282\u76ee\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u5b83\u4ecd\u7136\u662f\u975e\u5e38\u719f\u6089\u7684\u5185\u5bb9\u3002\u60a8\u9700\u8981\u786e\u4fdd\u6b64\u5185\u5bb9\u4e0e\u60a8\u5728\u670d\u52a1\u5668\u7aef\u914d\u7f6e\u7684\u5185\u5bb9\u4e00\u81f4\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'//BLE Server name (the other ESP32 name running the server sketch)\n#define bleServerName "XIAOESP32S3_BLE"\n\nBLEUUID serviceUUID("181A"); // Environmental Sensing\nBLEUUID charUUID("2A59");    // Analog Output\n')),(0,r.yg)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u7f16\u5199\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u4e3b\u8981\u529f\u80fd\u662f\u641c\u7d22\u9644\u8fd1\u7684\u84dd\u7259\u8bbe\u5907\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u60a8\u63d0\u4f9b\u7684\u84dd\u7259\u8bbe\u5907\u540d\u79f0\u8fdb\u884c\u6bd4\u8f83\uff0c\u6355\u83b7\u5b83\uff0c\u5e76\u83b7\u53d6\u5176MAC\u5730\u5740\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'class MyAdvertisedDeviceCallbacks: public BLEAdvertisedDeviceCallbacks {\n  void onResult(BLEAdvertisedDevice advertisedDevice) {\n    if (advertisedDevice.getName() == bleServerName) { //Check if the name of the advertiser matches\n      advertisedDevice.getScan()->stop(); //Scan can be stopped, we found what we are looking for\n      pServerAddress = new BLEAddress(advertisedDevice.getAddress()); //Address of advertiser is the one we need\n      Serial.println("Device found. Connecting!");\n    }\n  }\n};\n')),(0,r.yg)("p",null,"\u4ee5\u4e0b\u8fc7\u7a0b\u662f\u5728\u670d\u52a1\u5668\u4e2d\u67e5\u627e\u5149\u5f3a\u5ea6\u503c\u7684\u5173\u952e\u3002\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u627e\u5230\u6211\u4eec\u7684\u670d\u52a1\u5668UUID\uff0c\u7136\u540e\u5728\u670d\u52a1\u5668\u4e0b\u67e5\u627eCharacteristic\u7684UUID\uff0c\u6700\u540e\u627e\u5230light\u503c\u3002\u8fd9\u79cd\u89e3\u6790\u65b9\u6cd5\u4e0e\u84dd\u7259\u7684\u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},'// Obtain a reference to the service we are after in the remote BLE server.\nBLERemoteService* pRemoteService = pClient->getService(serviceUUID);\nif (pRemoteService == nullptr) {\n  Serial.print("Failed to find our service UUID: ");\n  Serial.println(serviceUUID.toString().c_str());\n  return;\n}\n\n// Obtain a reference to the characteristics in the service of the remote BLE server.\nBLERemoteCharacteristic* pCharacteristic = pRemoteService->getCharacteristic(charUUID);\nif (pCharacteristic == nullptr) {\n  Serial.print("Failed to find our characteristic UUID");\n  return;\n}\nSerial.println(" - Found light value characteristics");\n\npCharacteristic->registerForNotify([](BLERemoteCharacteristic* pBLERemoteCharacteristic, uint8_t* pData, size_t length, bool isNotify) {\n    Serial.println("Notify received");\n    Serial.print("Value: ");\n    Serial.println(*pData);\n  });\n')),(0,r.yg)("p",null,"\u6700\u540e\uff0c\u5c06\u706f\u5149\u503c\u653e\u7f6e\u5728\u6307\u9488pData\u4e2d\u3002"),(0,r.yg)("p",null,":::\u63d0\u793a\n\u4e0a\u8ff0\u793a\u4f8b\u7ed9\u51fa\u4e86\u5355\u4e2a\u4f20\u611f\u5668\u7684\u5355\u4e2a\u503c\u7684\u6700\u7b80\u5355\u793a\u4f8b\u3002\u5982\u679c\u60a8\u60f3\u901a\u8fc7\u84dd\u7259\u5ba3\u4f20\u591a\u4e2a\u4f20\u611f\u5668\u6216\u591a\u4e2a\u4f20\u611f\u5668\u503c\uff0c\u6211\u4eec\u5efa\u8bae\u60a8\u9605\u8bfb\u6b64\u5904\u7684\u6559\u7a0b\u793a\u4f8b\u3002"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("a",{parentName:"li",href:"https://randomnerdtutorials.com/esp32-ble-server-client/"},"ESP32 BLE\u670d\u52a1\u5668\u548c\u5ba2\u6237\u7aef\uff08\u84dd\u7259\u4f4e\u80fd\u8017\uff09"),"\n:::")),(0,r.yg)("h2",{id:"\u6545\u969c\u6392\u9664"},"\u6545\u969c\u6392\u9664"),(0,r.yg)("h3",{id:"q1-xiao-esp32s3\u793a\u4f8b\u4e2d\u6ca1\u6709bleoutserial"},"Q1: XIAO ESP32S3\u793a\u4f8b\u4e2d\u6ca1\u6709BleoutSerial\uff1f"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://github.com/espressif/arduino-esp32/issues/8023"},"ESP32-S3\u82af\u7247\u4e2d\u6ca1\u6709\u84dd\u7259\u7ecf\u5178\u786c\u4ef6"),"\u3002\u53ea\u6709\u201c\u8001\u201d\u7684ESP32\u624d\u80fd\u505a\u5230\u8fd9\u4e00\u70b9\u2014\u2014\u6ca1\u6709\u5176\u4ed6Espressif SoC\u62e5\u6709BT Classic\u3002"),(0,r.yg)("h2",{id:"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba"},"\u6280\u672f\u652f\u6301\u548c\u4ea7\u54c1\u8ba8\u8bba"),(0,r.yg)("p",null,"."),(0,r.yg)("p",null,"\u611f\u8c22\u60a8\u9009\u62e9\u6211\u4eec\u7684\u4ea7\u54c1\uff01\u6211\u4eec\u5728\u8fd9\u91cc\u4e3a\u60a8\u63d0\u4f9b\u4e0d\u540c\u7684\u652f\u6301\uff0c\u4ee5\u786e\u4fdd\u60a8\u4f7f\u7528\u6211\u4eec\u4ea7\u54c1\u7684\u4f53\u9a8c\u5c3d\u53ef\u80fd\u987a\u5229\u3002\u6211\u4eec\u63d0\u4f9b\u591a\u79cd\u6c9f\u901a\u6e20\u9053\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u7684\u504f\u597d\u548c\u9700\u6c42\u3002"),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,r.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,r.yg)("div",{class:"button_tech_support_container"},(0,r.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,r.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}p.isMDXComponent=!0}}]);