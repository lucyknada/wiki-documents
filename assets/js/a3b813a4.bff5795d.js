"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[45594],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>m});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(t),g=i,m=c["".concat(s,".").concat(g)]||c[g]||u[g]||r;return t?a.createElement(m,o(o({ref:n},d),{},{components:t})):a.createElement(m,o({ref:n},d))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},19365:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(96540),i=t(20053);const r={tabItem:"tabItem_Ymn6"};function o(e){let{children:n,hidden:t,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.A)(r.tabItem,o),hidden:t},n)}},11470:(e,n,t)=>{t.d(n,{A:()=>b});var a=t(58168),i=t(96540),r=t(20053),o=t(23104),l=t(56347),s=t(57485),p=t(31682),d=t(89466);function c(e){return function(e){return i.Children.map(e,(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:i}}=e;return{value:n,label:t,attributes:a,default:i}}))}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??c(t);return function(e){const n=(0,p.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function g(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const a=(0,l.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function y(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=u(e),[o,l]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!g({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:r}))),[s,p]=m({queryString:t,groupId:a}),[c,y]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,d.Dv)(t);return[a,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),h=(()=>{const e=s??c;return g({value:e,tabValues:r})?e:null})();(0,i.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!g({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),y(e)}),[p,y,r]),tabValues:r}}var h=t(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(e){let{className:n,block:t,selectedValue:l,selectValue:s,tabValues:p}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),u=e=>{const n=e.currentTarget,t=d.indexOf(n),a=p[t].value;a!==l&&(c(n),s(a))},g=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=d.indexOf(e.currentTarget)+1;n=d[t]??d[0];break}case"ArrowLeft":{const t=d.indexOf(e.currentTarget)-1;n=d[t]??d[d.length-1];break}}n?.focus()};return i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n)},p.map((e=>{let{value:n,label:t,attributes:o}=e;return i.createElement("li",(0,a.A)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>d.push(e),onKeyDown:g,onClick:u},o,{className:(0,r.A)("tabs__item",f.tabItem,o?.className,{"tabs__item--active":l===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return i.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function N(e){const n=y(e);return i.createElement("div",{className:(0,r.A)("tabs-container",f.tabList)},i.createElement(w,(0,a.A)({},e,n)),i.createElement(v,(0,a.A)({},e,n)))}function b(e){const n=(0,h.A)();return i.createElement(N,(0,a.A)({key:String(n)},e))}},20570:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var a=t(58168),i=(t(96540),t(15680)),r=t(11470),o=t(19365);const l={description:"Wio Tracker Dual Stack Version",title:"Seamless Asset Tracking with Amazon Sidewalk and LoRaWAN Networks",keywords:["Tracker","AWS","Sidewalk","LoRaWAN"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/wio_tracker_dual_stack",last_update:{date:"3/4/2024",author:"Jessie"}},s=void 0,p={unversionedId:"Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/dual-version",id:"Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/dual-version",title:"Seamless Asset Tracking with Amazon Sidewalk and LoRaWAN Networks",description:"Wio Tracker Dual Stack Version",source:"@site/docs/Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/dual-version.md",sourceDirName:"Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board",slug:"/wio_tracker_dual_stack",permalink:"/wio_tracker_dual_stack",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/Wio_Series/Wio_Tracker_1110_Dev_Board/dual-version.md",tags:[],version:"current",lastUpdatedBy:"Jessie",lastUpdatedAt:1709510400,formattedLastUpdatedAt:"Mar 4, 2024",frontMatter:{description:"Wio Tracker Dual Stack Version",title:"Seamless Asset Tracking with Amazon Sidewalk and LoRaWAN Networks",keywords:["Tracker","AWS","Sidewalk","LoRaWAN"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/wio_tracker_dual_stack",last_update:{date:"3/4/2024",author:"Jessie"}}},d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installing the nRF Connect SDK",id:"installing-the-nrf-connect-sdk",level:3},{value:"Setting up the Sidewalk environment",id:"setting-up-the-sidewalk-environment",level:3},{value:"Add LR11xx to nRF Connect SDK Sidewalk Extension",id:"add-lr11xx-to-nrf-connect-sdk-sidewalk-extension",level:3},{value:"Create Resources",id:"create-resources",level:3},{value:"LoRaWAN Configuration",id:"lorawan-configuration",level:2},{value:"Add LoRaWAN Gateway on AWS",id:"add-lorawan-gateway-on-aws",level:3},{value:"Add LoRaWAN Device on AWS",id:"add-lorawan-device-on-aws",level:3},{value:"Sidewalk Configuration",id:"sidewalk-configuration",level:2},{value:"Setting up a Sidewalk gateway (Optional)",id:"setting-up-a-sidewalk-gateway-optional",level:3},{value:"Setting up your Sidewalk device",id:"setting-up-your-sidewalk-device",level:3},{value:"Add your Sidewalk device",id:"add-your-sidewalk-device",level:4},{value:"Sidewalk Register",id:"sidewalk-register",level:3},{value:"Network Switch",id:"network-switch",level:3},{value:"View Message",id:"view-message",level:3},{value:"Add Destination",id:"add-destination",level:4},{value:"Add Decoder Rule",id:"add-decoder-rule",level:4},{value:"Add Tracker Rule",id:"add-tracker-rule",level:4},{value:"Building Web App",id:"building-web-app",level:2},{value:"Creating Map",id:"creating-map",level:3},{value:"Creating Router Calculator",id:"creating-router-calculator",level:3},{value:"Creating Tracker",id:"creating-tracker",level:3},{value:"Creating Geofence Collection",id:"creating-geofence-collection",level:3},{value:"Display Web App",id:"display-web-app",level:2},{value:"Deploy App to Cloudfront",id:"deploy-app-to-cloudfront",level:3},{value:"Resource",id:"resource",level:2}],u={toc:c},g="wrapper";function m(e){let{components:n,...t}=e;return(0,i.yg)(g,(0,a.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"introduction"},"Introduction"),(0,i.yg)("p",null,"Experience seamless network integration with this dual-device demo. The setup features the versatile Seeed Studio Wio Tracker Dev Board and the robust Seeed Studio SenseCAP T1000-S Tracker device, both showcasing seamless transitions between LoRaWAN and Sidewalk networks for optimal coverage."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Dual Network Support"),": With a single button press, switch between LoRaWAN and Sidewalk to maintain persistent connectivity."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Cloud-Connected"),": Witness data transfer in real-time to AWS IoT Core, visualized through an AWS web app on a laptop display/monitor."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Battery-Powered Efficiency"),": The devices ensure consistent operation, untethered by wires for a truly mobile experience.")),(0,i.yg)("p",null,"The process is divided into these main steps:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/wio_tracker_dual_stack#setup-toolchain"},"SDK Installation and Setup")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/wio_tracker_dual_stack#build-and-flash-the-demo"},"Firmware Flashing")),(0,i.yg)("li",{parentName:"ul"},"AWS IoT Core Configuration"),(0,i.yg)("li",{parentName:"ul"},"Amazon Location Configuration"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/wio_tracker_dual_stack#building-web-app"},"Web App Configuration"))),(0,i.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,i.yg)("h3",{id:"installing-the-nrf-connect-sdk"},"Installing the nRF Connect SDK"),(0,i.yg)("p",null,"There are different ways to install the nRF Connect SDK, depending on your preferred development environment and the ",(0,i.yg)("a",{parentName:"p",href:"https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/installation/recommended_versions.html#toolchain-management-tools"},"toolchain management tool"),":"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Using Visual Studio Code and the nRF Connect for VS Code extension (recommended)")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Using command line and nRF Util"))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1: Update operating system")),(0,i.yg)("p",null,"Before you start setting up the toolchain, install available updates for your operating system. See ",(0,i.yg)("a",{parentName:"p",href:"https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/installation/recommended_versions.html#requirements"},"Requirements")," for information on the supported operating systems."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2: Install prerequisites")),(0,i.yg)(r.A,{mdxType:"Tabs"},(0,i.yg)(o.A,{value:"VSc",label:"Visual Studio Code",mdxType:"TabItem"},(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The latest version of the ",(0,i.yg)("a",{href:"https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/installation/recommended_versions.html#requirements-clt"},"nRF Command Line Tools")," package. Download it from the ",(0,i.yg)("a",{href:"https://www.nordicsemi.com/Software-and-Tools/Development-Tools/nRF-Command-Line-Tools"},"nRF Command Line Tools")," page.",(0,i.yg)("br",null))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The latest version of Visual Studio Code for your operating system from the ",(0,i.yg)("a",{href:"https://code.visualstudio.com/download"},"Visual Studio Code download page"),".",(0,i.yg)("br",null))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"In Visual Studio Code, the latest version of the ",(0,i.yg)("a",{href:"https://marketplace.visualstudio.com/items?itemName=nordic-semiconductor.nrf-connect-extension-pack"},"nRF Connect for VS Code Extension Pack"),". ")))),(0,i.yg)(o.A,{value:"CLine",label:"Command Line",mdxType:"TabItem"},(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The latest version of ",(0,i.yg)("a",{href:"https://www.nordicsemi.com/Products/Development-tools/nrf-util"},"nRF Util development tool"),",a unified command line utility for Nordic products.",(0,i.yg)("br",null))),(0,i.yg)("div",{className:"tip",style:{backgroundColor:"lightblue",padding:"1em",borderRadius:"0.5em"}},(0,i.yg)("p",{style:{marginBottom:"0.5em"}},(0,i.yg)("strong",null,"Note:")),(0,i.yg)("p",{style:{marginTop:"0"}},"After downloading the nRF Util executable, move it to a directory that is in the system ",(0,i.yg)("code",null,"PATH"),". On macOS and Linux, the downloaded file also needs to be given execute permission by typing ",(0,i.yg)("code",null,"chmod +x nrfutil")," or by checking the checkbox in the file properties.")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The latest version of ",(0,i.yg)("a",{href:"https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/installation/recommended_versions.html#requirements-clt"},"nRF Command Line Tools")," package,Download it from the ",(0,i.yg)("a",{href:"https://www.nordicsemi.com/Software-and-Tools/Development-Tools/nRF-Command-Line-Tools"},"nRF Command Line Tools")," page.")),(0,i.yg)("div",{className:"tip",style:{backgroundColor:"lightblue",padding:"1em",borderRadius:"0.5em"}},(0,i.yg)("p",{style:{marginBottom:"0.5em"}},(0,i.yg)("strong",null,"Note:")),(0,i.yg)("p",{style:{marginTop:"0"}},"After downloading and installing the tools, add nrfjprog to the system ",(0,i.yg)("code",null,"PATH")," in the environment variables.")))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3: Install the nRF Connect SDK toolchain")),(0,i.yg)(r.A,{mdxType:"Tabs"},(0,i.yg)(o.A,{value:"VScode",label:"nRF Connect for Visual Studio Code",mdxType:"TabItem"},(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Open the nRF Connect extension in Visual Studio Code by clicking its icon in the ",(0,i.yg)("code",null,"Activity Bar"),".",(0,i.yg)("br",null),(0,i.yg)("br",null)),(0,i.yg)("li",{parentName:"ul"},"In the extension\u2019s ",(0,i.yg)("code",null,"Welcome View"),", click on ",(0,i.yg)("code",null,"Install Toolchain"),".",(0,i.yg)("br",null),(0,i.yg)("br",null)),(0,i.yg)("li",{parentName:"ul"},"Select the toolchain version to install. The toolchain version should match the nRF Connect SDK version you are going to work with. We use the ",(0,i.yg)("code",null,"V2.5.0"),"(recommended).",(0,i.yg)("br",null),(0,i.yg)("br",null))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/bar2.png"})),"After installing the toolchain, you can access the ",(0,i.yg)("code",null,"Install Toolchain")," option by clicking on ",(0,i.yg)("code",null,"Manage toolchains"),".",(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/manage-toolchain.png"}))),(0,i.yg)(o.A,{value:"CL",label:"Command Line",mdxType:"TabItem"},(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Open a terminal window.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Run the following command to install the nRF Util toolchain-manager command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"nrfutil install toolchain-manager\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Run the following command to list the available installations:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"nrfutil toolchain-manager search\n")))),(0,i.yg)("p",null,"The versions from this list correspond to the nRF Connect SDK versions and will be version in the following step."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Run the following command to install the toolchain version for the SDK version of your choice:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"nrfutil toolchain-manager install --ncs-version version\n")),(0,i.yg)("p",{parentName:"li"}," For example:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"nrfutil toolchain-manager install --ncs-version v2.5.0\n")),(0,i.yg)("p",{parentName:"li"},"This example command installs the toolchain required for the nRF Connect SDK v2.5.0(recommended)."))),(0,i.yg)("admonition",{type:"tip"},(0,i.yg)("p",{parentName:"admonition"},"The toolchain is installed by default at C:/ncs/toolchains on Windows, ~/ncs/toolchains on Linux, and /opt/nordic/ncs/toolchains on macOS.")),(0,i.yg)("p",null,"To check the current configuration setting, use the ",(0,i.yg)("code",null,"nrfutil toolchain-manager config --show")," command. ",(0,i.yg)("br",null),"To read more about these commands, use the ",(0,i.yg)("code",null,"nrfutil toolchain-manager --help")," command."))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4: Get the nRF Connect SDK code")),(0,i.yg)(r.A,{mdxType:"Tabs"},(0,i.yg)(o.A,{value:"VScode4",label:"nRF Connect for Visual Studio Code",mdxType:"TabItem"},(0,i.yg)("p",null,"To clone the nRF Connect SDK code, complete the following steps:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Open the nRF Connect extension in Visual Studio Code by clicking its icon in the ",(0,i.yg)("code",null,"Activity Bar"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"In the extension\u2019s ",(0,i.yg)("code",null,"Welcome View"),", click on ",(0,i.yg)("code",null,"Manage SDKs"),". The list of actions appears in the Visual Studio Code\u2019s quick pick."))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Click ",(0,i.yg)("code",null,"Install SDK"),". The list of available SDK versions appears in the Visual Studio Code\u2019s quick pick.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Select the SDK version to install, we use ",(0,i.yg)("inlineCode",{parentName:"p"},"V2.5.0"),"."))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/manage-sdk2.png"})),(0,i.yg)("p",null,"The SDK installation starts and it can take several minutes.")),(0,i.yg)(o.A,{value:"CLine4",label:"Command Line",mdxType:"TabItem"},(0,i.yg)("p",null,"To clone the repositories, complete the following steps:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"On the command line, open the directory ",(0,i.yg)("inlineCode",{parentName:"p"},"ncs"),". By default, this is one level up from the location where you installed the toolchain. This directory will hold all nRF Connect SDK repositories.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Start the toolchain environment for your operating system using the following command:"),(0,i.yg)("p",{parentName:"li"},"Windows"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"nrfutil toolchain-manager launch --terminal\n")),(0,i.yg)("p",{parentName:"li"},"Linux/macOS"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"nrfutil toolchain-manager launch --shell\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Determine the identifier of the revision of the nRF Connect SDK you want to work with. See the table above for more information. When you first install the nRF Connect SDK, it is recommended to install the latest released versions of the SDK and the toolchain.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Initialize west with the revision of the nRF Connect SDK that you want to check out, replacing nRFConnectSDK_revision with the identifier:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west init -m https://github.com/nrfconnect/sdk-nrf --mr nRFConnectSDK_revision\n")),(0,i.yg)("p",{parentName:"li"},"For example:"),(0,i.yg)("p",{parentName:"li"},"  ",(0,i.yg)("strong",{parentName:"p"},"Specific release"),": To check out the v2.5.0 release, enter the following command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west init -m https://github.com/nrfconnect/sdk-nrf --mr v2.5.0\n")),(0,i.yg)("p",{parentName:"li"},"  ",(0,i.yg)("strong",{parentName:"p"},"Development tag"),": To check out the v1.9.2-dev1 tag, enter the following command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west init -m https://github.com/nrfconnect/sdk-nrf --mr v1.9.2-dev1\n")),(0,i.yg)("p",{parentName:"li"},"  ",(0,i.yg)("strong",{parentName:"p"},"Branch"),": To check out the main branch that includes the latest state of development, enter the following command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west init -m https://github.com/nrfconnect/sdk-nrf --mr main\n")),(0,i.yg)("p",{parentName:"li"},"This will clone the manifest repository sdk-nrf into nrf."))),(0,i.yg)("p",null,"Initializing west with a specific revision of the manifest file does not lock your repositories to this version. Checking out a different branch or tag in the sdk-nrf repository and running west update changes the version of the nRF Connect SDK that you work with."),(0,i.yg)("div",{className:"tip",style:{backgroundColor:"lightblue",padding:"1em",borderRadius:"0.5em"}},(0,i.yg)("p",{style:{marginBottom:"0.5em"}},(0,i.yg)("strong",null,"Note:")),(0,i.yg)("p",{style:{marginTop:"0"}},"If you get an error message when running west, update west to the latest version. See ",(0,i.yg)("a",{href:"https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/zephyr/develop/west/troubleshooting.html#west-troubleshooting"},"Troubleshooting West")," in the Zephyr documentation for more information.")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Enter the following command to clone the project repositories:",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west update\n")))),(0,i.yg)("p",null,"Depending on your connection, this might take some time."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Export a Zephyr CMake package. This allows CMake to automatically load the boilerplate code required for building nRF Connect SDK applications:",(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west zephyr-export\n")))),(0,i.yg)("p",null,"Check ",(0,i.yg)("a",{parentName:"p",href:"https://developer.nordicsemi.com/nRF_Connect_SDK/doc/latest/nrf/installation/install_ncs.html#id9"},"Installing the nRF Connect SDK")," for more details."))),(0,i.yg)("h3",{id:"setting-up-the-sidewalk-environment"},"Setting up the Sidewalk environment"),(0,i.yg)("p",null,"Follow these steps to download the Sidewalk application for the nRF Connect SDK:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Open a terminal window. Your directory structure should look as follows:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},".\n|___ .west\n|___ bootloader\n|___ modules\n|___ nrf\n|___ nrfxlib\n|___ zephyr\n|___ ...\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Make sure the manifest path points to west.yml inside the nrf directory:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west manifest --path\n/path-to-ncs-folder/nrf/west.yml\n")),(0,i.yg)("p",null,"In case your manifest path points to a different file, use the following command:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west config manifest.path nrf\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Enable the Sidewalk group filter for west.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'west config manifest.group-filter "+sidewalk"\n')),(0,i.yg)("p",null,"Check for Sidewalk presence in west:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west list sidewalk\nsidewalk     sidewalk                     <sidewalk_revision> https://github.com/nrfconnect/sdk-sidewalk\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Update all repositories:")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west update\n")),(0,i.yg)("p",null,"Depending on your connection, the update might take some time."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Install Python requirements for Sidewalk.")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"pip install -r sidewalk/requirements.txt\n")),(0,i.yg)("h3",{id:"add-lr11xx-to-nrf-connect-sdk-sidewalk-extension"},"Add LR11xx to nRF Connect SDK Sidewalk Extension"),(0,i.yg)("p",null,"This repository contains the software driver that enables the ",(0,i.yg)("a",{parentName:"p",href:"https://www.semtech.com/products/wireless-rf/lora-edge"},"LR11xx family")," of silicon to support the Sidewalk protocol when paired with the ",(0,i.yg)("a",{parentName:"p",href:"https://www.nordicsemi.com/Products/Development-hardware/nrf52840-dk"},"Nordic nRF52840 MCU"),' and nRF Connect SDK. The driver is offered in binary form, as a static library which implements the "Platform Abstraction Layer" interfaces necessary to support LoRa or FSK connectivity. The static library contains within it a complete implementation of Semtech\'s SWDR001 (LR11xx Driver), which can be used to access other features of the LR11xx silicon, such as WIFI and GNSS scanning and ranging.'),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Download the ",(0,i.yg)("a",{parentName:"p",href:"https://drive.google.com/drive/folders/1vHJVEFgyx4arHHPlSjdMkffVStnTpHqg?usp=sharing"},"SWDM016"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"With your working directory in cloned nordic repo, at top level directory, i.e. ",(0,i.yg)("inlineCode",{parentName:"p"},"~/ncs/<version>/sidewalk"),":"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"patch -p1 < ../nRF52840_LR11xx_driver_v010000.diff\n")),(0,i.yg)("p",{parentName:"li"},"parent directory path ",(0,i.yg)("inlineCode",{parentName:"p"},"..")," assumes you put the diff file there, otherwise you can specify the full path to its location.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Copy radio driver libraries ",(0,i.yg)("inlineCode",{parentName:"p"},"lib*.a")," into sidewalk project to ",(0,i.yg)("inlineCode",{parentName:"p"},"~/ncs/<version>/sidewalk/lib/lora_fsk/"),(0,i.yg)("br",{parentName:"p"}),"\n","There are two libraries provided, one with ",(0,i.yg)("inlineCode",{parentName:"p"},"LOG_RUNTIME_FILTERING")," enabled and other without."))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Copy ",(0,i.yg)("inlineCode",{parentName:"li"},"~/template_lbm_wio_tracker/boards/arm/wio_tracker_1110")," folder to ",(0,i.yg)("inlineCode",{parentName:"li"},"~/ncs/v2.5.0/zephyr/boards/arm"),".")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"\xb7\n\u251c\u2500\u2500\u2500 .west/\n\u251c\u2500\u2500\u2500 modules/\n\u251c\u2500\u2500\u2500 nrf/\n\u251c\u2500\u2500\u2500 ...\n\u2514\u2500\u2500\u2500 zephyr/\n     \u2514\u2500\u2500\u2500 Boards/\n          \u2514\u2500\u2500\u2500 arm/\n               \u2514\u2500\u2500\u2500 wio_tracker_1110/\n")),(0,i.yg)("h3",{id:"create-resources"},"Create Resources"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1: Deploy Cloud9 Environment")),(0,i.yg)("p",null,"In this section you will create all the resources that we need before getting started. As a first step you will create a Cloud9 Workspace that you'll use to build and deploy other resources. Then you will deploy a CDK Stack that contains all the backend resources for the Asset Tracker app. Finally, you will install all the frontend dependencies and configure the app."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Open the ",(0,i.yg)("a",{parentName:"li",href:"https://us-east-1.console.aws.amazon.com/cloud9/home?region=us-east-1"},"AWS Cloud9 Console"),", click ",(0,i.yg)("inlineCode",{parentName:"li"},"Create Environment"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/cloud-9-environment.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Leave all other settings as default except the ",(0,i.yg)("strong",{parentName:"li"},"Instance type"),". Select ",(0,i.yg)("inlineCode",{parentName:"li"},"m5.large"),".")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/001/002/c9.3.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2: Configure Prerequisites")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Open the Cloud9 IDE.")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/open-cloud9.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Clone the github repo in your Cloud9 environment terminal by entering the following command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"git clone --recurse-submodules https://github.com/aws-samples/aws-iot-asset-tracker-demo.git /home/ec2-user/environment/asset-tracking-workshop\n")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/open-could9.png"}))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Navigate to the sample app directory:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"cd ~/environment/asset-tracking-workshop\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Resize the EBS Volume of the underlying EC2 instance."),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"npm run utils:resizeC9EBS\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Install the project's dependencies:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"npm ci\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Deploy the backend infrastructure:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"# Prepare the AWS account for CDK\nnpm run infra:bootstrap\n# Deploy the backend resources\nnpm run infra:deploy\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Create a config file:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"npm run utils:createConfig\n")))),(0,i.yg)("h2",{id:"lorawan-configuration"},"LoRaWAN Configuration"),(0,i.yg)("h3",{id:"add-lorawan-gateway-on-aws"},"Add LoRaWAN Gateway on AWS"),(0,i.yg)("p",null,"Check this ",(0,i.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Network/SenseCAP_Network/SenseCAP_M2_Multi_Platform/Tutorial/Connect-M2-Multi-Platform-Gateway-to-AWS-IoT/#add-gateway"},"Get Started")," to add the ",(0,i.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/SenseCAP-Multi-Platform-LoRaWAN-Indoor-Gateway-SX1302-US915-p-5472.html"},"SenseCAP M2 Multi-Platform gateway")," to AWS IoT Core."),(0,i.yg)("h3",{id:"add-lorawan-device-on-aws"},"Add LoRaWAN Device on AWS"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1: Define the keys")),(0,i.yg)("p",null,"Define the ",(0,i.yg)("inlineCode",{parentName:"p"},"DevEUI/JoinEUI/APPkey")," and the ",(0,i.yg)("inlineCode",{parentName:"p"},"REGION")," in ",(0,i.yg)("inlineCode",{parentName:"p"},"src/lorawan_v4/example_options.h"),"."),(0,i.yg)("admonition",{type:"tip"},(0,i.yg)("p",{parentName:"admonition"},"JoinEUI also known as AppEUI")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/3-params.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2: Create profiles")),(0,i.yg)("p",null,"Login to ",(0,i.yg)("a",{parentName:"p",href:"https://console.aws.amazon.com/iot/home"},"AWS IoT Console"),", navigate to ",(0,i.yg)("inlineCode",{parentName:"p"},"Devices"),", click ",(0,i.yg)("inlineCode",{parentName:"p"},"Profiles"),"."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Device profile")),(0,i.yg)("p",null,"Device profiles define the device capabilities and boot parameters that the network server uses to set the LoRaWAN radio access service. It includes selection of parameters such as LoRa frequency band, LoRa regional parameters version, and MAC version of the device. "),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/device-profiles.png"})),(0,i.yg)("p",null,"To learn about the different frequency bands, see ",(0,i.yg)("a",{parentName:"p",href:"https://docs.aws.amazon.com/iot-wireless/latest/developerguide/lorawan-rfregion-permissions.html#lorawan-frequency-bands"},"Consider selection of LoRa frequency bands for your gateways and device connection"),"."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Service profile")),(0,i.yg)("p",null,"We recommend that you leave the setting ",(0,i.yg)("inlineCode",{parentName:"p"},"AddGWMetaData")," enabled so that you'll receive additional gateway metadata for each payload, such as RSSI and SNR for the data transmission."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/service-profiles.png"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3: Add device")),(0,i.yg)("p",null,"Navigate to ",(0,i.yg)("inlineCode",{parentName:"p"},"LPWAN devices")," > ",(0,i.yg)("inlineCode",{parentName:"p"},"Devices"),", click ",(0,i.yg)("inlineCode",{parentName:"p"},"Add wireless device"),"."),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"Wireless device specification"),": OTAAv1.0x"),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/M2_Multi-Platform/AWS20.PNG",alt:"pir",width:800,height:"auto"})),(0,i.yg)("p",null,"Select the device profile and destination you created in the previous step. "),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/device-eui2.png",alt:"pir",width:800,height:"auto"})),(0,i.yg)("p",null,"Navigate to the Devices page and choose the device you added before."),(0,i.yg)("h2",{id:"sidewalk-configuration"},"Sidewalk Configuration"),(0,i.yg)("h3",{id:"setting-up-a-sidewalk-gateway-optional"},"Setting up a Sidewalk gateway (Optional)"),(0,i.yg)("p",null,"You can set up a Sidewalk gateway, configure it, and associate your gateway with your Amazon account. Your Sidewalk endpoint will connect to and communicate with the Sidewalk gateway after it\u2019s registered with Amazon Sidewalk. "),(0,i.yg)("p",null,"Check ",(0,i.yg)("a",{parentName:"p",href:"https://docs.sidewalk.amazon/getting-started/sidewalk-onboard-prereq-gateway.html"},"Setting up a Sidewalk gateway")," for more details."),(0,i.yg)("h3",{id:"setting-up-your-sidewalk-device"},"Setting up your Sidewalk device"),(0,i.yg)("h4",{id:"add-your-sidewalk-device"},"Add your Sidewalk device"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 1: Add your device profile and Sidewalk end device")),(0,i.yg)("p",null,"Before creating a wireless device, first create a device profile."),(0,i.yg)("p",null,"Navigat to the ",(0,i.yg)("a",{parentName:"p",href:"https://console.aws.amazon.com/iot/home#/wireless/devices?tab=sidewalk"},"Sidewalk tab of the Devices hub"),", choose ",(0,i.yg)("inlineCode",{parentName:"p"},"Provision device"),", and then perform the following steps."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 2: Obtain device JSON file")),(0,i.yg)("p",null,"To obtain the JSON file for provisioning your Sidewalk device:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Go to the ",(0,i.yg)("a",{parentName:"p",href:"https://console.aws.amazon.com/iot/home#/wireless/devices?tab=sidewalk"},"Sidewalk devices hub"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Choose the device that you added to AWS IoT Core for Amazon Sidewalk to view its details.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Obtain the JSON file by choosing ",(0,i.yg)("inlineCode",{parentName:"p"},"Download device JSON file")," in the details page of the device that you added."),(0,i.yg)("p",{parentName:"li"},"A ",(0,i.yg)("inlineCode",{parentName:"p"},"certificate.json")," file will be downloaded that contains the required information for provisioning your end device. "))),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/download-json.png",alt:"pir",width:800,height:"auto"})),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 3: Provision your Sidewalk endpoint")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Generate binary image")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Install the requirements file"),(0,i.yg)("p",{parentName:"li"},"Go to the Sidewalk SDK folder ",(0,i.yg)("inlineCode",{parentName:"p"},"$[Amazon Sidewalk repository]/tools/scripts/public/provision/"),", and then run the following command to install the ",(0,i.yg)("inlineCode",{parentName:"p"},"requirements")," file."),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"pip3 install -r requirements.txt\n")))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Generate the manufacturing binary image"),(0,i.yg)("p",{parentName:"li"},"Run the ",(0,i.yg)("inlineCode",{parentName:"p"},"provision.py")," script to generate the manufacturing binary image file that will be used to provision the development board that you are using as a Sidewalk endpoint."))),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"If you\u2019re using the combined device JSON file that you obtained from the AWS IoT console, use the certificate_json parameter to specify this file as input when running the provisioning script."),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"python3 provision.py aws --output_bin mfg.bin --certificate_json certificate.json \\ \n   --config config/[device_vendor]/[device]_dk/config.yaml\n")),(0,i.yg)("p",{parentName:"li"},"If you\u2019re using the separate device JSON files that you obtained as responses from the GetDeviceProfile and GetWirelessDevice API operations, use the wireless_device_json and device_profile_json parameters to specify these files as input when running the provisioning script."),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"python3 provision.py aws --output_bin mfg.bin \\  \n   --wireless_device_json wireless_device.json \\\n   --device_profile_json device_profile.json \\ \n   --config config/[device_vendor]/[device]_dk/config.yaml\n")))),(0,i.yg)("p",null,"You should see the following output:"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/gen-files.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Flash the mfg.hex file"),(0,i.yg)("p",{parentName:"li"},"Your provisioning file will be typically located in the ",(0,i.yg)("inlineCode",{parentName:"p"},"EdgeDeviceProvisioning")," directory."))),(0,i.yg)("p",null," To flash the binary image, use the address ",(0,i.yg)("inlineCode",{parentName:"p"},"0xFD000")," for loading the binary image on the Nordic Semiconductor HDK. For information about flashing the binary image, see the Nordic Semiconductor documentation."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Step 4: Build and flash the demo")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Open a terminal window.")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Go to the ",(0,i.yg)("inlineCode",{parentName:"p"},"template_lbm_wio_tracker")," directory."),(0,i.yg)("p",{parentName:"li"},"For example:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"cd /opt/nordic/ncs/v2.5.0/sidewalk/samples/template_lbm_wio_tracker\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Build the application by using the following west command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west build --board wio_tracker_1110 -- -DRADIO=LR1110_SRC\n")),(0,i.yg)("p",{parentName:"li"},"or with pre-compiled radio driver library:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west build --board wio_tracker_1110 -- -DRADIO=LR1110\n")))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/comparing.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Flash the application by using the following west command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"west flash\n")))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/flash-suc.png"})),(0,i.yg)("h3",{id:"sidewalk-register"},"Sidewalk Register"),(0,i.yg)("p",null,"After you\u2019ve provisioned the Sidewalk endpoint, the endpoint must be registered so that it can communicate over the Sidewalk network."),(0,i.yg)("p",null,"To register your Sidewalk endpoint, either use automatic touchless registration with Sidewalk Frustration Free Networking (FFN), or manually register your device using a Mac or native Ubuntu machine that runs the registration script. "),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Criteria\tAutomatic"),(0,i.yg)("th",{parentName:"tr",align:null},"registration (using Sidewalk FFN)"),(0,i.yg)("th",{parentName:"tr",align:null},"Manual registration"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"User and endpoint association"),(0,i.yg)("td",{parentName:"tr",align:null},"This registration method doesn\u2019t require any association between the Sidewalk endpoint and a user. The endpoint can join the Sidewalk network without being associated with any user."),(0,i.yg)("td",{parentName:"tr",align:null},"This registration method requires an association between the Sidewalk endpoint and a user\u2019s Amazon account.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"LWA (Login with Amazon)"),(0,i.yg)("td",{parentName:"tr",align:null},"LWA is not required."),(0,i.yg)("td",{parentName:"tr",align:null},"LWA is required to link the user\u2019s Amazon account and the AWS account that\u2019s used by the Sidewalk endpoint developer.")))),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"To perform registration using Sidewalk FFN:")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Your Sidewalk gateway and endpoint must be powered on."),(0,i.yg)("li",{parentName:"ul"},"Your gateway must be opted into Sidewalk, and in close range to your endpoint. We recommend that you keep the devices within 10 meters of each other.")),(0,i.yg)("p",null," For ",(0,i.yg)("inlineCode",{parentName:"p"},"Manual Sidewalk registration")," and other details please check ",(0,i.yg)("a",{parentName:"p",href:"https://docs.sidewalk.amazon/provisioning/iot-sidewalk-register-endpoint.html"},"here"),"."),(0,i.yg)("h3",{id:"network-switch"},"Network Switch"),(0,i.yg)("p",null," The default is LoRaWAN network, click the ",(0,i.yg)("inlineCode",{parentName:"p"},"BUTTON")," to switch network."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/click-button.png"})),(0,i.yg)("h3",{id:"view-message"},"View Message"),(0,i.yg)("h4",{id:"add-destination"},"Add Destination"),(0,i.yg)("p",null,"In the ",(0,i.yg)("a",{parentName:"p",href:"https://us-east-1.console.aws.amazon.com/iot/home?region=us-east-1#/home"},"IoT Core console"),", select ",(0,i.yg)("inlineCode",{parentName:"p"},"LPWAN devices")," from the left menu and then ",(0,i.yg)("inlineCode",{parentName:"p"},"Destinations"),". "),(0,i.yg)("p",null,"Select ",(0,i.yg)("inlineCode",{parentName:"p"},"Edit")," and select ",(0,i.yg)("inlineCode",{parentName:"p"},"Publish to AWS IoT Core message broker"),". In the topic text box, enter assets as the MQTT Topic."),(0,i.yg)("p",null,"Under ",(0,i.yg)("inlineCode",{parentName:"p"},"Permissions")," select ",(0,i.yg)("inlineCode",{parentName:"p"},"Create a new service role")," and leave the ",(0,i.yg)("inlineCode",{parentName:"p"},"Role name")," blank."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"ExpressionType"),": ",(0,i.yg)("inlineCode",{parentName:"li"},"MqttTopic")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"Expression"),": ",(0,i.yg)("inlineCode",{parentName:"li"},"EmbeddedWorldTrackerDemo"))),(0,i.yg)("h4",{id:"add-decoder-rule"},"Add Decoder Rule"),(0,i.yg)("p",null,"Navigate to ",(0,i.yg)("inlineCode",{parentName:"p"},"Message routing")," tab \u2192 ",(0,i.yg)("inlineCode",{parentName:"p"},"Rules"),", and click ",(0,i.yg)("inlineCode",{parentName:"p"},"Create Rule")," button."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/rules.png"})),(0,i.yg)("p",null,"Name your rule and submit it."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/rules2.png"})),(0,i.yg)("p",null,"From the IoT Core Rule, select the ",(0,i.yg)("inlineCode",{parentName:"p"},"Lambda")," Function.  then click ",(0,i.yg)("inlineCode",{parentName:"p"},"Create a Lambda function"),"."),(0,i.yg)("p",null,"Author from scratch",(0,i.yg)("br",null),"\n",(0,i.yg)("inlineCode",{parentName:"p"},"Function name"),": Name your function.",(0,i.yg)("br",null),"\n",(0,i.yg)("inlineCode",{parentName:"p"},"Runtime"),": Node.js 14.x",(0,i.yg)("br",null),"\n",(0,i.yg)("inlineCode",{parentName:"p"},"Architexture"),": x86_64",(0,i.yg)("br",null)),(0,i.yg)("p",null,"Click ",(0,i.yg)("inlineCode",{parentName:"p"},"Create function")," button to create a new function"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/cre-function.png"})),(0,i.yg)("p",null,"On the following funcition config page, remove all the code and replace it with the following script, then click ",(0,i.yg)("inlineCode",{parentName:"p"},"Deploy")," button."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/decod.png"})),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Lambda Code"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"const {IoTDataPlaneClient, PublishCommand} = require(\"@aws-sdk/client-iot-data-plane\");\nconst {IoTWirelessClient, GetWirelessDeviceCommand} = require(\"@aws-sdk/client-iot-wireless\");\nconst client = new IoTDataPlaneClient({\n    \"region\": \"us-east-1\"\n});\nconst wireless_client = new IoTWirelessClient({\n    \"region\": \"us-east-1\"\n});\n\nfunction decodeUplink(input) {\n    const originMessage = input.toLocaleUpperCase()\n    const decoded = {\n        valid: true,\n        err: 0,\n        payload: input,\n        messages: []\n    }\n    let measurement = messageAnalyzed(originMessage)\n    if (measurement.length === 0) {\n        decoded.valid = false\n        return {data: decoded}\n    }\n\n    for (let message of measurement) {\n        if (message.length === 0) {\n            continue\n        }\n        let elements = []\n        for (let element of message) {\n            if (element.errorCode) {\n                decoded.err = element.errorCode\n                decoded.errMessage = element.error\n            } else {\n                elements.push(element)\n            }\n        }\n        if (elements.length > 0) {\n            decoded.messages.push(elements)\n        }\n    }\n    return {data: decoded}\n}\n\nfunction messageAnalyzed(messageValue) {\n    try {\n        let frames = unpack(messageValue)\n        let measurementResultArray = []\n        for (let i = 0; i < frames.length; i++) {\n            let item = frames[i]\n            let dataId = item.dataId\n            let dataValue = item.dataValue\n            let measurementArray = deserialize(dataId, dataValue)\n            measurementResultArray.push(measurementArray)\n        }\n        return measurementResultArray\n    } catch (e) {\n        return e.toString()\n    }\n}\n\nfunction unpack(messageValue) {\n    return [{dataId: 0, dataValue: messageValue}]\n}\n\nfunction deserialize(dataId, dataValue) {\n    let measurementArray = null\n    measurementArray = [\n        {\n            measurementId: '4198',\n            type: 'Latitude',\n            measurementValue: parseFloat(getSensorValue(dataValue.substring(0, 8), 1000000))\n        },\n        {\n            measurementId: '4197',\n            type: 'Longitude',\n            measurementValue: parseFloat(getSensorValue(dataValue.substring(8, 16), 1000000))\n        },\n        {\n            measurementId: '4097',\n            type: 'Air Temperature',\n            measurementValue: getSensorValue(dataValue.substring(16, 20), 10)\n        },\n        {\n            measurementId: '4098',\n            type: 'Air Humidity',\n            measurementValue: getSensorValue(dataValue.substring(20, 22))\n        }\n    ]\n    return measurementArray\n}\n\nfunction getSensorValue(str, dig) {\n    if (str === '8000') {\n        return null\n    } else {\n        return loraWANV2DataFormat(str, dig)\n    }\n}\n\nfunction bytes2HexString(arrBytes) {\n    var str = ''\n    for (var i = 0; i < arrBytes.length; i++) {\n        var tmp\n        var num = arrBytes[i]\n        if (num < 0) {\n            tmp = (255 + num + 1).toString(16)\n        } else {\n            tmp = num.toString(16)\n        }\n        if (tmp.length === 1) {\n            tmp = '0' + tmp\n        }\n        str += tmp\n    }\n    return str\n}\n\nfunction loraWANV2DataFormat(str, divisor = 1) {\n    let strReverse = bigEndianTransform(str)\n    let str2 = toBinary(strReverse)\n    if (str2.substring(0, 1) === '1') {\n        let arr = str2.split('')\n        let reverseArr = arr.map((item) => {\n            if (parseInt(item) === 1) {\n                return 0\n            } else {\n                return 1\n            }\n        })\n        str2 = parseInt(reverseArr.join(''), 2) + 1\n        return '-' + str2 / divisor\n    }\n    return parseInt(str2, 2) / divisor\n}\n\nfunction bigEndianTransform(data) {\n    let dataArray = []\n    for (let i = 0; i < data.length; i += 2) {\n        dataArray.push(data.substring(i, i + 2))\n    }\n    return dataArray\n}\n\nfunction toBinary(arr) {\n    let binaryData = arr.map((item) => {\n        let data = parseInt(item, 16)\n            .toString(2)\n        let dataLength = data.length\n        if (data.length !== 8) {\n            for (let i = 0; i < 8 - dataLength; i++) {\n                data = `0` + data\n            }\n        }\n        return data\n    })\n    return binaryData.toString().replace(/,/g, '')\n}\n\nexports.handler = async (event) => {\n    try {\n        let device_id = event['WirelessDeviceId'];\n        let lorawan_info = null;\n        let sidewalk_info = null;\n        let payload = null\n        let timestamp = null\n\n        let queryDeviceRequest = {\n            Identifier: device_id,\n            IdentifierType: \"WirelessDeviceId\"\n        }\n        let deviceInfo = await wireless_client.send(new GetWirelessDeviceCommand(queryDeviceRequest))\n        console.log(\"device_info\uff1a\" + JSON.stringify(deviceInfo))\n        if (!deviceInfo || deviceInfo.name) {\n            return {\n                statusCode: 500,\n                body: 'can not find this wirelessDeviceId: ' + device_id\n            };\n        }\n        let device_name = deviceInfo.Name\n\n        if (event[\"WirelessMetadata\"][\"LoRaWAN\"]) {\n            lorawan_info = event[\"WirelessMetadata\"][\"LoRaWAN\"]\n            timestamp = lorawan_info[\"Timestamp\"]\n            let bytes = Buffer.from(event[\"PayloadData\"], 'base64');\n            payload = bytes2HexString(bytes)\n        } else if (event[\"WirelessMetadata\"][\"Sidewalk\"]) {\n            timestamp = new Date().getTime()\n            let origin = new Buffer(event[\"PayloadData\"], 'base64')\n            payload = origin.toString('utf8')\n        }\n\n        console.log(`event.PayloadData: ${payload}`)\n        const resolved_data = decodeUplink(payload);\n        \n        // publish all measurement data\n        const input = { // PublishRequest\n            topic: `tracker/EmbeddedWorldTrackerDemo/sensor/${device_id}`,\n            qos: 0,\n            retain: false,\n            payload: JSON.stringify({\n                DeviceName: \"assettracker\",\n                timestamp: timestamp,\n                data: resolved_data.data,\n                WirelessDeviceId: device_id,\n                PayloadData: event['PayloadData'],\n                WirelessMetadata: event[\"WirelessMetadata\"]\n            })\n        };\n\n        const command = new PublishCommand(input);\n        const response = await client.send(command);\n        console.log(\"response: \" + JSON.stringify(response));\n        return {\n            statusCode: 200,\n            body: 'Message published successfully' + JSON.stringify(event)\n        };\n    } catch (error) {\n        console.error('Error publishing message:', error);\n\n        return {\n            statusCode: 500,\n            body: 'Error publishing message'\n        };\n    }\n};\n"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/004/001/lambda.1.png"})),(0,i.yg)("p",null,"Now go back to the ",(0,i.yg)("inlineCode",{parentName:"p"},"Device Destination"),", select Enter a rule name and enter the name we just create."),(0,i.yg)("p",null,"Navigate to the ",(0,i.yg)("inlineCode",{parentName:"p"},"AWS IoT Core Console")," and select ",(0,i.yg)("inlineCode",{parentName:"p"},"MQTT Test Client")," and subscribe to the topic."),(0,i.yg)("h4",{id:"add-tracker-rule"},"Add Tracker Rule"),(0,i.yg)("p",null,"Repeat the above steps to create a new rule, and copy the following Lambda code:"),(0,i.yg)("details",null,(0,i.yg)("summary",null,"Lambda Code"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},'const {IoTDataPlaneClient, PublishCommand} = require("@aws-sdk/client-iot-data-plane");\n\nconst {LocationClient, BatchUpdateDevicePositionCommand} = require("@aws-sdk/client-location")\n\nconst {IoTWirelessClient, UpdateResourcePositionCommand } = require("@aws-sdk/client-iot-wireless");\nconst client = new IoTDataPlaneClient({\n    "region": "us-east-1"\n});\nconst wireless_client = new IoTWirelessClient({\n    "region": "us-east-1"\n});\n\nexports.handler = async (event) => {\n    console.log(`message received: ${JSON.stringify(event)}`)\n    let device_id = event[\'WirelessDeviceId\']\n    let device_name = event[\'DeviceName\']\n    let measurements = event[\'data\'][\'messages\']\n    let resolver_time = event[\'timestamp\']\n    let network = 1; // 1: lorawan 2: sidewalk\n    if (event["WirelessMetadata"] && event["WirelessMetadata"]["Sidewalk"]) {\n        network = 2\n    }\n\n    let longitude;\n    let latitude;\n    let gps_data = null\n    let sensor_map = {}\n    if (measurements && measurements.length > 0) {\n        for (let i = 0; i < measurements.length; i++) {\n            for (let j = 0; j < measurements[i].length; j++) {\n                if (measurements[i][j].measurementId === "4097") {\n                    sensor_map["Temperature"] = measurements[i][j].measurementValue;\n                }\n                if (measurements[i][j].measurementId === "4098") {\n                    sensor_map["Humidity"] = measurements[i][j].measurementValue;\n                }\n                if (measurements[i][j].measurementId === "4197") {\n                    longitude = measurements[i][j]["measurementValue"];\n                }\n                if (measurements[i][j].measurementId === "4198") {\n                    latitude = measurements[i][j]["measurementValue"];\n                }\n\n                if (latitude && longitude) {\n                    try {\n                        gps_data = {\n                            "type": "Point",\n                            "coordinates": [longitude, latitude]\n                            // "coordinates": [33.3318, -22.2155, 13.123]\n                        }\n                    } catch (e) {\n                        console.log(`===>error`, e)\n                    }\n                }\n            }\n        }\n    }\n\n    if (gps_data) {\n        console.log(`update device location : ${JSON.stringify(gps_data)}`)\n        await updateDevicePosition(gps_data, device_id);\n        const input = { // PublishRequest\n            topic: `tracker/EmbeddedWorldTrackerDemo/location/${device_id}`,\n            qos: 0,\n            retain: false,\n            payload: JSON.stringify({\n                timestamp: resolver_time,\n                deviceId: device_id,\n                deviceName: device_name,\n                latitude: gps_data.coordinates[1],\n                longitude: gps_data.coordinates[0],\n                positionProperties: {\'batteryLevel\': 90, "sensor:": 60}\n            })\n        };\n        const command = new PublishCommand(input);\n        const response = await client.send(command);\n        console.log("mqtt push response: " + JSON.stringify(response));\n\n        let locationClient = new LocationClient()\n        let location_info = {\n            TrackerName: \'AssetTracker\',\n            Updates: [\n                {\n                    DeviceId: \'assettracker\',\n                    SampleTime: new Date(resolver_time),\n                    Position: [\n                        gps_data.coordinates[0], gps_data.coordinates[1]\n                    ],\n                    Accuracy: {\n                        Horizontal: 1,\n                    },\n                    PositionProperties: {\n                        "context": JSON.stringify({net: network}),\n                        "sensor": JSON.stringify(sensor_map)\n                    }\n                }\n            ]\n        }\n        let loc_response = await locationClient.send(new BatchUpdateDevicePositionCommand(location_info))\n        console.log("loc update response: " + JSON.stringify(loc_response));\n\n    }\n}\n\nasync function updateDevicePosition(gps_data, device_id) {\n    const input = { // UpdateResourcePositionRequest\n        ResourceIdentifier: device_id, // required\n        ResourceType: "WirelessDevice", // required\n        GeoJsonPayload: JSON.stringify(gps_data),\n    };\n    const command = new UpdateResourcePositionCommand(input);\n    const wireless_response = await wireless_client.send(command);\n    console.log(wireless_response)\n}\n'))),(0,i.yg)("h2",{id:"building-web-app"},"Building Web App"),(0,i.yg)("p",null,"We will deploy the necessary Amazon Location Service resources required to display our device on a map."),(0,i.yg)("h3",{id:"creating-map"},"Creating Map"),(0,i.yg)("p",null,"As a first step you will need to create a new Amazon Location Service Map resource. You will be doing so using the AWS Console."),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Open the ",(0,i.yg)("a",{parentName:"p",href:"https://console.aws.amazon.com/location/home"},"Amazon Location Service Console"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Then expand the navigation bar on the left side of the screen, and select Maps.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"In this screen, create a new map:")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Input the name of the map and select the ",(0,i.yg)("inlineCode",{parentName:"p"},"HERE Explore")," map style, then click on ",(0,i.yg)("inlineCode",{parentName:"p"},"Create map"),"."))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/003/create-map.2.png"})),(0,i.yg)("h3",{id:"creating-router-calculator"},"Creating Router Calculator"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Open the ",(0,i.yg)("a",{parentName:"p",href:"https://console.aws.amazon.com/location/home"},"Amazon Location Service Console"),".")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Then expand the navigation bar on the left side of the screen, and select ",(0,i.yg)("inlineCode",{parentName:"p"},"Route calculators"),"."))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/003/route.1.png"})),(0,i.yg)("p",null,"Continue by selecting ",(0,i.yg)("inlineCode",{parentName:"p"},"HERE")," as Data Provider, click on the ",(0,i.yg)("inlineCode",{parentName:"p"},"Create route calculator")," button."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/003/route.2.png"})),(0,i.yg)("h3",{id:"creating-tracker"},"Creating Tracker"),(0,i.yg)("p",null,"Navigate to ",(0,i.yg)("inlineCode",{parentName:"p"},"Trackers")," -> ",(0,i.yg)("inlineCode",{parentName:"p"},"Create tracker"),":"),(0,i.yg)("p",null,"Input the name of the tracker and select ",(0,i.yg)("inlineCode",{parentName:"p"},"Time-based filtering")," under position filtering."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/003/tracker.2.png"})),(0,i.yg)("p",null,"Then scroll down and mark the ",(0,i.yg)("inlineCode",{parentName:"p"},"Enable EventBridge events")," setting under EventBridge configuration, then click ",(0,i.yg)("inlineCode",{parentName:"p"},"Create tracker"),"."),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/003/tracker.3.png"})),(0,i.yg)("h3",{id:"creating-geofence-collection"},"Creating Geofence Collection"),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/003/route.2.png"})),(0,i.yg)("h2",{id:"display-web-app"},"Display Web App"),(0,i.yg)("h3",{id:"deploy-app-to-cloudfront"},"Deploy App to Cloudfront"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"In your Cloud9 Terminal, navigate to ",(0,i.yg)("inlineCode",{parentName:"p"},"/home/ec2-user/environment/asset-tracking-workshop"),":"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"cd /home/ec2-user/environment/asset-tracking-workshop\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Run the following command:"),(0,i.yg)("pre",{parentName:"li"},(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"npm run frontend:publish\n"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Once it's completed, you will receive the website URL"))),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://static.us-east-1.prod.workshops.aws/public/f3adb45a-50d1-499b-a20d-93bbbb82ee26/static/images/003/cloud9.4.png"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Navigate to this URL in your browser to view your tracking application.")),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:"{600}",src:"https://files.seeedstudio.com/wiki/SenseCAP/dual/s3-map.png"})),(0,i.yg)("h2",{id:"resource"},"Resource"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://drive.google.com/drive/folders/1vHJVEFgyx4arHHPlSjdMkffVStnTpHqg?usp=sharing"},"SWDM016")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://drive.google.com/drive/folders/1Mw96m4--9e5O926HFzhK868hmiP4SNFm?usp=sharing"},"template_lbm_wio_tracker")))}m.isMDXComponent=!0}}]);