"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[24495],{15680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>m});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=a.createContext({}),u=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(d.Provider,{value:n},e.children)},g="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=u(t),y=i,m=g["".concat(d,".").concat(y)]||g[y]||s[y]||l;return t?a.createElement(m,r(r({ref:n},p),{},{components:t})):a.createElement(m,r({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=y;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o[g]="string"==typeof e?e:i,r[1]=o;for(var u=2;u<l;u++)r[u]=t[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},66408:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var a=t(58168),i=(t(96540),t(15680));const l={description:"Pin Multiplexing on Seeed Studio XIAO nRF52840 (Sense)",title:"\u5f15\u811a\u4e32\u53e3\u7684\u4f7f\u7528",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/XIAO-BLE-Sense-Pin-Multiplexing",last_update:{date:"10/30/2023",author:"\u5434\u98de\u98de"}},r="Seeed Studio XIAO nRF52840 (Sense) \u4e0a\u7684\u5f15\u811a\u591a\u8def\u590d\u7528",o={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/CN_XIAO-BLE-Sense-Pin-Multiplexing",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/CN_XIAO-BLE-Sense-Pin-Multiplexing",title:"\u5f15\u811a\u4e32\u53e3\u7684\u4f7f\u7528",description:"Pin Multiplexing on Seeed Studio XIAO nRF52840 (Sense)",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/CN_XIAO-BLE-Sense-Pin-Multiplexing.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense",slug:"/cn/XIAO-BLE-Sense-Pin-Multiplexing",permalink:"/cn/XIAO-BLE-Sense-Pin-Multiplexing",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/CN_XIAO-BLE-Sense-Pin-Multiplexing.md",tags:[],version:"current",lastUpdatedBy:"\u5434\u98de\u98de",lastUpdatedAt:1698624e3,formattedLastUpdatedAt:"Oct 30, 2023",frontMatter:{description:"Pin Multiplexing on Seeed Studio XIAO nRF52840 (Sense)",title:"\u5f15\u811a\u4e32\u53e3\u7684\u4f7f\u7528",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/XIAO-BLE-Sense-Pin-Multiplexing",last_update:{date:"10/30/2023",author:"\u5434\u98de\u98de"}},sidebar:"CNSidebar",previous:{title:"QSPI \u95ea\u5b58\u4f7f\u7528",permalink:"/cn/xiao-ble-qspi-flash-usage"},next:{title:"NFC \u529f\u80fd\u4f7f\u7528",permalink:"/cn/XIAO-BLE-Sense-NFC-Usage"}},d={},u=[{value:"\u6570\u5b57",id:"\u6570\u5b57",level:2},{value:"\u6570\u5b57\u4f5c\u4e3aPWM",id:"\u6570\u5b57\u4f5c\u4e3apwm",level:2},{value:"\u6a21\u62df",id:"\u6a21\u62df",level:2},{value:"\u4e32\u884c",id:"\u4e32\u884c",level:2},{value:"I2C\u63a5\u53e3",id:"i2c\u63a5\u53e3",level:2},{value:"SPI\u63a5\u53e3",id:"spi\u63a5\u53e3",level:2}],p={toc:u},g="wrapper";function s(e){let{components:n,...t}=e;return(0,i.yg)(g,(0,a.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"seeed-studio-xiao-nrf52840-sense-\u4e0a\u7684\u5f15\u811a\u591a\u8def\u590d\u7528"},"Seeed Studio XIAO nRF52840 (Sense) \u4e0a\u7684\u5f15\u811a\u591a\u8def\u590d\u7528"),(0,i.yg)("p",null,"Seeed Studio XIAO nRF52840 (Sense) \u5177\u6709\u4e30\u5bcc\u7684\u63a5\u53e3\u3002 \u6709 ",(0,i.yg)("strong",{parentName:"p"},"11 \u4e2a\u6570\u5b57 I/O")," \u53ef\u7528\u4f5c ",(0,i.yg)("strong",{parentName:"p"},"PWM \u5f15\u811a")," \uff0c ",(0,i.yg)("strong",{parentName:"p"},"6 \u4e2a\u6a21\u62df\u8f93\u5165")," \u53ef\u7528\u4f5c ",(0,i.yg)("strong",{parentName:"p"},"ADC \u5f15\u811a"),"\u3002 \u5b83\u652f\u6301\u6240\u6709\u4e09\u79cd\u5e38\u89c1\u7684\u4e32\u884c\u901a\u4fe1\u63a5\u53e3\uff0c\u5982 ",(0,i.yg)("strong",{parentName:"p"},"UART, I2C \u548c SPI"),"\u3002\u8fd9\u4e2a wiki \u5c06\u6709\u52a9\u4e8e\u4e86\u89e3\u8fd9\u4e9b\u63a5\u53e3\u5e76\u5728\u60a8\u7684\u4e0b\u4e00\u4e2a\u9879\u76ee\u4e2d\u5b9e\u73b0\u5b83\u4eec\uff01"),(0,i.yg)("blockquote",null,(0,i.yg)("p",{parentName:"blockquote"},"\u8fd9\u91cc\u7684\u57fa\u672c\u529f\u80fd\u5bf9\u4e8e\u4e24\u4e2a Seeed Studio XIAO nRF52840 Arduino \u5e93\u90fd\u8868\u73b0\u826f\u597d\u3002")),(0,i.yg)("h2",{id:"\u6570\u5b57"},"\u6570\u5b57"),(0,i.yg)("p",null,"\u5c06\u6309\u94ae\u8fde\u63a5\u5230\u5f15\u811a D6\uff0c\u5c06 LED \u8fde\u63a5\u5230\u5f15\u811a D10\u3002\u7136\u540e\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u4f7f\u7528\u6309\u94ae\u63a7\u5236 LED \u7684\u5f00/\u5173\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-c++"},"const int buttonPin = 6;     // pushbutton connected to digital pin 6\nconst int ledPin =  10;      // LED connected to digital pin 10\n \nint buttonState = 0;         // variable for reading the pushbutton status\n \nvoid setup() {\n  // initialize the LED pin as an output:\n  pinMode(ledPin, OUTPUT);\n  // initialize the pushbutton pin as an input:\n  pinMode(buttonPin, INPUT);\n}\n \nvoid loop() {\n  // read the state of the pushbutton value:\n  buttonState = digitalRead(buttonPin);\n \n  // check if the pushbutton is pressed. If it is, the buttonState is HIGH:\n  if (buttonState == HIGH) {\n    // turn LED off:\n    digitalWrite(ledPin, HIGH);\n  } else {\n    // turn LED on:\n    digitalWrite(ledPin, LOW);\n  }\n}\n")),(0,i.yg)("h2",{id:"\u6570\u5b57\u4f5c\u4e3apwm"},"\u6570\u5b57\u4f5c\u4e3aPWM"),(0,i.yg)("p",null,"\u5c06 LED \u8fde\u63a5\u5230\u5f15\u811a D10\u3002\u7136\u540e\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230 LED \u9010\u6e10\u53d8\u6697\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},"int ledPin = 10;    // LED connected to digital pin 10\n\nvoid setup() {\n\n}\n\nvoid loop() {\n  // fade in from min to max in increments of 5 points:\n  for (int fadeValue = 0 ; fadeValue <= 255; fadeValue += 5) {\n    // sets the value (range from 0 to 255):\n    analogWrite(ledPin, fadeValue);\n    // wait for 30 milliseconds to see the dimming effect\n    delay(30);\n  }\n\n  // fade out from max to min in increments of 5 points:\n  for (int fadeValue = 255 ; fadeValue >= 0; fadeValue -= 5) {\n    // sets the value (range from 0 to 255):\n    analogWrite(ledPin, fadeValue);\n    // wait for 30 milliseconds to see the dimming effect\n    delay(30);\n  }\n}\n")),(0,i.yg)("h2",{id:"\u6a21\u62df"},"\u6a21\u62df"),(0,i.yg)("p",null,"\u5c06\u7535\u4f4d\u8ba1\u8fde\u63a5\u5230\u5f15\u811a A5\uff0c\u5c06 LED \u8fde\u63a5\u5230\u5f15\u811a D10\u3002\u7136\u540e\u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\uff0c\u901a\u8fc7\u65cb\u8f6c\u7535\u4f4d\u5668\u65cb\u94ae\u6765\u63a7\u5236LED\u7684\u95ea\u70c1\u95f4\u9694\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-c++"},"const int sensorPin = 5;\nconst int ledPin =  10; \nvoid setup() {\n  // declare the ledPin as an OUTPUT:\n  pinMode(sensorPin, INPUT);\n  pinMode(ledPin, OUTPUT);\n}\n \nvoid loop() {\n  // read the value from the sensor:\n  int sensorValue = analogRead(sensorPin);\n  // turn the ledPin on\n  digitalWrite(ledPin, HIGH);\n  // stop the program for <sensorValue> milliseconds:\n  delay(sensorValue);\n  // turn the ledPin off:\n  digitalWrite(ledPin, LOW);\n  // stop the program for for <sensorValue> milliseconds:\n  delay(sensorValue);\n}\n")),(0,i.yg)("h2",{id:"\u4e32\u884c"},"\u4e32\u884c"),(0,i.yg)("p",null,"\u4f7f\u7528 Serial1 \u901a\u8fc7 GPIO \u800c\u4e0d\u662f USB \u4f7f\u7528 UART\u3002\u60a8\u4e5f\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u4e24\u8005\u3002 \u4f7f\u7528\u5f15\u811a D6 \u4f5c\u4e3a UART \u7684 TX \u5f15\u811a\uff0c\u4f7f\u7528\u5f15\u811a D7 \u4f5c\u4e3a UART \u7684 RX \u5f15\u811a\u6765\u53d1\u9001\u201cHello World\uff01\u201d\u6d88\u606f\u3002"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-c++"},'void setup() {\n    Serial1.begin(115200);\n    while (!Serial1);\n}\n \nvoid loop() {\n    Serial1.println("Hello World!");\n    delay(1000);\n}\n')),(0,i.yg)("h2",{id:"i2c\u63a5\u53e3"},"I2C\u63a5\u53e3"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u6b65\u9aa4 1.")," \u6309\u7167\u5982\u4e0b\u786c\u4ef6\u8fde\u63a5\u5c06 ",(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/Grove-OLED-Display-1-12-SH1107-V3-0-p-5011.html"},"Grove - OLED Display 1.12 (SH1107) V3.0")," \u8fde\u63a5\u5230 Seeed Studio XIAO nRF52840 \uff08Sense\uff09\u3002")),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Grove - OLED \u663e\u793a\u5c4f 1.12 (SH1107)"),(0,i.yg)("th",{parentName:"tr",align:null},"Seeed Studio XIAO nRF52840 (Sense)"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"GND"),(0,i.yg)("td",{parentName:"tr",align:null},"GND")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"VCC"),(0,i.yg)("td",{parentName:"tr",align:null},"5V")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"SDA"),(0,i.yg)("td",{parentName:"tr",align:null},"SDA")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"SCL"),(0,i.yg)("td",{parentName:"tr",align:null},"SCL")))),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-BLE/OLED-I2C-2.png",alt:"pir",width:1e3,height:"auto"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"\u6b65\u9aa4 2.")," \u6253\u5f00 Arduino IDE, \u5bfc\u822a\u5230 ",(0,i.yg)("inlineCode",{parentName:"p"},"Sketch > Include Library > Manage Libraries..."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},(0,i.yg)("strong",{parentName:"p"},"\u6b65\u9aa4 3.")," \u641c\u7d22 ",(0,i.yg)("strong",{parentName:"p"},"u8g2")," \u5e76\u5b89\u88c5\u5b83"))),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-BLE/u8g2-install.png",alt:"pir",width:600,height:"auto"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u6b65\u9aa4 4.")," \u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u5728OLED\u663e\u793a\u5c4f\u4e0a\u663e\u793a\u6587\u672c\u5b57\u7b26\u4e32")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include <U8g2lib.h>\n#include <SPI.h>\n#include <Wire.h>\n \nU8G2_SH1107_SEEED_128X128_1_SW_I2C u8g2(U8G2_R0, /* clock=*/ 5, /* data=*/ 4, /* reset=*/ U8X8_PIN_NONE);\n \nvoid setup(void) {\n  u8g2.begin();\n}\n \nvoid loop(void) {\n  u8g2.firstPage();\n \n  do {\n    u8g2.setFont(u8g2_font_luBIS08_tf);\n    u8g2.drawStr(0,24,"Hello Seeed!");\n  } while ( u8g2.nextPage() );\n}\n')),(0,i.yg)("h2",{id:"spi\u63a5\u53e3"},"SPI\u63a5\u53e3"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u6b65\u9aa4 1.")," \u6309\u7167\u5982\u4e0b\u786c\u4ef6\u8fde\u63a5\u5c06 ",(0,i.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/Grove-OLED-Display-1-12-SH1107-V3-0-p-5011.html"},"Grove - OLED Display 1.12 (SH1107) V3.0")," \u8fde\u63a5\u5230 Seeed Studio XIAO nRF52840 \uff08Sense\uff09\u3002")),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Grove - OLED \u663e\u793a\u5c4f 1.12 (SH1107)"),(0,i.yg)("th",{parentName:"tr",align:null},"Seeed Studio XIAO nRF52840 (Sense)"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"GND"),(0,i.yg)("td",{parentName:"tr",align:null},"GND")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"5V"),(0,i.yg)("td",{parentName:"tr",align:null},"5V")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"SCL"),(0,i.yg)("td",{parentName:"tr",align:null},"SCK")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"SI"),(0,i.yg)("td",{parentName:"tr",align:null},"MOSI")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"RES"),(0,i.yg)("td",{parentName:"tr",align:null},"D3")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"D/C"),(0,i.yg)("td",{parentName:"tr",align:null},"D4")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"CS"),(0,i.yg)("td",{parentName:"tr",align:null},"D5")))),(0,i.yg)("p",{style:{textAlign:"center"}},(0,i.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-BLE/OLED-SPI.png",alt:"pir",width:1e3,height:"auto"})),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u6b65\u9aa4 2.")," \u8fd9\u6b3eOLED\u663e\u793a\u5668\u540c\u65f6\u652f\u6301I2C\u548cSPI\u901a\u4fe1\uff0c\u9ed8\u8ba4\u578b\u53f7\u4e3aI2C\u3002\u8981\u4f7f\u7528 SPI \u6a21\u5f0f\uff0c\u60a8\u9700\u8981\u53c2\u8003 ",(0,i.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/Grove-OLED-Display-1.12-SH1107_V3.0/#software-i2c"},"Grove - OLED Display 1.12 (SH1107) V3.0 wiki")," \u663e\u793a\u5668\u901a\u4fe1\u66f4\u6539\u4e3a SPI\uff0c\u7136\u540e\u518d\u7ee7\u7eed")),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"\u6ce8\u610f:")," \u786e\u4fdd\u4ece\u524d\u9762\u7684\u6b65\u9aa4\u4e2d\u5b89\u88c5\u4e86 U8g2 \u5e93\u3002"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("strong",{parentName:"li"},"\u6b65\u9aa4 3.")," \u4e0a\u4f20\u4ee5\u4e0b\u4ee3\u7801\u4ee5\u5728OLED\u663e\u793a\u5c4f\u4e0a\u663e\u793a\u6587\u672c\u5b57\u7b26\u4e32")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include <U8g2lib.h>\n#include <SPI.h>\n#include <Wire.h>\n \nU8G2_SH1107_128X128_1_4W_HW_SPI u8g2(U8G2_R3, /* cs=*/ 5, /* dc=*/ 4, /* reset=*/ 3);\n \nvoid setup(void) {\n  u8g2.begin();\n}\n \nvoid loop(void) {\n  u8g2.firstPage();\n \n  do {\n    u8g2.setFont(u8g2_font_luBIS08_tf);\n    u8g2.drawStr(0,24,"Hello Seeed!");\n  } while ( u8g2.nextPage() );\n}\n')))}s.isMDXComponent=!0}}]);