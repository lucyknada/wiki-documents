"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[67688],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),g=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=g(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=g(n),d=a,h=c["".concat(l,".").concat(d)]||c[d]||u[d]||o;return n?r.createElement(h,i(i({ref:t},p),{},{components:n})):r.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var g=2;g<o;g++)i[g]=n[g];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},79748:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>g});var r=n(58168),a=(n(96540),n(15680));const o={description:"SenseCAP_T1000_tracker_and_InfluxDB_Integrated",title:"InfluxDB Integrated(via TTS)",keywords:["SenseCAP_T1000_tracker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/SenseCAP_T1000_tracker_InfluxDB_TTS",last_update:{date:"8/18/2023",author:"Jessie"}},i=void 0,s={unversionedId:"Sensor/SenseCAP/SenseCAP_T1000_Tracker/Integrated_with_Popular_Dashboard/InfluxDB_Integrated",id:"Sensor/SenseCAP/SenseCAP_T1000_Tracker/Integrated_with_Popular_Dashboard/InfluxDB_Integrated",title:"InfluxDB Integrated(via TTS)",description:"SenseCAP_T1000_tracker_and_InfluxDB_Integrated",source:"@site/docs/Sensor/SenseCAP/SenseCAP_T1000_Tracker/Integrated_with_Popular_Dashboard/InfluxDB_Integrated.md",sourceDirName:"Sensor/SenseCAP/SenseCAP_T1000_Tracker/Integrated_with_Popular_Dashboard",slug:"/SenseCAP_T1000_tracker_InfluxDB_TTS",permalink:"/SenseCAP_T1000_tracker_InfluxDB_TTS",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SenseCAP/SenseCAP_T1000_Tracker/Integrated_with_Popular_Dashboard/InfluxDB_Integrated.md",tags:[],version:"current",lastUpdatedBy:"Jessie",lastUpdatedAt:1692316800,formattedLastUpdatedAt:"Aug 18, 2023",frontMatter:{description:"SenseCAP_T1000_tracker_and_InfluxDB_Integrated",title:"InfluxDB Integrated(via TTS)",keywords:["SenseCAP_T1000_tracker"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/SenseCAP_T1000_tracker_InfluxDB_TTS",last_update:{date:"8/18/2023",author:"Jessie"}},sidebar:"ProductSidebar",previous:{title:"TagoIO Integrated(via TTS)",permalink:"/SenseCAP_T1000_tracker_TagoIO_TTS"},next:{title:"Akenza Integrated(via TTS)",permalink:"/SenseCAP_T1000_Tracker_Akenza"}},l={},g=[{value:"Preparation",id:"preparation",level:2},{value:"Setup InfluxDB Cloud",id:"setup-influxdb-cloud",level:2},{value:"Create Bucket",id:"create-bucket",level:3},{value:"Generate Tokens",id:"generate-tokens",level:3},{value:"Configure the Telegraf",id:"configure-the-telegraf",level:2},{value:"MQTT Integration",id:"mqtt-integration",level:3},{value:"HTTP Integration",id:"http-integration",level:3},{value:"Data Explorer",id:"data-explorer",level:2},{value:"Dashboards(Optional)",id:"dashboardsoptional",level:2}],p={toc:g},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://docs.influxdata.com/influxdb/v2.0/get-started/"},"InfluxDB")," is an open source time series database, focusing on high-performance reading, high-performance writing, efficient storage and real-time analysis of massive time series data. In addition to native protocols such as HTTP and UDP, it is also compatible with communication protocols of components such as CollectD, Graphite, OpenTSDB, and Prometheus. Widely used in DevOps monitoring, IoT monitoring, real-time analysis and other scenarios."),(0,a.yg)("p",null,"The content of this chapter will guide users how to connect the ",(0,a.yg)("a",{parentName:"p",href:"https://www.seeedstudio.com/SenseCAP-Card-Tracker-T1000-A-p-5697.html"},"SenseCAP T1000 Tracker")," to InfluxDB through TTN."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/influx_sense.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"Before starting the setup, please check ",(0,a.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/SenseCAP_T1000_tracker_TTN"},"Connect SenseCAP T1000 to TTS")," to connect your SenseCAP T1000 Tracker to TTS first."),(0,a.yg)("h2",{id:"preparation"},"Preparation"),(0,a.yg)("p",null,"Before ste up the InfluxDB, we need to in install the Telegraf agent (version 1.9.2 or higher) ."),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://docs.influxdata.com/influxdb/v2.0/telegraf-configs/"},"Telegraf Configuration")),(0,a.yg)("h2",{id:"setup-influxdb-cloud"},"Setup InfluxDB Cloud"),(0,a.yg)("p",null,"Log in to your ",(0,a.yg)("a",{parentName:"p",href:"https://us-east-1-1.aws.cloud2.influxdata.com/"},"InfluxDB Cloud"),"."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/buckets.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("h3",{id:"create-bucket"},"Create Bucket"),(0,a.yg)("p",null,"On the ",(0,a.yg)("strong",{parentName:"p"},"Buckets")," tab."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/buckets.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"Click the ",(0,a.yg)("strong",{parentName:"p"},"Create Bucket")," button to create a new bucket."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/createbucket.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"Name your bucket, choose how long the data will remain in the database and then click ",(0,a.yg)("strong",{parentName:"p"},"Create"),"."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/create_done.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("h3",{id:"generate-tokens"},"Generate Tokens"),(0,a.yg)("p",null,"Navigate to ",(0,a.yg)("strong",{parentName:"p"},"API TOKENS")," tab and click the ",(0,a.yg)("strong",{parentName:"p"},"GENERATE API TOKEN")," button to create a token."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/get_token.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/create_done.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("h2",{id:"configure-the-telegraf"},"Configure the Telegraf"),(0,a.yg)("h3",{id:"mqtt-integration"},"MQTT Integration"),(0,a.yg)("p",null,"This section shows you how to configure your Telegraf agent with MQTT Consumer plugin used for connecting to TTS MQTT Server."),(0,a.yg)("p",null,"Navigate to ",(0,a.yg)("strong",{parentName:"p"},"TELEGRAF")," tab and click ",(0,a.yg)("strong",{parentName:"p"},"CREATE CONFIGURATION")),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/telegraf.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"Select your bucket we created before, and select system."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/create_telegraf.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"Name your configuration, select Create and Verify and then Finish."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/download_config.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"Once you have downloaded the Telegraf configuration file as described in InfluxDB Cloud 2.0 Setup, update it by adding the following lines and modifying them according to your MQTT server info:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},'[[inputs.mqtt_consumer]]\n#\n#MQTT broker URLs to be used. The format is scheme://host:port, schema can be tcp, ssl, or ws.\n  servers = ["tcp://localhost:1883"]\n#\n#Topics to subscribe to\n  topics = ["#"]\n#\n#Username and password\n  username = "example"\n  password = "NNSXS.JNSBLIV34VXYXS7D4ZWV2IKPTGJM3DFRGO.........."\n#\n#Needed only if your payload type is string, since Telegraf does not forward data of this type by default\n  json_string_fields = ["uplink_message_frm_payload"]\n#\n#Define the message format\n  data_format = "json"\n')),(0,a.yg)("admonition",{type:"info"},(0,a.yg)("p",{parentName:"admonition"},"You can check the TTS info on the following tab.")),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/TTS_info.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"Next, you need to copy the previously generated token from the Tokens tab and export it to an environmental variable to be used by the InfluxDB output plugin, or you can simply pass it directly as a token value in the configuration file. You can set the environmental variable by using the following command in your terminal:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},'INFLUX_TOKEN="paste your token here"\n')),(0,a.yg)("p",null,"Run the Telegraf agent in your terminal with the following command:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"telegraf --config /path/to/custom/telegraf.conf\n")),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/connected_MQTT.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("h3",{id:"http-integration"},"HTTP Integration"),(0,a.yg)("p",null,"This section shows you how to configure the Telegraf agent with HTTP Listener v2 plugin and how to create a belonging Webhook integration on The Things Stack."),(0,a.yg)("p",null,"Update the Telegraf configuration you previously downloaded as described in InfluxDB Cloud 2.0 Setup by adding the following lines and modifying them according to your setup:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},'[[inputs.http_listener_v2]]\n#\n# Address and port to host HTTP listener on\n  service_address = ":8080"\n#\n# Path to listen to\n  path = "/telegraf"\n#\n# HTTP methods to accept\n  methods = ["POST"]\n#\n# Needed only if your payload type is string, since Telegraf does not forward data of this type by default\n  json_string_fields = ["uplink_message_frm_payload"]\n#\n# Define the message format\n  data_format = "json"\n')),(0,a.yg)("p",null,"Copy the generated token from the Tokens tab and use it as a token value for the output plugin in your Telegraf configuration file, or export it to an environmental variable with the following command in your terminal:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},'INFLUX_TOKEN="paste your token here"\n')),(0,a.yg)("p",null,"Start the Telegraf agent by running the following command in the terminal:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"telegraf --config /path/to/custom/telegraf.conf\n")),(0,a.yg)("h2",{id:"data-explorer"},"Data Explorer"),(0,a.yg)("p",null,"Select your explorer type, select ",(0,a.yg)("strong",{parentName:"p"},"_measurement")," on the drop-down menu in the Filter window and tick the ",(0,a.yg)("strong",{parentName:"p"},"mqtt_consumer")," box. Then you can choose the topic and parameter you wish to monitor."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Location Data")),(0,a.yg)("p",null,"FROM: Your bucket ",(0,a.yg)("br",null),"\nMEASUREMENT: matt_sonsumer ",(0,a.yg)("br",null),"\n_field: uplink_message_decoded_payload ",(0,a.yg)("br",null),"\ntopic: v3/..."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/map-done.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",null,"You can also click ",(0,a.yg)("strong",{parentName:"p"},"SAVE AS")," in the upper right corner to save this explorer as a Dashboard cell."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/saveas.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("h2",{id:"dashboardsoptional"},"Dashboards(Optional)"),(0,a.yg)("p",null,"A dashboard is where you visualize and interact with data in real time. You can customize the dashboard according to your needs."),(0,a.yg)("p",null,"Navigate to ",(0,a.yg)("strong",{parentName:"p"},"Dashboard")," tab and click ",(0,a.yg)("strong",{parentName:"p"},"Create Dashbaord"),"."),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/create_dashboard.png",alt:"pir",width:800,height:"auto"})),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/SenseCAP/Tracker/influx_dashbaord.png",alt:"pir",width:800,height:"auto"})))}u.isMDXComponent=!0}}]);