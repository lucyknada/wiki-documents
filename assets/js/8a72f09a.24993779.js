"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[32937],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>h});var i=n(96540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},g="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},c=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),g=d(n),c=o,h=g["".concat(l,".").concat(c)]||g[c]||p[c]||s;return n?i.createElement(h,r(r({ref:t},u),{},{components:n})):i.createElement(h,r({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,r=new Array(s);r[0]=c;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[g]="string"==typeof e?e:o,r[1]=a;for(var d=2;d<s;d++)r[d]=n[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6148:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=n(58168),o=(n(96540),n(15680));const s={description:"BTHome Protocol for Home Assistant usage on Seeed Studio XIAO nRF52840 Sense",title:"BTHome Protocol with XIAO nRF52840 Sense(CircuitPython)",image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/XIAO_BLE_HA",last_update:{date:"09/18/2023",author:"Bruno Santos (Feiticeir0)"}},r="Project Overview",a={unversionedId:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/Application/XIAO_BLE_HA",id:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/Application/XIAO_BLE_HA",title:"BTHome Protocol with XIAO nRF52840 Sense(CircuitPython)",description:"BTHome Protocol for Home Assistant usage on Seeed Studio XIAO nRF52840 Sense",source:"@site/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/Application/XIAO_BLE_HA.md",sourceDirName:"Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/Application",slug:"/XIAO_BLE_HA",permalink:"/XIAO_BLE_HA",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_nRF52840-Sense/Application/XIAO_BLE_HA.md",tags:[],version:"current",lastUpdatedBy:"Bruno Santos (Feiticeir0)",lastUpdatedAt:1694995200,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{description:"BTHome Protocol for Home Assistant usage on Seeed Studio XIAO nRF52840 Sense",title:"BTHome Protocol with XIAO nRF52840 Sense(CircuitPython)",image:"https://files.seeedstudio.com/wiki/seeed_logo/logo_2023.png",slug:"/XIAO_BLE_HA",last_update:{date:"09/18/2023",author:"Bruno Santos (Feiticeir0)"}},sidebar:"ProductSidebar",previous:{title:"Seeed Studio XIAO nRF52840 on Amazon Sidewalk",permalink:"/xiao-ble-sidewalk"},next:{title:"Getting Started with Seeed Studio XIAO ESP32C3",permalink:"/XIAO_ESP32C3_Getting_Started"}},l={},d=[{value:"Getting Started",id:"getting-started",level:2},{value:"Hardware Preparation",id:"hardware-preparation",level:3},{value:"Here&#39;s the pinout for XIAO nRF52840 Sense and XIAO Grove Shield",id:"heres-the-pinout-for-xiao-nrf52840-sense-and-xiao-grove-shield",level:4},{value:"Hardware setup",id:"hardware-setup",level:3},{value:"Software Preparation",id:"software-preparation",level:2},{value:"Step 1 - Install CircuitPython",id:"step-1---install-circuitpython",level:3},{value:"Step 2 - Install libraries",id:"step-2---install-libraries",level:3},{value:"Step 3 - Upload Code",id:"step-3---upload-code",level:3},{value:"BTHome",id:"bthome",level:4},{value:"Code",id:"code",level:4},{value:"A bit of code explaining",id:"a-bit-of-code-explaining",level:4},{value:"Step 4 - Display data on Home Assistant",id:"step-4---display-data-on-home-assistant",level:3},{value:"Step 4.1 - Add XIAO nRF52840 Sense on Home Assistant",id:"step-41---add-xiao-nrf52840-sense-on-home-assistant",level:4},{value:"Requirements",id:"requirements",level:4},{value:"Configuration",id:"configuration",level:4},{value:"What&#39;s More - Deep Sleep Function",id:"whats-more---deep-sleep-function",level:2},{value:"\u2728 Contributor Project",id:"-contributor-project",level:2},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],u={toc:d},g="wrapper";function p(e){let{components:t,...n}=e;return(0,o.yg)(g,(0,i.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"project-overview"},"Project Overview"),(0,o.yg)("p",null,"In this wiki, we will show how to use the Bluetooth 5.0 BLE capabilities of the Seeed Studio XIAO nRF52840 with the Seeed Studio Grove Temperature & Humidity Sensor (DHT20) to broadcast measurements of temperature and humidity to Home Assistant using the BTHome protocol."),(0,o.yg)("p",null,"We will be using ",(0,o.yg)("strong",{parentName:"p"},"CircuitPython")," for the code."),(0,o.yg)("h2",{id:"getting-started"},"Getting Started"),(0,o.yg)("p",null,"To follow this tutorial , you need the following hardware"),(0,o.yg)("div",{class:"table-center"},(0,o.yg)("table",{align:"center"},(0,o.yg)("tr",null,(0,o.yg)("th",null,"Seeed Studio XIAO nRF52840-Sense"),(0,o.yg)("th",null,"Seeed Studio Grove Temperature&Humidity Sensor V2.0 (DHT20)")),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("div",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/XIAO-BLE/102010469_Front-14.jpg",style:{width:250,height:"auto"}}))),(0,o.yg)("td",null,(0,o.yg)("div",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/Grove-Temperature-Humidity-Sensor/Tem-humidity-sensor1.jpg",style:{width:250,height:"auto"}})))),(0,o.yg)("tr",null,(0,o.yg)("td",null,(0,o.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,o.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Seeed-XIAO-BLE-Sense-nRF52840-p-5253.html"},(0,o.yg)("strong",null,(0,o.yg)("span",null,(0,o.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f")))))),(0,o.yg)("td",null,(0,o.yg)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,o.yg)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/Grove-Temperature-Humidity-Sensor-V2-0-DHT20-p-4967.html"},(0,o.yg)("strong",null,(0,o.yg)("span",null,(0,o.yg)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))))))),(0,o.yg)("h3",{id:"hardware-preparation"},"Hardware Preparation"),(0,o.yg)("p",null,"The Grove DHT20 sensor uses I2C for communication. We need to connect it to the I2C pins of the XIAO nRF52840 Sense:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"We can use a XIAO Grove Shield with a Universal 4 pin Unbuckled cable"),(0,o.yg)("li",{parentName:"ul"},"Connect the DHT20 sensor directly to the XIAO nRF52840 Sense using a 4 pin Female Jumper to Grove 4 pin Conversion Cable")),(0,o.yg)("h4",{id:"heres-the-pinout-for-xiao-nrf52840-sense-and-xiao-grove-shield"},"Here's the pinout for XIAO nRF52840 Sense and XIAO Grove Shield"),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/XIAO_nRF52840_pinout.png",alt:"pir",width:600,height:"auto"})),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/XIAO_shield_Pinout.png",alt:"pir",width:600,height:"auto"})),(0,o.yg)("h3",{id:"hardware-setup"},"Hardware setup"),(0,o.yg)("p",null,"Wiring is straight forward. Either using the Shield or not, the following Fritzing Schematic show how to wire the components together. "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/wiring.jpg",alt:"Wiring",width:600,height:"auto"})),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/XIAO_Shield_wiring.jpg",alt:"Wiring",width:600,height:"auto"})),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/Simple_Wiring.jpg",alt:"Wiring",width:600,height:"auto"})),(0,o.yg)("h2",{id:"software-preparation"},"Software Preparation"),(0,o.yg)("p",null,"We're going to use Thonny IDE software (Linux) and some related libraries and files. These are the steps we're going to take:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Install CircuitPython on the XIAO nRF52840 Sense"),(0,o.yg)("li",{parentName:"ol"},"Install the necessary libraries"),(0,o.yg)("li",{parentName:"ol"},"Code our sensor using the BTHome protocol"),(0,o.yg)("li",{parentName:"ol"},"Configure Home Assistant")),(0,o.yg)("h3",{id:"step-1---install-circuitpython"},"Step 1 - Install CircuitPython"),(0,o.yg)("p",null,"Let's install CircuitPython."),(0,o.yg)("p",null,"Go to ",(0,o.yg)("a",{href:"https://circuitpython.org/",target:"_blank"},(0,o.yg)("span",null,"CircuitPython"))," and download a version for the XIAO nRF52840 Sense.\nChoose Downloads and in the search field start writing the XIAO nRF52840 until the results show the sensor."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/circuitpython1.png",alt:"CircuitPython Download",width:600,height:"auto"})),(0,o.yg)("p",null,"Next, press the download button to get the file for our device. "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/circuitpython2.png",alt:"CircuitPython Download",width:"{600}",height:"auto"})),(0,o.yg)("p",null,"You should have a .uf2 file. To install it we need to enter bootloader mode. Connect the XIAO nRF52840 Sense to your computer and press the reset button twice."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/functional2b.jpg",alt:"CircuitPython Download",width:600,height:"auto"})),(0,o.yg)("p",null,"A new drive should have appeared on your computer called XIAO-SENSE."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/circuitpython3.png",alt:"XIAO nRF52840 Sense drive",width:600,height:"auto"})),(0,o.yg)("p",null,"Next, copy the downloaded file to the drive. "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/circuitpython4.png",alt:"XIAO nRF52840 Sense drive",width:600,height:"auto"})),(0,o.yg)("p",null,"After a while, a new drive appears named CIRCUITPY. We have CircuitPython installed on our microcontroller. "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/circuitpython5.png",alt:"XIAO nRF52840 Sense drive",width:600,height:"auto"})),(0,o.yg)("h3",{id:"step-2---install-libraries"},"Step 2 - Install libraries"),(0,o.yg)("p",null,"To use our Grove Temperature & Humidity sensor V2.0 (DHT20), we need the ",(0,o.yg)("a",{href:"https://learn.adafruit.com/adafruit-aht20/python-circuitpython",target:"_blank"},(0,o.yg)("span",null," Adafruit's AHT20 library")),"."),(0,o.yg)("p",null,"The previous website has instructions on how to install libraries."),(0,o.yg)("p",null,"After installed, we should have the following files (this are the required for our DHT20 sensor):"),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/circuitpython6.png",alt:"XIAO nRF52840 Sense drive",width:600,height:"auto"})),(0,o.yg)("h3",{id:"step-3---upload-code"},"Step 3 - Upload Code"),(0,o.yg)("p",null,"Before going for the code, we need to understand what BTHome is."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://bthome.io/images/logo.png",alt:"BTHome logo",width:"25%",height:"auto"})),(0,o.yg)("h4",{id:"bthome"},"BTHome"),(0,o.yg)("p",null,"BTHome is an open standard for broadcasting sensor data and button presses over Bluetooth Low Energy (BLE). It is designed to be energy efficient, flexible, and secure. BTHome is supported by popular home automation platforms, such as Home Assistant, out of the box."),(0,o.yg)("p",null,"Some benefits of BTHome:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Is an open standard, so devices from different manufacturers can work together."),(0,o.yg)("li",{parentName:"ul"},"Devices are designed to be energy efficient, so they can run for a long time on a single battery."),(0,o.yg)("li",{parentName:"ul"},"Data is encrypted, so it is secure from unauthorized access."),(0,o.yg)("li",{parentName:"ul"},"Is a flexible format, so it can be used to transmit a variety of sensor data and button presses.")),(0,o.yg)("p",null,"BTHome is a versatile and powerful standard for broadcasting sensor data and button presses over BLE. It is a good option for anyone who wants to add sensor data and button presses to their smart home."),(0,o.yg)("p",null,"You can read more about it and learn about the data format on the ",(0,o.yg)("a",{href:"https://bthome.io/",target:"_blank"},(0,o.yg)("span",null,"official site")),"."),(0,o.yg)("h4",{id:"code"},"Code"),(0,o.yg)("p",null,"Here's the CircuitPython code."),(0,o.yg)("details",null,(0,o.yg)("summary",null,"Click to copy the CircuitPython code"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-Python"},"# BTHome with DHT20\n# This code is based on the excelent code by Koen Vervloesem\n# https://github.com/koenvervloesem/BTHome-Inertial-Sensor-in-CircuitPython\n# We don't use deep sleep because it just doesn't work\n# on the XIAO nRF52840 Sense. It's a pitty. \n\nfrom _bleio import adapter\nfrom time import sleep\nimport board\n# for the Grove sensor\nimport adafruit_ahtx0\n\n\n# The size of the name is important. \nDEVICE_NAME = \"XIAO nRF52840 Sense\"\nINTERVAL = 0.1\n\n# Because this is delaying just 0.1s - 100 milliseconds, we don't need to read the sensor\n# values everytime. It's overkill - let's just read every 5 minutes. \n# Let's create a timer that will add every INTERVAL\n# when it reaches 30 - it will be 5 minutes passed\n# then we read the sensor\n# INTERVAL * 60 seconds * 5 minutes\n# CONVERTING 0.1ms to seconds * 60s * minutes = 300\nMINUTES_PER_READING = 5\nreadTimer = INTERVAL * 10 * 60 * MINUTES_PER_READING\n\n\n# convert the measurement value to the BTHome format\ndef value_to_little_endian (measurement):\n    \n    # Calculate the integer value by dividing the temperature by the factor\n    integer_value = int(measurement / 0.01)\n\n    # Extract the lower and upper bytes for little-endian representation\n    lower_byte = integer_value & 0xFF\n    upper_byte = (integer_value >> 8) & 0xFF\n\n    # Reverse the order of the bytes\n    little_endian_bytes = bytes([upper_byte, lower_byte])\n    return little_endian_bytes\n\nclass BTHomeAdvertisement:\n    _ADV_FLAGS = [0x02, 0x01, 0x06]\n    _ADV_SVC_DATA = [0x0a, 0x16, 0xd2, 0xfc, 0x40, 0x02, 0x00, 0x00, 0x03, 0xbf, 0x13]    \n\n    def _name2adv(self, local_name):\n        adv_element = bytearray([len(local_name) + 1, 0x09])\n        adv_element.extend(bytes(local_name, \"utf-8\"))\n        return adv_element\n\n    def __init__(self, local_name=None):\n        if local_name:\n            self.adv_local_name = self._name2adv(local_name)\n        else:\n            self.adv_local_name = self._name2adv(adapter.name)\n\n    def adv_data(self, temperature, humidity):\n        adv_data = bytearray(self._ADV_FLAGS)\n        adv_svc_data = bytearray(self._ADV_SVC_DATA)\n        # temperature\n        # change values according - \n        temp = value_to_little_endian (temperature)\n        # returned value is list\n        adv_svc_data[6] = temp[1]\n        adv_svc_data[7]= temp[0]\n        # humidity\n        # change values according - \n        hum = value_to_little_endian (humidity)\n        # returned value is list\n        adv_svc_data[9] = hum[1]\n        adv_svc_data[10]= hum[0]\n        adv_data.extend(adv_svc_data)\n        adv_data.extend(self.adv_local_name)\n        return adv_data\n\n\n# BTHome\nbthome = BTHomeAdvertisement(DEVICE_NAME)\n\n# Create sensor object\nsensor = adafruit_ahtx0.AHTx0(board.I2C())\n\n# because we want a initial reading\n# let's initialize with the readTimer variable\n# so we force the script to read the values\ncurrentTimer = 0\n# inital reading\ntemp = sensor.temperature\nhum = sensor.relative_humidity\n\n#DEBUG\n#print(\"\\nTemperature: %0.1f C\" % temp)\n#print(\"Humidity: %0.1f %%\" % hum)\n \nwhile True:\n    adv_data = bthome.adv_data(temp,hum)\n    adapter.start_advertising(\n        adv_data, scan_response=None, connectable=False, interval=INTERVAL * 2\n    )\n    sleep(INTERVAL)\n    adapter.stop_advertising()\n    # increase currentTimer\n    currentTimer += INTERVAL\n    #print (f\"Current timer: {currentTimer}\")\n    if (currentTimer >= readTimer):\n        #print (f'Read new values')\n        # Read new values\n        temp = sensor.temperature\n        hum = sensor.relative_humidity\n        #reset counter\n        currentTimer = 0\n\n\n"))),(0,o.yg)("p",null,"Remember to save it as ",(0,o.yg)("inlineCode",{parentName:"p"},"code.py")," so it gets executed on boot."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/C3-MicroPy/C3-MicroPython6.png",alt:"BTHome logo",width:"500",height:"auto"})),(0,o.yg)("h4",{id:"a-bit-of-code-explaining"},"A bit of code explaining"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"The code is full of comments to explain it a bit. "),(0,o.yg)("li",{parentName:"ul"},"Basically, every 0.2s it is broadcasting the temperature and humidity coming from the DHT20 sensor. "),(0,o.yg)("li",{parentName:"ul"},"Because we don't want to overload the sensor and read values every 0.2s, we've placed a timer. It will only read the values every 5 minutes. This time is controlled by the ",(0,o.yg)("inlineCode",{parentName:"li"},"MINUTES_PER_READING")," variable. ")),(0,o.yg)("h3",{id:"step-4---display-data-on-home-assistant"},"Step 4 - Display data on Home Assistant"),(0,o.yg)("h4",{id:"step-41---add-xiao-nrf52840-sense-on-home-assistant"},"Step 4.1 - Add XIAO nRF52840 Sense on Home Assistant"),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/home-assistant-icon-flat.png",alt:"Home Assistant Logo",width:"15%",height:"auto"})),(0,o.yg)("p",null,"Home Assistant is a free and open-source software for home automation. It is designed to be a central control system for smart home devices with a focus on local control and privacy."),(0,o.yg)("p",null,"Home Assistant acts as a central smart home controller hub by combining different devices and services in a single place and integrating them as entities. The provided rule-based system for automation allows creating custom routines based on a trigger event, conditions and actions, including scripts. These enable building automation, alarm management of security alarms and video surveillance for home security system as well as monitoring of energy measuring devices. "),(0,o.yg)("p",null,"You can read more about it on the ",(0,o.yg)("a",{href:"https://www.home-assistant.io/",target:"_blank"},(0,o.yg)("span",null,"official site")),"."),(0,o.yg)("h4",{id:"requirements"},"Requirements"),(0,o.yg)("p",null,"One crucial requirement is that HA (Home Assistant) ",(0,o.yg)("strong",{parentName:"p"},"has Bluetooth"),". If you're running HA on a Raspberry PI, chances are you have. All is dependent on the RPi version."),(0,o.yg)("h4",{id:"configuration"},"Configuration"),(0,o.yg)("p",null,'On "Step 3 - Upload Code", we coded the XIAO nRF52840 and for the next step, it must be running, so HA can detect it.'),(0,o.yg)("p",null,"Open your HA installation. Go to Settings -> Devices and Services"),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/0_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),"Now, your Integrations page shows up. Select Bluetooth",(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/1_HA.png",alt:"Home Assistant",width:"90%",height:"auto"})),(0,o.yg)("p",null,"And the Integration should appear. "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/2_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("b",null,"NOTE:")," If something is not working, check if Passive scanning ",(0,o.yg)("b",null,"is not selected"),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/3_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("p",null,"When entering the Integrations page, if you have the XIAO nRF52840 Sense connected, it should already have been detected and will appear on the page. "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/5_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("p",null,'Press "Configure" to configure this new Integration. Press Submit. '),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/6_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("p",null,"Now you just need to select the area where to put this new sensor and were done."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/7_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("p",null,"Next, go again to Settings -> Integrations and select the new BTHome integration "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/10_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),"We then are taken to the integration page. We can see that we have 1 device and 3 entities. The entities are the temperature, humidity and signal strength",(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/11_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),"If we click on the entities, we get a new page where we can have a view of them all.",(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/12_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("p",null,"If instead, we pressed on device, we get the device page with all the options as well the current values. Using this page, we can add it to the dashboard. "),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/13_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),'By pressing "ADD to DASHBOARD", we get to choose the view where to put it.',(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/14_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("p",null,'After that, we get a view of the card. Just press "ADD TO DASHBOARD" to add it to the dashboard. '),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/15_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("p",null,"If we go to the dashboard, our newly added card with the temperature and humidity broadcasted by the XIAO nRF52840 Sense."),(0,o.yg)("p",{style:{textAlign:"center"}},(0,o.yg)("img",{src:"https://files.seeedstudio.com/wiki/wiki-ranger/Contributions/BLE-HA/17_HA.png",alt:"Home Assistant",width:"auto",height:"auto"})),(0,o.yg)("h2",{id:"whats-more---deep-sleep-function"},"What's More - Deep Sleep Function"),(0,o.yg)("p",null,"I couldn't make it work. If someone has a solution, please leave a comment. You can share your thoughts at ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/orgs/Seeed-Studio/projects/6?pane=issue&itemId=35979237"},"GitHub")),(0,o.yg)("h2",{id:"-contributor-project"},"\u2728 Contributor Project"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"This project is supported by the Seeed Studio ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/orgs/Seeed-Studio/projects/6/views/1?pane=issue&itemId=30957479"},"Contributor Project"),"."),(0,o.yg)("li",{parentName:"ul"},"Thanks ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/orgs/Seeed-Studio/projects/6?pane=issue&itemId=35979237"},"Bruno's efforts")," and your work will be ",(0,o.yg)("a",{parentName:"li",href:"https://wiki.seeedstudio.com/Honorary-Contributors/"},"exhibited"),".")),(0,o.yg)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,o.yg)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,o.yg)("div",{class:"button_tech_support_container"},(0,o.yg)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,o.yg)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,o.yg)("div",{class:"button_tech_support_container"},(0,o.yg)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,o.yg)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}p.isMDXComponent=!0}}]);