"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[38034],{15680:(e,n,r)=>{r.d(n,{xA:()=>u,yg:()=>S});var t=r(96540);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},u=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),d=i,S=c["".concat(l,".").concat(d)]||c[d]||g[d]||o;return r?t.createElement(S,a(a({ref:n},u),{},{components:r})):t.createElement(S,a({ref:n},u))}));function S(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[c]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1129:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=r(58168),i=(r(96540),r(15680));const o={description:"tVOC Sensor Built-in",title:"tVOC Sensor Built-in",keywords:["Indicator Development Tutorial RP2040"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/SenseCAP_Indicator_RP2040_tVOC",last_update:{date:"3/4/2024",author:"DuKaiyin"}},a="**SGP40 TVOC\u4f20\u611f\u5668(Built-in)**",s={unversionedId:"zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_RP2040/cn-tVOC_Sensor_Built-in",id:"zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_RP2040/cn-tVOC_Sensor_Built-in",title:"tVOC Sensor Built-in",description:"tVOC Sensor Built-in",source:"@site/docs/zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_RP2040/cn-tVOC_Sensor_Built-in.md",sourceDirName:"zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_RP2040",slug:"/cn/SenseCAP_Indicator_RP2040_tVOC",permalink:"/cn/SenseCAP_Indicator_RP2040_tVOC",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SenseCAP/SenseCAP_Indicator/Development_Tutorial/Develop_with_RP2040/cn-tVOC_Sensor_Built-in.md",tags:[],version:"current",lastUpdatedBy:"DuKaiyin",lastUpdatedAt:1709510400,formattedLastUpdatedAt:"Mar 4, 2024",frontMatter:{description:"tVOC Sensor Built-in",title:"tVOC Sensor Built-in",keywords:["Indicator Development Tutorial RP2040"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/SenseCAP_Indicator_RP2040_tVOC",last_update:{date:"3/4/2024",author:"DuKaiyin"}}},l={},p=[],u={toc:p},c="wrapper";function g(e){let{components:n,...r}=e;return(0,i.yg)(c,(0,t.A)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"sgp40-tvoc\u4f20\u611f\u5668built-in"},(0,i.yg)("strong",{parentName:"h1"},"SGP40 TVOC\u4f20\u611f\u5668(Built-in)")),(0,i.yg)("p",null,"SenseCAP Indicator\u4e2d\u5185\u7f6e\u7684SGP40\u4f20\u611f\u5668\u662f\u4e00\u79cd\u9ad8\u8d28\u91cf\u3001\u53ef\u9760\u7684TVOC\u4f20\u611f\u5668\uff0c\u53ef\u5728\u5e7f\u6cdb\u7684\u5e94\u7528\u4e2d\u7528\u4e8e\u76d1\u6d4b\u5ba4\u5185\u548c\u5ba4\u5916\u7a7a\u6c14\u8d28\u91cf\u3002\u5b83\u5177\u67091-500 VOC\u6307\u6570\u70b9\u7684\u6d4b\u91cf\u8303\u56f4\u3002"),(0,i.yg)("p",null,"TVOC\u662f\u4e00\u7ec4\u6709\u673a\u5316\u5408\u7269\uff0c\u4ece\u5404\u79cd\u6765\u6e90\uff0c\u5305\u62ec\u5efa\u7b51\u6750\u6599\u3001\u6e05\u6d01\u4ea7\u54c1\u548c\u4e2a\u4eba\u62a4\u7406\u4ea7\u54c1\u4e2d\u91ca\u653e\u4e3a\u6c14\u4f53\u3002"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"\u793a\u4f8b\u4ee3\u7801:")),(0,i.yg)("p",null,"\u6b64\u793a\u4f8b\u901a\u8fc7IIC\u63a5\u53e3\u8bfb\u53d6\u5185\u7f6eSGP40 TVOC\u4f20\u611f\u5668\u7684\u503c\uff0c\u5e76\u5c06\u5176\u6253\u5370\u5230\u4e32\u884c\u76d1\u89c6\u5668\u4e0a\u3002"),(0,i.yg)("p",null,"\u57fa\u4e8e\u4ee5\u4e0b\u5e93\uff1a"),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/Sensirion/arduino-core/"},"Sensirion Arduino Core library")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/Sensirion/arduino-i2c-sgp40"},"SGP40 TVOC sensor library")),(0,i.yg)("p",null,(0,i.yg)("a",{parentName:"p",href:"https://github.com/Sensirion/arduino-gas-index-algorithm"},"Transfer index library: Sensirion Gas Index Algorithm")),(0,i.yg)("p",null,"\u6ce8\u610f: \u4f7f\u7528\u5185\u7f6e\u4f20\u611f\u5668\u65f6\uff0c\u5fc5\u987b\u542f\u7528\u4f20\u611f\u5668\u7535\u6e90"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-cpp"},'#include <Arduino.h>\n#include <SensirionI2CSgp40.h>\n#include <VOCGasIndexAlgorithm.h>\n#include <Wire.h>\n\nSensirionI2CSgp40 sgp40;\nVOCGasIndexAlgorithm voc_algorithm;\n\n\n//The built-in sensor needs to be powered on\nvoid sensor_power_on(void) {\n  pinMode(18, OUTPUT);\n  digitalWrite(18, HIGH);\n}\n\n/************************ sgp40 tvoc  ****************************/\n\nvoid sensor_sgp40_init(void) {\n  uint16_t error;\n  char errorMessage[256];\n\n  sgp40.begin(Wire);\n\n  uint16_t serialNumber[3];\n  uint8_t serialNumberSize = 3;\n\n  error = sgp40.getSerialNumber(serialNumber, serialNumberSize);\n\n  if (error) {\n    Serial.print("Error trying to execute getSerialNumber(): ");\n    errorToString(error, errorMessage, 256);\n    Serial.println(errorMessage);\n  } else {\n    Serial.print("SerialNumber:");\n    Serial.print("0x");\n    for (size_t i = 0; i < serialNumberSize; i++) {\n      uint16_t value = serialNumber[i];\n      Serial.print(value < 4096 ? "0" : "");\n      Serial.print(value < 256 ? "0" : "");\n      Serial.print(value < 16 ? "0" : "");\n      Serial.print(value, HEX);\n    }\n    Serial.println();\n  }\n\n  uint16_t testResult;\n  error = sgp40.executeSelfTest(testResult);\n  if (error) {\n    Serial.print("Error trying to execute executeSelfTest(): ");\n    errorToString(error, errorMessage, 256);\n    Serial.println(errorMessage);\n  } else if (testResult != 0xD400) {\n    Serial.print("executeSelfTest failed with error: ");\n    Serial.println(testResult);\n  }\n}\n\nvoid sensor_sgp40_get(void) {\n  uint16_t error;\n  char errorMessage[256];\n  uint16_t defaultRh = 0x8000;\n  uint16_t defaultT = 0x6666;\n  uint16_t srawVoc = 0;\n\n  Serial.print("sensor sgp40: ");\n\n  error = sgp40.measureRawSignal(defaultRh, defaultT, srawVoc);\n  if (error) {\n    Serial.print("Error trying to execute measureRawSignal(): ");\n    errorToString(error, errorMessage, 256);\n    Serial.println(errorMessage);\n  } else {\n    Serial.print("SRAW_VOC:");\n    Serial.print(srawVoc);\n\n    int32_t voc_index = voc_algorithm.process(srawVoc);\n    Serial.print(", VOC Index: ");\n    Serial.println(voc_index);\n  }\n}\n\n/************************ setup & loop ****************************/\n\nvoid setup() {\n  Serial.begin(115200);\n\n  sensor_power_on();\n\n  Wire.setSDA(20);\n  Wire.setSCL(21);\n  Wire.begin();\n\n  sensor_sgp40_init();\n}\n\nvoid loop() {\n  sensor_sgp40_get();\n  delay(5000);\n}\n\n')),(0,i.yg)("div",{align:"center"},(0,i.yg)("img",{width:800,src:"https://files.seeedstudio.com/wiki/SenseCAP/SenseCAP_Indicator/tvoc.png"})),(0,i.yg)("p",null,'"SRAW_VOC" \u662f\u6307\u4f20\u611f\u5668\u5bf9\u6325\u53d1\u6027\u6709\u673a\u5316\u5408\u7269\uff08VOCs\uff09\u7684\u539f\u59cb\u4fe1\u53f7\u8f93\u51fa\uff0c\u901a\u5e38\u662f\u4e0e\u7a7a\u6c14\u4e2d\u7684VOC\u6d53\u5ea6\u6210\u6bd4\u4f8b\u7684\u7535\u538b\u6216\u7535\u963b\u6d4b\u91cf\u3002'),(0,i.yg)("p",null,'"VOC\u6307\u6570" \u662f\u4e00\u79cd\u8ba1\u7b97\u51fa\u7684\u503c\uff0c\u7528\u4f5c\u4ee5\u66f4\u7528\u6237\u53cb\u597d\u7684\u683c\u5f0f\u8868\u793a\u7a7a\u6c14\u4e2dVOC\u6d53\u5ea6\u7684\u65b9\u5f0f\u3002VOC\u6307\u6570\u662f\u4e00\u4e2a\u4ece0\u5230500\u7684\u6570\u503c\uff0c\u6570\u503c\u8d8a\u9ad8\u8868\u793aVOC\u6d53\u5ea6\u8d8a\u9ad8\u3002'),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"\u6ce8\u610f:")," \u6b64\u5185\u7f6eSCD41\u4f20\u611f\u5668\u4e2d\u7684\u6e29\u5ea6\u548c\u6e7f\u5ea6\u5e76\u4e0d\u80fd\u5b8c\u5168\u4ee3\u8868\u7a7a\u6c14\u7684\u6e29\u5ea6\u548c\u6e7f\u5ea6\u3002"),(0,i.yg)("p",null," ",(0,i.yg)("strong",{parentName:"p"},"\u6280\u672f\u652f\u6301")),(0,i.yg)("p",null,"   \u522b\u62c5\u5fc3\uff0c\u6211\u4eec\u4e3a\u60a8\u63d0\u4f9b\u4e86\u652f\u6301\uff01\u8bf7\u8bbf\u95ee\u6211\u4eec\u7684",(0,i.yg)("a",{parentName:"p",href:"https://discord.com/invite/QqMgVwHT3X"},"Seeed\u5b98\u65b9Discord\u9891\u9053"),"\u63d0\u51fa\u60a8\u7684\u95ee\u9898\uff01"),(0,i.yg)("p",null,"\u5982\u679c\u60a8\u6709\u5927\u91cf\u8ba2\u5355\u6216\u5b9a\u5236\u9700\u6c42\uff0c\u8bf7\u8054\u7cfb ",(0,i.yg)("a",{parentName:"p",href:"mailto:iot@seeed.cc"},"iot@seeed.cc")))}g.isMDXComponent=!0}}]);