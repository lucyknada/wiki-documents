"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[63837],{15680:(e,t,r)=>{r.d(t,{xA:()=>l,yg:()=>c});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,c=m["".concat(p,".").concat(d)]||m[d]||g[d]||i;return r?n.createElement(c,o(o({ref:t},l),{},{components:r})):n.createElement(c,o({ref:t},l))}));function c(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},11274:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(58168),a=(r(96540),r(15680));const i={description:"SPI Communication on Seeed Studio XIAO SAMD21",title:"\u4f7f\u7528 XIAO SAMD21 \u5b66\u4e60SPI \u901a\u8baf",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/XIAO-SPI-Communication-Interface",last_update:{date:"10/11/2023",author:"\u8d75\u6842\u83b9"}},o=void 0,s={unversionedId:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_SAMD21/CN_XIAO-SPI-Communication-Interface",id:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_SAMD21/CN_XIAO-SPI-Communication-Interface",title:"\u4f7f\u7528 XIAO SAMD21 \u5b66\u4e60SPI \u901a\u8baf",description:"SPI Communication on Seeed Studio XIAO SAMD21",source:"@site/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_SAMD21/CN_XIAO-SPI-Communication-Interface.md",sourceDirName:"zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_SAMD21",slug:"/cn/XIAO-SPI-Communication-Interface",permalink:"/cn/XIAO-SPI-Communication-Interface",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/zh-CN/Sensor/SeeedStudio_XIAO/SeeedStudio_XIAO_SAMD21/CN_XIAO-SPI-Communication-Interface.md",tags:[],version:"current",lastUpdatedBy:"\u8d75\u6842\u83b9",lastUpdatedAt:1696982400,formattedLastUpdatedAt:"Oct 11, 2023",frontMatter:{description:"SPI Communication on Seeed Studio XIAO SAMD21",title:"\u4f7f\u7528 XIAO SAMD21 \u5b66\u4e60SPI \u901a\u8baf",keywords:["xiao"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/cn/XIAO-SPI-Communication-Interface",last_update:{date:"10/11/2023",author:"\u8d75\u6842\u83b9"}},sidebar:"CNSidebar",previous:{title:"\u4f7f\u7528 XIAO SAMD21 \u5b66\u4e60\u5d4c\u5165\u5f0f\u673a\u5668\u5b66\u4e60",permalink:"/cn/Seeeduino-XIAO-TinyML"},next:{title:"\u4f7f\u7528 XIAO SAMD21 \u505a\u4e00\u4e2a DAPLink \u8bbe\u5907",permalink:"/CN/Seeeduino-XIAO-DAPLink"}},p={},u=[{value:"SPI\u901a\u8baf\u63a5\u53e3",id:"spi\u901a\u8baf\u63a5\u53e3",level:3},{value:"\u786c\u4ef6",id:"\u786c\u4ef6",level:3},{value:"\u8f6f\u4ef6",id:"\u8f6f\u4ef6",level:3}],l={toc:u},m="wrapper";function g(e){let{components:t,...r}=e;return(0,a.yg)(m,(0,n.A)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h3",{id:"spi\u901a\u8baf\u63a5\u53e3"},"SPI\u901a\u8baf\u63a5\u53e3"),(0,a.yg)("h3",{id:"\u786c\u4ef6"},"\u786c\u4ef6"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"\u6240\u9700\u6750\u6599")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/Seeeduino-XIAO-Arduino-Microcontroller-SAMD21-Cortex-M0+-p-4426.html"},"Seeed Studio XIAO")," x 1"),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://www.seeedstudio.com/Grove-High-Precision-Barometer-Sensor-DPS310-p-4397.html"},"Grove-High Precision \u538b\u529b\u4f20\u611f\u5668")),(0,a.yg)("li",{parentName:"ul"},"Type-C \u6570\u636e\u7ebf x1")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"\u786c\u4ef6\u8fde\u63a5")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 1.")," Grove-High Precision\u4f20\u611f\u5668\u7684 ",(0,a.yg)("strong",{parentName:"p"},"CSK")," \u8fde\u63a5\u5230 Seeed Studio XIAO \u7684 ",(0,a.yg)("strong",{parentName:"p"},"SCK"),"\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 2.")," \u4f20\u611f\u5668\u7684 ",(0,a.yg)("strong",{parentName:"p"},"CS")," \u8fde\u63a5\u5230 Seeed Studio XIAO \u7684 ",(0,a.yg)("strong",{parentName:"p"},"D3"),"\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 3.")," \u4f20\u611f\u5668\u7684 ",(0,a.yg)("strong",{parentName:"p"},"SDO")," \u8fde\u63a5\u5230 Seeed Studio XIAO \u7684 ",(0,a.yg)("strong",{parentName:"p"},"MISO"),"\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 4.")," \u4f20\u611f\u5668\u7684 ",(0,a.yg)("strong",{parentName:"p"},"SDI")," \u8fde\u63a5\u5230 Seeed Studio XIAO \u7684 ",(0,a.yg)("strong",{parentName:"p"},"MOSI"),"\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 5.")," \u4f20\u611f\u5668\u7684 ",(0,a.yg)("strong",{parentName:"p"},"GND")," \u8fde\u63a5\u5230 Seeed Studio XIAO \u7684 ",(0,a.yg)("strong",{parentName:"p"},"GND"),"\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 6.")," \u4f20\u611f\u5668\u7684 ",(0,a.yg)("strong",{parentName:"p"},"3V3")," \u8fde\u63a5\u5230 Seeed Studio XIAO \u7684 ",(0,a.yg)("strong",{parentName:"p"},"3.3V"),"\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 7.")," \u901a\u8fc7 Type-C \u6570\u636e\u7ebf\u5c06 Seeed Studio XIAO \u8fde\u63a5\u5230 PC\u3002"))),(0,a.yg)("h3",{id:"\u8f6f\u4ef6"},"\u8f6f\u4ef6"),(0,a.yg)("admonition",{type:"note"},(0,a.yg)("p",{parentName:"admonition"},"\u5982\u679c\u8fd9\u662f\u60a8\u7b2c\u4e00\u6b21\u4f7f\u7528 Arduino\uff0c\u6211\u4eec\u5f3a\u70c8\u5efa\u8bae\u60a8\u5728\u5f00\u59cb\u4e4b\u524d\u5148\u9605\u8bfb",(0,a.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/Getting_Started_with_Arduino/"},"Arduino \u5165\u95e8"),"\u3002")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 1.")," \u4ece Github \u4e0b\u8f7d ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/Infineon/DPS310-Pressure-Sensor.git"},"DPS310-Pressure-Sensor")," \u5e93\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 2.")," \u8bf7\u53c2\u9605",(0,a.yg)("a",{parentName:"p",href:"https://wiki.seeedstudio.com/How_to_install_Arduino_Library"},"\u5982\u4f55\u5b89\u88c5\u5e93"),"\u6765\u5b89\u88c5Arduino\u7684\u5e93\u3002")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"Step 3.")," \u5c06\u4ee3\u7801\u590d\u5236\u5230 Arduino IDE \u4e2d\u5e76\u4e0a\u4f20\u3002"))),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-c"},'#include <Dps310.h>\n\n// Dps310 Opject\nDps310 Dps310PressureSensor = Dps310();\n\nvoid setup()\n{\n  //pin number of your slave select line\n  //XMC2GO\n  int16_t pin_cs = 3;\n  //for XMC 1100 Bootkit  & XMC4700 Relax Kit uncomment the following line\n  //int16_t pin_cs = 10;\n\n  Serial.begin(9600);\n  while (!Serial);\n\n\n  //Call begin to initialize Dps310\n  //The parameter pin_nr is the number of the CS pin on your Microcontroller\n  Dps310PressureSensor.begin(SPI, pin_cs);\n\n  //temperature measure rate (value from 0 to 7)\n  //2^temp_mr temperature measurement results per second\n  int16_t temp_mr = 2;\n  //temperature oversampling rate (value from 0 to 7)\n  //2^temp_osr internal temperature measurements per result\n  //A higher value increases precision\n  int16_t temp_osr = 2;\n  //pressure measure rate (value from 0 to 7)\n  //2^prs_mr pressure measurement results per second\n  int16_t prs_mr = 2;\n  //pressure oversampling rate (value from 0 to 7)\n  //2^prs_osr internal pressure measurements per result\n  //A higher value increases precision\n  int16_t prs_osr = 2;\n  //startMeasureBothCont enables background mode\n  //temperature and pressure ar measured automatically\n  //High precision and hgh measure rates at the same time are not available.\n  //Consult Datasheet (or trial and error) for more information\n  int16_t ret = Dps310PressureSensor.startMeasureBothCont(temp_mr, temp_osr, prs_mr, prs_osr);\n  //Use one of the commented lines below instead to measure only temperature or pressure\n  //int16_t ret = Dps310PressureSensor.startMeasureTempCont(temp_mr, temp_osr);\n  //int16_t ret = Dps310PressureSensor.startMeasurePressureCont(prs_mr, prs_osr);\n\n\n  if (ret != 0)\n  {\n    Serial.print("Init FAILED! ret = ");\n    Serial.println(ret);\n  }\n  else\n  {\n    Serial.println("Init complete!");\n  }\n}\n\n\n\nvoid loop()\n{\n  uint8_t pressureCount = 20;\n  float pressure[pressureCount];\n  uint8_t temperatureCount = 20;\n  float temperature[temperatureCount];\n\n  //This function writes the results of continuous measurements to the arrays given as parameters\n  //The parameters temperatureCount and pressureCount should hold the sizes of the arrays temperature and pressure when the function is called\n  //After the end of the function, temperatureCount and pressureCount hold the numbers of values written to the arrays\n  //Note: The Dps310 cannot save more than 32 results. When its result buffer is full, it won\'t save any new measurement results\n  int16_t ret = Dps310PressureSensor.getContResults(temperature, temperatureCount, pressure, pressureCount);\n\n  if (ret != 0)\n  {\n    Serial.println();\n    Serial.println();\n    Serial.print("FAIL! ret = ");\n    Serial.println(ret);\n  }\n  else\n  {\n    Serial.println();\n    Serial.println();\n    Serial.print(temperatureCount);\n    Serial.println(" temperature values found: ");\n    for (int16_t i = 0; i < temperatureCount; i++)\n    {\n      Serial.print(temperature[i]);\n      Serial.println(" degrees of Celsius");\n    }\n\n    Serial.println();\n    Serial.print(pressureCount);\n    Serial.println(" pressure values found: ");\n    for (int16_t i = 0; i < pressureCount; i++)\n    {\n      Serial.print(pressure[i]);\n      Serial.println(" Pascal");\n    }\n  }\n\n  //Wait some time, so that the Dps310 can refill its buffer\n  delay(10000);\n}\n')),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("strong",{parentName:"li"},"Step 4.")," \u70b9\u51fb",(0,a.yg)("strong",{parentName:"li"},"Tools")," > ",(0,a.yg)("strong",{parentName:"li"},"Serial Monitor")," , \u6216\u8005\u540c\u65f6\u6309\u4e0b ",(0,a.yg)("strong",{parentName:"li"},"Ctrl+Shift+M")," \uff0c\u4e0a\u4f20\u6210\u529f\u540e\u6253\u5f00\u4e32\u53e3\u76d1\u89c6\u5668\uff0c\u8f93\u51fa\u5982\u4e0b\uff1a")),(0,a.yg)("p",{style:{textAlign:"center"}},(0,a.yg)("img",{src:"https://files.seeedstudio.com/wiki/Seeeduino-XIAO/img/spi.png",alt:"pir",width:600,height:"auto"})))}g.isMDXComponent=!0}}]);