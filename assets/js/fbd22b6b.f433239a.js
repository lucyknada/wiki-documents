"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[71912],{3905:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>m});var l=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,l)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,l,a=function(t,e){if(null==t)return{};var n,l,a={},r=Object.keys(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(l=0;l<r.length;l++)n=r[l],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=l.createContext({}),u=function(t){var e=l.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=u(t.components);return l.createElement(s.Provider,{value:e},t.children)},c="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return l.createElement(l.Fragment,{},e)}},p=l.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,s=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),c=u(n),p=a,m=c["".concat(s,".").concat(p)]||c[p]||k[p]||r;return n?l.createElement(m,o(o({ref:e},d),{},{components:n})):l.createElement(m,o({ref:e},d))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,o=new Array(r);o[0]=p;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[c]="string"==typeof t?t:a,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}p.displayName="MDXCreateElement"},85162:(t,e,n)=>{n.d(e,{Z:()=>o});var l=n(67294),a=n(86010);const r={tabItem:"tabItem_Ymn6"};function o(t){let{children:e,hidden:n,className:o}=t;return l.createElement("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,o),hidden:n},e)}},74866:(t,e,n)=>{n.d(e,{Z:()=>b});var l=n(87462),a=n(67294),r=n(86010),o=n(12466),i=n(16550),s=n(91980),u=n(67392),d=n(50012);function c(t){return function(t){return a.Children.map(t,(t=>{if(!t||(0,a.isValidElement)(t)&&function(t){const{props:e}=t;return!!e&&"object"==typeof e&&"value"in e}(t))return t;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof t.type?t.type:t.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(t).map((t=>{let{props:{value:e,label:n,attributes:l,default:a}}=t;return{value:e,label:n,attributes:l,default:a}}))}function k(t){const{values:e,children:n}=t;return(0,a.useMemo)((()=>{const t=e??c(n);return function(t){const e=(0,u.l)(t,((t,e)=>t.value===e.value));if(e.length>0)throw new Error(`Docusaurus error: Duplicate values "${e.map((t=>t.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(t),t}),[e,n])}function p(t){let{value:e,tabValues:n}=t;return n.some((t=>t.value===e))}function m(t){let{queryString:e=!1,groupId:n}=t;const l=(0,i.k6)(),r=function(t){let{queryString:e=!1,groupId:n}=t;if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,s._X)(r),(0,a.useCallback)((t=>{if(!r)return;const e=new URLSearchParams(l.location.search);e.set(r,t),l.replace({...l.location,search:e.toString()})}),[r,l])]}function h(t){const{defaultValue:e,queryString:n=!1,groupId:l}=t,r=k(t),[o,i]=(0,a.useState)((()=>function(t){let{defaultValue:e,tabValues:n}=t;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!p({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map((t=>t.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const l=n.find((t=>t.default))??n[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:e,tabValues:r}))),[s,u]=m({queryString:n,groupId:l}),[c,h]=function(t){let{groupId:e}=t;const n=function(t){return t?`docusaurus.tab.${t}`:null}(e),[l,r]=(0,d.Nk)(n);return[l,(0,a.useCallback)((t=>{n&&r.set(t)}),[n,r])]}({groupId:l}),f=(()=>{const t=s??c;return p({value:t,tabValues:r})?t:null})();(0,a.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,a.useCallback)((t=>{if(!p({value:t,tabValues:r}))throw new Error(`Can't select invalid tab value=${t}`);i(t),u(t),h(t)}),[u,h,r]),tabValues:r}}var f=n(72389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function w(t){let{className:e,block:n,selectedValue:i,selectValue:s,tabValues:u}=t;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),k=t=>{const e=t.currentTarget,n=d.indexOf(e),l=u[n].value;l!==i&&(c(e),s(l))},p=t=>{let e=null;switch(t.key){case"Enter":k(t);break;case"ArrowRight":{const n=d.indexOf(t.currentTarget)+1;e=d[n]??d[0];break}case"ArrowLeft":{const n=d.indexOf(t.currentTarget)-1;e=d[n]??d[d.length-1];break}}e?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},e)},u.map((t=>{let{value:e,label:n,attributes:o}=t;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,key:e,ref:t=>d.push(t),onKeyDown:p,onClick:k},o,{className:(0,r.Z)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":i===e})}),n??e)})))}function v(t){let{lazy:e,children:n,selectedValue:l}=t;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const t=r.find((t=>t.props.value===l));return t?(0,a.cloneElement)(t,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((t,e)=>(0,a.cloneElement)(t,{key:e,hidden:t.props.value!==l}))))}function N(t){const e=h(t);return a.createElement("div",{className:(0,r.Z)("tabs-container",g.tabList)},a.createElement(w,(0,l.Z)({},t,e)),a.createElement(v,(0,l.Z)({},t,e)))}function b(t){const e=(0,f.Z)();return a.createElement(N,(0,l.Z)({key:String(e)},t))}},13960:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>u,toc:()=>c});var l=n(87462),a=(n(67294),n(3905)),r=n(74866),o=n(85162);const i={description:"Hardware and Interfaces Usage for J401 carrier board",title:"J401 carrier board Hardware and Interfaces Usage",tags:["J401 carrier board"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/J401_carrierboard_Hardware_Interfaces_Usage",last_update:{date:"04/29/2024",author:"Jiahao"}},s=void 0,u={unversionedId:"Edge/NVIDIA_Jetson/Carrier_Boards/J401/J401_carrierboard_Hardware_Interfaces_Usage",id:"Edge/NVIDIA_Jetson/Carrier_Boards/J401/J401_carrierboard_Hardware_Interfaces_Usage",title:"J401 carrier board Hardware and Interfaces Usage",description:"Hardware and Interfaces Usage for J401 carrier board",source:"@site/docs/Edge/NVIDIA_Jetson/Carrier_Boards/J401/J401_carrierboard_Hardware_Interfaces_Usage.md",sourceDirName:"Edge/NVIDIA_Jetson/Carrier_Boards/J401",slug:"/J401_carrierboard_Hardware_Interfaces_Usage",permalink:"/J401_carrierboard_Hardware_Interfaces_Usage",draft:!1,editUrl:"https://github.com/Seeed-Studio/wiki-documents/blob/docusaurus-version/docs/Edge/NVIDIA_Jetson/Carrier_Boards/J401/J401_carrierboard_Hardware_Interfaces_Usage.md",tags:[{label:"J401 carrier board",permalink:"/tags/j-401-carrier-board"}],version:"current",lastUpdatedBy:"Jiahao",lastUpdatedAt:1714348800,formattedLastUpdatedAt:"Apr 29, 2024",frontMatter:{description:"Hardware and Interfaces Usage for J401 carrier board",title:"J401 carrier board Hardware and Interfaces Usage",tags:["J401 carrier board"],image:"https://files.seeedstudio.com/wiki/wiki-platform/S-tempor.png",slug:"/J401_carrierboard_Hardware_Interfaces_Usage",last_update:{date:"04/29/2024",author:"Jiahao"}},sidebar:"ProductSidebar",previous:{title:"A608 Carrier Board",permalink:"/reComputer_A608_Flash_System"},next:{title:"J401 carrier Board Flash JetPack",permalink:"/reComputer_J4012_Flash_Jetpack"}},d={},c=[{value:"Introduction",id:"introduction",level:2},{value:"260 Pin SODIMM",id:"260-pin-sodimm",level:2},{value:"Connection Overview",id:"connection-overview",level:3},{value:"CSI Cameras",id:"csi-cameras",level:2},{value:"Supported cameras are as follows:",id:"supported-cameras-are-as-follows",level:3},{value:"Connection Overview",id:"connection-overview-1",level:3},{value:"Usage",id:"usage",level:3},{value:"RTC",id:"rtc",level:2},{value:"Connection Overview",id:"connection-overview-2",level:3},{value:"Usage",id:"usage-1",level:3},{value:"M.2 Key M",id:"m2-key-m",level:2},{value:"Connection Overview",id:"connection-overview-3",level:3},{value:"Usage",id:"usage-2",level:3},{value:"M.2 Key E",id:"m2-key-e",level:2},{value:"Connection Overview",id:"connection-overview-4",level:3},{value:"Usage",id:"usage-3",level:3},{value:"Wifi test",id:"wifi-test",level:4},{value:"Bluetooth test",id:"bluetooth-test",level:4},{value:"Fan control",id:"fan-control",level:2},{value:"Usage",id:"usage-4",level:3},{value:"DI/DO",id:"dido",level:2},{value:"The detial of 40-pin header is shown below:",id:"the-detial-of-40-pin-header-is-shown-below",level:3},{value:"UART",id:"uart",level:3},{value:"Connection Overview",id:"connection-overview-5",level:4},{value:"Usage",id:"usage-5",level:4},{value:"I2C",id:"i2c",level:3},{value:"Connection Overview",id:"connection-overview-6",level:4},{value:"Test",id:"test",level:4},{value:"Tech Support &amp; Product Discussion",id:"tech-support--product-discussion",level:2}],k={toc:c},p="wrapper";function m(t){let{components:e,...n}=t;return(0,a.kt)(p,(0,l.Z)({},k,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/reComputer-J401-Carrier-Board-for-Jetson-Orin-NX-Orin-Nano-p-5636.html"},"reComputer J401 carrier board"))," supports ",(0,a.kt)("strong",{parentName:"p"},"NVIDIA Jetson Orin Nano/NX(",(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-JETSON-ORIN-NANO-4GB-Module-p-5553.html?___store=retailer"},"Orin Nano 4GB"),"/",(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-JETSON-ORIN-NANO-8GB-Module-p-5551.html"},"Orin Nano 8GB")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-Jetson-Orin-NX-Module-8GB-p-5522.html"},"Orin NX 8GB"),"/",(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-Jetson-Orin-NX-Module-16GB-p-5523.html"},"Orin NX 16GB"),")")," bringing exceptional performance and being engineered to tackle tough edge computing tasks with ease. It's the perfect choice for developing industrial automation systems, building powerful AI applications, and more."),(0,a.kt)("p",null,"It features networking capability that is equipped with a ",(0,a.kt)("strong",{parentName:"p"},"Gigabit Ethernet port")," for fast networking. It also comes with four ",(0,a.kt)("strong",{parentName:"p"},"USB 3.2 Type-A (10Gbps) ports"),", one ",(0,a.kt)("strong",{parentName:"p"},"USB 2.0 Type-C port"),", and one ",(0,a.kt)("strong",{parentName:"p"},"CAN connector")," for versatile connectivity options.This extension board has been mounted with one ",(0,a.kt)("strong",{parentName:"p"},"M.2 Key M 2280")," and one ",(0,a.kt)("strong",{parentName:"p"},"M.2 Key E")," slot for ample space for flexible storage and wireless connectivity expansion."),(0,a.kt)("p",null,"In addition, there are multiple peripherals supported on the board. It can enable users to capture and display high-quality video content with two ",(0,a.kt)("strong",{parentName:"p"},"15-pin CSI camera connectors")," and the ",(0,a.kt)("strong",{parentName:"p"},"HDMI 2.1 port"),". There also includes a ",(0,a.kt)("strong",{parentName:"p"},"FAN connec260 Pin SODIMMtor")," for cooling purposes and one ",(0,a.kt)("strong",{parentName:"p"},"RTC socket")," for reliable timekeeping."),(0,a.kt)("p",null,"The board supports a wide input range of ",(0,a.kt)("strong",{parentName:"p"},"9-19V DC"),", making it flexible to integrate into a variety of computing tasks. It maintains operation in the temperature range from -10\xb0C to 60\xb0C."),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://wdcdn.qpic.cn/MTY4ODg1NTkyNTI4NTE1NA_356376_xs4inuEPMdjVeyj__1679475367?w=1200&h=1335"})),(0,a.kt)("div",{class:"get_one_now_container",style:{textAlign:"center"}},(0,a.kt)("a",{class:"get_one_now_item",href:"https://www.seeedstudio.com/reComputer-J401-Carrier-Board-for-Jetson-Orin-NX-Orin-Nano-p-5636.html"},(0,a.kt)("strong",null,(0,a.kt)("span",null,(0,a.kt)("font",{color:"FFFFFF",size:"4"}," Get One Now \ud83d\uddb1\ufe0f"))))),(0,a.kt)("h2",{id:"260-pin-sodimm"},"260 Pin SODIMM"),(0,a.kt)("p",null,"The main function of 260 pin SODIMM is to connect your carrier board with ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-JETSON-ORIN-NANO-4GB-Module-p-5553.html?___store=retailer"},"NVIDIA Jetson Orin Nano 4GB"),"/",(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-JETSON-ORIN-NANO-8GB-Module-p-5551.html"},"NVIDIA Jetson Orin Nano 8GB")),", ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-Jetson-Orin-NX-Module-8GB-p-5522.html"},"NVIDIA Jetson Orin NX 8GB"),"/",(0,a.kt)("a",{parentName:"strong",href:"https://www.seeedstudio.com/NVIDIA-Jetson-Orin-NX-Module-16GB-p-5523.html"},"NVIDIA Jetson Orin NX 16GB")),"."),(0,a.kt)("h3",{id:"connection-overview"},"Connection Overview"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/Jetson-connect-J401.gif"})),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If the connection is correct, when you connect your power adapter, you will see the power indicator light up.")),(0,a.kt)("h2",{id:"csi-cameras"},"CSI Cameras"),(0,a.kt)("p",null,"CSI stands for Camera Serial Interface. It is a specification that describes a serial communication interface for transferring video data from image sensors to a host processor. CSI is commonly used in mobile devices, cameras, and embedded systems to enable high-speed and efficient transfer of image and video data for processing and analysis."),(0,a.kt)("h3",{id:"supported-cameras-are-as-follows"},"Supported cameras are as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"IMX219 cameras"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/Raspberry-Pi-Camera-Module-V2.html"},"Raspberry Pi Camera V2")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-130-Camera-130-FOV-Applicable-for-Jetson-Nano-p-4606.html"},"IMX219-130 8MP Camera with 130\xb0 FOV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-160-Camera-160-FOV-Applicable-for-Jetson-Nano-p-4603.html"},"IMX219-160 8MP Camera with 160\xb0 FOV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-200-Camera-200-FOV-Applicable-for-Jetson-Nano-p-4609.html"},"IMX219-200 8MP Camera with 200\xb0 FOV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-77-Camera-77-FOV-Applicable-for-Jetson-Nano-p-4608.html"},"IMX219-77 8MP Camera with 77\xb0 FOV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX-219-CMOS-camera-module-M12-and-CS-camera-available-p-5372.html"},"IMX219 M12/CS mount CMOS Camera Module")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-83-Stereo-Camera-8MP-Binocular-Camera-Module-Depth-Vision-Applicable-for-Jetson-Nano-p-4610.html"},"IMX219-83 8MP 3D Stereo Camera Module")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-77IR-Camera-77-FOV-Infrared-Applicable-for-Jetson-Nano-p-4607.html"},"IMX219-77IR 8MP IR Night Vision Camera with 77\xb0 FOV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX219-160IR-Camera160-FOV-Infrared-Applicable-for-Jetson-Nano-p-4602.html"},"IMX219-160IR 8MP Camera with 160\xb0 FOV")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/IMX-219-CMOS-camera-module-M12-and-CS-camera-available-p-5372.html"},"IMX219 M12/CS mount CMOS Camera Module")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"IMX477 cameras"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/Raspberry-Pi-High-Quality-Cam-p-4463.html"},"Raspberry Pi High Quality Camera")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/Raspberry-Pi-HQ-Camera-M12-mount-p-5578.html"},"Raspberry Pi HQ Camera - M12 mount")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.seeedstudio.com/High-Quality-Camera-For-Raspberry-Pi-Compute-Module-Jetson-Nano-p-4729.html"},"High Quality Camera for Raspberry Pi"))))),(0,a.kt)("h3",{id:"connection-overview-1"},"Connection Overview"),(0,a.kt)("p",null,"Here the 2 CSI camera connectors are marked as ",(0,a.kt)("strong",{parentName:"p"},"CAM0 and CAM1"),". You can either connect one camera to any connector out of the 2 or connect 2 cameras to both the connectors at the same time."),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/camera-connect-J401.gif"})),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("p",null,"Open your terminal(Ctrl+Alt+T) and input command like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo /opt/nvidia/jetson-io/jetson-io.py\n")),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:800,src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-cameral.gif"})),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"Method 1",label:"Method 1",mdxType:"TabItem"},(0,a.kt)("p",null,"For CAM0 port"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"nvgstcapture-1.0 sensor-id=0 \n")),(0,a.kt)("p",null,"For CAM1 port"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"nvgstcapture-1.0 sensor-id=1  \n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If you want to change further settings of the camera, you can type ",(0,a.kt)("strong",{parentName:"p"},'"nvgstcapture-1.0 --help"')," to access all the configurable options available."))),(0,a.kt)(o.Z,{value:"Method 2",label:"Method 2",mdxType:"TabItem"},(0,a.kt)("p",null,"For CAM0 port"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gst-launch-1.0 nvarguscamerasrc sensor-id=0 sensor-mode=0 ! 'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=20/1, format=NV12' ! nvvidconv ! xvimagesink\n")),(0,a.kt)("p",null,"For CAM1 port"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"gst-launch-1.0 nvarguscamerasrc sensor-id=1 sensor-mode=0 ! 'video/x-raw(memory:NVMM),width=1920, height=1080, framerate=20/1, format=NV12' ! nvvidconv ! xvimagesink\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If you want to change further settings of the camera, you can update the arguments such as ",(0,a.kt)("strong",{parentName:"p"},"width, height, framerate, format"),", etc.")))),(0,a.kt)("h2",{id:"rtc"},"RTC"),(0,a.kt)("p",null,"RTC stands for Real-Time Clock. It is a clock that keeps track of the current time and date independently of the main system clock. RTCs are commonly used in computers, embedded systems, and other electronic devices to maintain accurate timekeeping even when the device is powered off. They are often powered by a small battery to ensure continuous operation and retain time and date information during power cycles."),(0,a.kt)("h3",{id:"connection-overview-2"},"Connection Overview"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"Method 1",label:"Method 1",mdxType:"TabItem"},(0,a.kt)("p",null,"Connect a ",(0,a.kt)("strong",{parentName:"p"},"3V CR1220 coin cell battery")," to the RTC socket on the board as shown below. Make sure the ",(0,a.kt)("strong",{parentName:"p"},"positive (+)")," end of the battery is facing upwards."),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-connect-coin-cell-back.gif"}))),(0,a.kt)(o.Z,{value:"Method 2",label:"Method 2",mdxType:"TabItem"},(0,a.kt)("p",null,"Connect a ",(0,a.kt)("strong",{parentName:"p"},"3V CR2302 coin cell battery with JST connector")," to the 2-pin 1.25mm JST socket on the board as shown below:"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-connect-coin-cell.gif"})))),(0,a.kt)("h3",{id:"usage-1"},"Usage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 1:")," Connect an RTC battery as mentioned above.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 2:")," Turn on reComputer Industrial.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 3:")," On the Ubuntu Desktop, click the drop-down menu at the top right corner, navigate to ",(0,a.kt)("inlineCode",{parentName:"p"},"Settings > Date & Time"),", connect to a network via an Ethernet cable and select ",(0,a.kt)("strong",{parentName:"p"},"Automatic Date & Time")," to obtain the date/ time automatically."))),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Industrial/13.png"})),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If you have not connected to internet via Ethernet, you can manually set the date/time here.")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 4:")," Open a terminal window, and execute the below command to check the hardware clock time. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo hwclock\n")),(0,a.kt)("p",null,"You will see the output something like below which is not the correct date/time."),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-RTC.png"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 5:")," Change the hardware clock time to the current system clock time by entering the below command.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo hwclock --systohc\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 6:")," Remove any Ethernet cables connected to make sure it will not grab the time from the internet and reboot the board. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo reboot\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 7:")," Check hardware clock time to verify that the date/ time stays the same eventhough the device was powered off. ")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Step 8:")," Create a new shell script using any text editor of your preference. Here we use ",(0,a.kt)("strong",{parentName:"p"},"vi")," text editor."))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo vi /usr/bin/hwtosys.sh \n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 9:")," Enter ",(0,a.kt)("strong",{parentName:"li"},"insert mode")," by pressing ",(0,a.kt)("strong",{parentName:"li"},"i"),", copy and paste the following content inside the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"#!/bin/bash\n\nsudo hwclock --hctosys\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 10:")," Make the script executable.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo chmod +x /usr/bin/hwtosys.sh \n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 11:")," Create a systemd file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo nano /lib/systemd/system/hwtosys.service \n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 12:")," Add the following inside the file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"[Unit]\nDescription=Change system clock from hardware clock\n\n[Service]\nExecStart=/usr/bin/hwtosys.sh\n\n[Install]\nWantedBy=multi-user.target\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 13:")," Reload systemctl daemon.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl daemon-reload \n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 14:")," Enable the newly created service to start on boot and start the service.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl enable hwtosys.service\nsudo systemctl start hwtosys.service\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 15:")," Verify the script is up and running as a systemd service.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl status hwtosys.service\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 16:")," Reboot the board and you will the system clock is now in sync with the hardware clock. ")),(0,a.kt)("h2",{id:"m2-key-m"},"M.2 Key M"),(0,a.kt)("p",null,'M.2 Key M is a specification for the physical and electrical layout of an M.2 connector that supports high-speed data transfer using the PCIe (Peripheral Component Interconnect Express) interface. M.2 Key M connectors are commonly used for connecting solid-state drives (SSDs) and other high-performance expansion cards to a motherboard or other host device. The "Key M" designation refers to the specific pin configuration and keying of the M.2 connector, which determines the type of devices that can be connected to it.'),(0,a.kt)("h3",{id:"connection-overview-3"},"Connection Overview"),(0,a.kt)("p",null,"If you want to remove the included SSD and install a new one, you can follow the steps below. Here we only recommend to use Seeed SSDs with ",(0,a.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/M-2-2280-SSD-128GB-p-5332.html"},"128GB"),", ",(0,a.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/NVMe-M-2-2280-SSD-256GB-p-5333.html"},"256GB")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/NVMe-M-2-2280-SSD-512GB-p-5334.html"},"512GB")," storage because we have only tested those SSDs. Further this interface supports PCIe Gen4.0 SSDs."),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-Install-new-ssd.gif"})),(0,a.kt)("h3",{id:"usage-2"},"Usage"),(0,a.kt)("p",null,"We will explain how to do a simple benchmark on the connected SSD. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1:")," Check the write speed by executing the below command.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"sudo dd if=/dev/zero of=/home/nvidia/test bs=1M count=512 conv=fdatasync\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2:")," Check the read speed by executing the below commands. Make sure to execute this after executing the above command for write speed.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},'sudo sh -c "sync && echo 3 > /proc/sys/vm/drop_caches"\nsudo dd if=/home/nvidia/test of=/dev/null bs=1M count=512\n')),(0,a.kt)("h2",{id:"m2-key-e"},"M.2 Key E"),(0,a.kt)("p",null,'M.2 Key E is a specification for the physical and electrical layout of an M.2 connector that supports wireless communication modules, such as Wi-Fi and Bluetooth cards. The "Key E" designation refers to the specific pin configuration and keying of the M.2 connector, which is optimized for wireless networking devices. M.2 Key E connectors are commonly found on motherboards and other devices that require wireless connectivity options.'),(0,a.kt)("h3",{id:"connection-overview-4"},"Connection Overview"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-connect-wifi-model.gif"})),(0,a.kt)("h3",{id:"usage-3"},"Usage"),(0,a.kt)("p",null,"After installing wifi/bluetooth, you can see the wifi/bluetooth icon in the top right corner."),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-wifi-bluetooth-test.gif"})),(0,a.kt)("h4",{id:"wifi-test"},"Wifi test"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ifconfig\n")),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-wifi-test.png"})),(0,a.kt)("h4",{id:"bluetooth-test"},"Bluetooth test"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"bluetoothctl\npower on   #open bluetooth\nagent on   #registe agent\nscan on    #search other bluetooths\nconnect xx:xx:xx:xx #connect target bluetooth\npaired-devices #show all paired devices\n")),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-bluetooth-test.png"})),(0,a.kt)("h2",{id:"fan-control"},"Fan control"),(0,a.kt)("p",null,"nvfancontrol is a userspace fan speed control daemon. This manages the fan speed based on the temperature-to-fan-speed mapping table in the nvfancontrol configuration file."),(0,a.kt)("p",null,"There are some basic elements in the nvfancontrol service, including Tmargin, kickstart PWM, fan profile, fan control, and fan governor. All of these can be programmed via the configuration file based on the user\u2019s preferences. This chapter will explain each of them in the following sections."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"If you want to change  nvfancontrol.conf make sure you have read ",(0,a.kt)("a",{parentName:"p",href:"https://docs.nvidia.com/jetson/archives/r35.4.1/DeveloperGuide/text/SD/PlatformPowerAndPerformance/JetsonOrinNanoSeriesJetsonOrinNxSeriesAndJetsonAgxOrinSeries.html?highlight=fan#fan-profile-control"},"it"))),(0,a.kt)("h3",{id:"usage-4"},"Usage"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"Method 1",label:"Method 1",mdxType:"TabItem"},(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1:")," Stop the nvfancontrol systemd service.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl stop nvfancontrol\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2:")," Change nvfancontrol.conf. ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"vi /etc/nvfancontrol.conf \n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"After you change nvfancontrol.conf, print ",(0,a.kt)("inlineCode",{parentName:"p"},"Ese")," and ",(0,a.kt)("inlineCode",{parentName:"p"},":q")," to quit")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3:")," Remove the status file.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo rm /var/lib/nvfancontrol/status\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 4:")," Restart nvfancontrol systemd service.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl restart nvfancontrol\n"))),(0,a.kt)(o.Z,{value:"Method 2",label:"Method 2",mdxType:"TabItem"},(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1:"),"  Enter root model.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo -i\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2:"),"  Stop the nvfancontrol systemd service.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo systemctl stop nvfancontrol\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3:"),"  Change PWM value.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"echo 100 > /sys/devices/platform/pwm-fan/hwmon/hwmon3/pwm1\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"The larger of value, the faster of fan speed. PWM value should between 0 to 255, maybe ",(0,a.kt)("strong",{parentName:"p"},"hwmon3")," is not your pathword so check your own pathword")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 4:"),"  Check rpm.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"cat /sys/class/hwmon/hwmon0/rpm\n")))),(0,a.kt)("h2",{id:"dido"},"DI/DO"),(0,a.kt)("h3",{id:"the-detial-of-40-pin-header-is-shown-below"},"The detial of 40-pin header is shown below:"),(0,a.kt)("div",{class:"table-center"},(0,a.kt)("table",{style:{textAlign:"center"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Header Pin"),(0,a.kt)("th",null,"Module Pin Name"),(0,a.kt)("th",null,"Module Pin"),(0,a.kt)("th",null,"SoC Pin name"),(0,a.kt)("th",null,"Default Usage"),(0,a.kt)("th",null,"Alternate Funcationality"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"1"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Main 3.3V Supply"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Main 5.0V Supply"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"3"),(0,a.kt)("td",null,"I2C1_SDA"),(0,a.kt)("td",null,"191"),(0,a.kt)("td",null,"DP_AUX_CH3_N"),(0,a.kt)("td",null,"I2C #1 Data"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"4"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Main 5.0V Supply"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"5"),(0,a.kt)("td",null,"I2C1_SCL"),(0,a.kt)("td",null,"189"),(0,a.kt)("td",null,"DP_AUX_CH3_P"),(0,a.kt)("td",null,"I2C #1 Clock"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"7"),(0,a.kt)("td",null,"GPIO09"),(0,a.kt)("td",null,"211"),(0,a.kt)("td",null,"AUD_MCLK"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"Audio Master Clock")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"8"),(0,a.kt)("td",null,"UART1_TXD"),(0,a.kt)("td",null,"203"),(0,a.kt)("td",null,"UART1_TX"),(0,a.kt)("td",null,"UART #1 Transmit"),(0,a.kt)("td",null,"GPIO")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"9"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"10"),(0,a.kt)("td",null,"UART1_RXD"),(0,a.kt)("td",null,"205"),(0,a.kt)("td",null,"UART1_RX"),(0,a.kt)("td",null,"UART #1 Receive"),(0,a.kt)("td",null,"GPIO")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"11"),(0,a.kt)("td",null,"UART1_RTS*"),(0,a.kt)("td",null,"207"),(0,a.kt)("td",null,"UART1_RTS"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"UART #2 Request to Send")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"12"),(0,a.kt)("td",null,"I2S0_SCLK"),(0,a.kt)("td",null,"199"),(0,a.kt)("td",null,"DAP5_SCLK"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"Audio I2S #0 Clock")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"13"),(0,a.kt)("td",null,"SPI1_SCK"),(0,a.kt)("td",null,"106"),(0,a.kt)("td",null,"SPI3_SCK"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #1 Shift Clock")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"14"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"15"),(0,a.kt)("td",null,"GPIO12"),(0,a.kt)("td",null,"218"),(0,a.kt)("td",null,"TOUCH_CLK"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"16"),(0,a.kt)("td",null,"SPI1_CSI1*"),(0,a.kt)("td",null,"112"),(0,a.kt)("td",null,"SPI3_CS1"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #1 Chip Select #1")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"17"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"18"),(0,a.kt)("td",null,"SPI1_CSI0*"),(0,a.kt)("td",null,"110"),(0,a.kt)("td",null,"SPI3_CS0"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #0 Chip Select #0")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"19"),(0,a.kt)("td",null,"SPI0_MOSI"),(0,a.kt)("td",null,"89"),(0,a.kt)("td",null,"SPI1_MOSI"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #0 Master Out/Slave In")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"20"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"21"),(0,a.kt)("td",null,"SPI0_MISO"),(0,a.kt)("td",null,"93"),(0,a.kt)("td",null,"SPI1_MISO"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #0 Master In/Slave Out")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"22"),(0,a.kt)("td",null,"SPI1_MISO"),(0,a.kt)("td",null,"108"),(0,a.kt)("td",null,"SPI3_MISO"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #1 Master In/Slave Out")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"23"),(0,a.kt)("td",null,"SPI0_SCK"),(0,a.kt)("td",null,"91"),(0,a.kt)("td",null,"SPI1_SCK"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #0 Shift Clock")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"24"),(0,a.kt)("td",null,"SPI0_CS0*"),(0,a.kt)("td",null,"95"),(0,a.kt)("td",null,"SPI1_CS0"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #0 Chip Select #0")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"25"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"26"),(0,a.kt)("td",null,"SPI0_CS1*"),(0,a.kt)("td",null,"97"),(0,a.kt)("td",null,"SPI1_CS1"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #0 Chip Select #1")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"27"),(0,a.kt)("td",null,"I2C0_SDA"),(0,a.kt)("td",null,"187"),(0,a.kt)("td",null,"GEN2_I2C_SDA"),(0,a.kt)("td",null,"I2C #0 Data"),(0,a.kt)("td",null,"GPIO")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"28"),(0,a.kt)("td",null,"I2C0_SCL"),(0,a.kt)("td",null,"185"),(0,a.kt)("td",null,"GEN2_I2C_SCL"),(0,a.kt)("td",null,"I2C #0 Clock"),(0,a.kt)("td",null,"GPIO")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"29"),(0,a.kt)("td",null,"GPIO01"),(0,a.kt)("td",null,"118"),(0,a.kt)("td",null,"SOC_GPIO41"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"General Purpose Clock #0")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"30"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"31"),(0,a.kt)("td",null,"GPIO11"),(0,a.kt)("td",null,"216"),(0,a.kt)("td",null,"SOC_GPIO42"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"General Purpose Clock #1")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"32"),(0,a.kt)("td",null,"GPIO07"),(0,a.kt)("td",null,"206"),(0,a.kt)("td",null,"SOC_GPIO44"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"PWM")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"33"),(0,a.kt)("td",null,"GPIO13"),(0,a.kt)("td",null,"228"),(0,a.kt)("td",null,"SOC_GPIO54"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"PWM")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"34"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"35"),(0,a.kt)("td",null,"I2S0_FS"),(0,a.kt)("td",null,"197"),(0,a.kt)("td",null,"DAP5_FS"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"Audio I2S #0 Field Select")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"36"),(0,a.kt)("td",null,"UART1_CTS*"),(0,a.kt)("td",null,"209"),(0,a.kt)("td",null,"UART1_CTS"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"UART #1 Clear to Send")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"37"),(0,a.kt)("td",null,"SPI1_MOSI"),(0,a.kt)("td",null,"104"),(0,a.kt)("td",null,"SPI3_MOSI"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"SPI #1 Master Out/Slave In")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"38"),(0,a.kt)("td",null,"I2S0_DIN"),(0,a.kt)("td",null,"195"),(0,a.kt)("td",null,"DAP5_DIN"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"Audio I2S #0 Data in")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"39"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"40"),(0,a.kt)("td",null,"I2S0_DOUT"),(0,a.kt)("td",null,"193"),(0,a.kt)("td",null,"DAP5_DOUT"),(0,a.kt)("td",null,"GPIO"),(0,a.kt)("td",null,"Audio I2S #0 Data Out"))))),(0,a.kt)("h3",{id:"uart"},"UART"),(0,a.kt)("p",null,"UART stands for Universal Asynchronous Receiver/Transmitter. It is a communication protocol used for serial communication between two devices. UART communication involves two pins: one for transmitting data (TX) and one for receiving data (RX). It is asynchronous, meaning that data is transmitted without a shared clock signal between the devices. UART is commonly used in various applications such as microcontrollers, sensors, and communication between different electronic devices."),(0,a.kt)("h4",{id:"connection-overview-5"},"Connection Overview"),(0,a.kt)("p",null,"The UART interface is using the pin below, or you can use another UART interface on J401:"),(0,a.kt)("div",{class:"table-center"},(0,a.kt)("table",{style:{textAlign:"center"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Header Pin"),(0,a.kt)("th",null,"Module Pin Name"),(0,a.kt)("th",null,"Module Pin"),(0,a.kt)("th",null,"SoC Pin name"),(0,a.kt)("th",null,"Default Usage"),(0,a.kt)("th",null,"Alternate Funcationality"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"8"),(0,a.kt)("td",null,"UART1_TXD"),(0,a.kt)("td",null,"203"),(0,a.kt)("td",null,"UART1_TX"),(0,a.kt)("td",null,"UART #1 Transmit"),(0,a.kt)("td",null,"GPIO")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"10"),(0,a.kt)("td",null,"UART1_RXD"),(0,a.kt)("td",null,"205"),(0,a.kt)("td",null,"UART1_RX"),(0,a.kt)("td",null,"UART #1 Receive"),(0,a.kt)("td",null,"GPIO"))))),"Connect the J401 with TTL with UART as below:",(0,a.kt)("div",{class:"table-center"},(0,a.kt)("table",{style:{textAlign:"center"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"J401 Header Pin"),(0,a.kt)("th",null," Usage"),(0,a.kt)("th",null,"USB translate TTL"),(0,a.kt)("th",null,"Usage"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"GND"),(0,a.kt)("td",null,"Ground")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"8"),(0,a.kt)("td",null,"UART1_TXD"),(0,a.kt)("td",null,"U_RX"),(0,a.kt)("td",null,"UART_RX")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"10"),(0,a.kt)("td",null,"UART1_RXD"),(0,a.kt)("td",null,"U_TX"),(0,a.kt)("td",null,"UART_TX"))))),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-UART-connect.gif"})),(0,a.kt)("h4",{id:"usage-5"},"Usage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 1:")," Install ",(0,a.kt)("a",{parentName:"li",href:"https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"},"puTTy")," on your windows laptop, and set puTTy as below:")),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-windows-uart-set.png"})),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 2:")," Install PuTTy on Jetson, open your terminal(ALT+Ctrl+T) and type the following command.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo apt install putty\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Step 3:")," Use PuTTy on Windows send 'hello linux' to Jetson, and use PuTTy on Jetson send 'hello windows' to windwos.")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Make sure your baudrate have be set 115200.")),(0,a.kt)("p",null,"The result is as below:"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-uart-result.gif"})),(0,a.kt)("h3",{id:"i2c"},"I2C"),(0,a.kt)("p",null,"I2C stands for Inter-Integrated Circuit. It is a widely used serial communication protocol that enables communication between multiple integrated circuits in a system. I2C uses two bidirectional lines: one for data (SDA) and one for clock (SCL). Devices connected on an I2C bus can act as either a master or a slave, allowing for multiple devices to communicate with each other. I2C is popular for its simplicity, flexibility, and ability to connect a variety of devices such as sensors, memory chips, and other peripherals in embedded systems and electronic devices."),(0,a.kt)("h4",{id:"connection-overview-6"},"Connection Overview"),(0,a.kt)("p",null,"The I2C interface is using pin as below, or you can use other I2C interface on J401:"),(0,a.kt)("div",{class:"table-center"},(0,a.kt)("table",{style:{textAlign:"center"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Header Pin"),(0,a.kt)("th",null,"Module Pin Name"),(0,a.kt)("th",null,"Module Pin"),(0,a.kt)("th",null,"SoC Pin name"),(0,a.kt)("th",null,"Default Usage"),(0,a.kt)("th",null,"Alternate Funcationality"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Main 5.0V Supply"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"3"),(0,a.kt)("td",null,"I2C1_SDA"),(0,a.kt)("td",null,"191"),(0,a.kt)("td",null,"DP_AUX_CH3_N"),(0,a.kt)("td",null,"I2C #1 Data"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"5"),(0,a.kt)("td",null,"I2C1_SCL"),(0,a.kt)("td",null,"189"),(0,a.kt)("td",null,"DP_AUX_CH3_P"),(0,a.kt)("td",null,"I2C #1 Clock"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"-"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"-")))),(0,a.kt)("p",null,"Connect the J401 to ",(0,a.kt)("a",{parentName:"p",href:"https://www.seeedstudio.com/Grove-3-Axis-Digital-Accelerometer-1-5g.html"},"Grove-3-Axis Digital Accelerometer")," with I2C as below:"),(0,a.kt)("div",{class:"table-center"},(0,a.kt)("table",{style:{textAlign:"center"}},(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"J401"),(0,a.kt)("th",null,"Usage"),(0,a.kt)("th",null,"Grove-3-Axis Digital Accelerometer"),(0,a.kt)("th",null,"Usage"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,"2"),(0,a.kt)("td",null,"5V supply"),(0,a.kt)("td",null,"Vcc"),(0,a.kt)("td",null,"-")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"3"),(0,a.kt)("td",null,"I2C1_SDA"),(0,a.kt)("td",null,"SDA"),(0,a.kt)("td",null,"I2C_SDA")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"5"),(0,a.kt)("td",null,"I2C1_SCL"),(0,a.kt)("td",null,"SCL"),(0,a.kt)("td",null,"I2C_SCL")),(0,a.kt)("tr",null,(0,a.kt)("td",null,"6"),(0,a.kt)("td",null,"Ground"),(0,a.kt)("td",null,"GND"),(0,a.kt)("td",null,"Ground")))),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-I2C-connect.gif"})),(0,a.kt)("h4",{id:"test"},"Test"),(0,a.kt)("p",null,"Open your terminal(ALT+Ctrl+T) and type the following command:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"i2cdetect -y -r 7\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Your channel may be different from mine in the commmand: ",(0,a.kt)("inlineCode",{parentName:"p"},"i2cdetect -y -r x"),".")),(0,a.kt)("p",null,"You will see the result as below, before connecting to the I2C, no I2C device was detected on channel 7, but afterwards an I2C device with the address 0x19 was detected.:"),(0,a.kt)("div",{align:"center"},(0,a.kt)("img",{width:"800",src:"https://files.seeedstudio.com/wiki/reComputer-Jetson/A608/J401-I2C-test.png"})),(0,a.kt)("h2",{id:"tech-support--product-discussion"},"Tech Support & Product Discussion"),(0,a.kt)("p",null,"Thank you for choosing our products! We are here to provide you with different support to ensure that your experience with our products is as smooth as possible. We offer several communication channels to cater to different preferences and needs."),(0,a.kt)("div",{class:"button_tech_support_container"},(0,a.kt)("a",{href:"https://forum.seeedstudio.com/",class:"button_forum"}),(0,a.kt)("a",{href:"https://www.seeedstudio.com/contacts",class:"button_email"})),(0,a.kt)("div",{class:"button_tech_support_container"},(0,a.kt)("a",{href:"https://discord.gg/eWkprNDMU7",class:"button_discord"}),(0,a.kt)("a",{href:"https://github.com/Seeed-Studio/wiki-documents/discussions/69",class:"button_discussion"})))}m.isMDXComponent=!0}}]);